{"version":3,"sources":["components/Atoms/InputElement/index.js","components/Atoms/Accordion/index.js","components/Atoms/slidedown/index.js","components/Atoms/SearchBox/index.js","components/Atoms/popup/popup.js","components/Atoms/DatePicker/index.js","components/Page/EventMonitor/ExceptionMonitor/index.js","components/Page/EventMonitor/EventMonitor_TabList/index.js","components/Page/EventMonitor/index.js"],"names":["InputElement","disabled","this","props","readOnly","undefined","value","type","id","className","onChange","e","JsonName","onClick","clickInput","onInput","placeholder","onFocus","focus","onBlur","blur","multiple","defaultValue","Component","defaultProps","Accordion","state","callback","status","setState","headerComponent","header","contentComponent","Content","menuList","map","i","key","isSingleOpen","Math","random","sliderStatus","open","isOpen","title","content","data","React","Slide","customToggler","close","styleForIcon","flex","justifyContent","useState","setOpen","console","log","style","cursor","position","display","SearchBox","list","filterBy","event","searchValue","target","toString","toLowerCase","newList","Array","isArray","length","filter","list_item","findIndex","filterContent","includes","Popup","show","enterAnimate","leaveAnimate","heading","children","clickHandler","buttonText","Date_picker","Date","startDate","setStartDate","years","months","renderCustomHeader","date","changeYear","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","year","src","arrow","getMonth","selected","showYearDropdown","dropdownMode","ExceptionMonitor","FromDate","moment","toISOString","split","ToDate","searchHandler","searchBoxValue","cancelHandler","popUp","exceptionList","EventMonitorDetails","listKey","Object","keys","selectedException","time","selectedDate","selectedHour","val","createdTime","trim","getHours","errortype","view","createChartComponentData","replace","timeWithCount","count","pop","join","chartOrderByDate","Set","SearchString","onFormSubmit","bind","GetEventMonitorList","chartData","chart","searchString","item","match","Getbackdate","Filter","alt","format","height","index","errorCode","errorDescription","errorLayer","MainTablistView","TabItem","ExceptionData","ErrorData","selectedInstance","showDetails","tab","mapDispatchToProps","Event_Monitor_Action","getEventMonitorDetails","connect","EventMonitorReducer","EventMoniter"],"mappings":"yLAEMA,G,wLACM,IAAD,OACDC,KACJC,KAAKC,MAAMF,UAA2C,mBAAxBC,KAAKC,MAAMF,UAGrCG,KACJF,KAAKC,MAAMC,UAA2C,mBAAxBF,KAAKC,MAAMC,UAG3C,YAA4BC,IAArBH,KAAKC,MAAMG,MAChB,2BACEA,MAAOJ,KAAKC,MAAMG,MAClBC,KAAML,KAAKC,MAAMI,KACjBC,GAAIN,KAAKC,MAAMK,GACfC,UAAW,eAAiBP,KAAKC,MAAMM,UACvCL,SAAUA,EACVH,SAAUA,EACVS,SAAU,SAAAC,GAEN,EAAKR,MAAMO,UACoB,oBAAxB,EAAKP,MAAMO,UAElB,EAAKP,MAAMO,SAASC,EAAG,EAAKR,MAAMS,WAGtCC,QAASX,KAAKC,MAAMW,WACpBC,QAASb,KAAKC,MAAMY,QACpBC,YAAad,KAAKC,MAAMa,YACxBC,QAASf,KAAKC,MAAMe,MACpBC,OAAQjB,KAAKC,MAAMiB,KACnBC,SAAUnB,KAAKC,MAAMkB,WAGvB,2BACEd,KAAML,KAAKC,MAAMI,KACjBC,GAAIN,KAAKC,MAAMK,GACfC,UAAW,eAAiBP,KAAKC,MAAMM,UACvCR,SAAUA,EACVS,SAAU,SAAAC,GAEN,EAAKR,MAAMO,UACoB,oBAAxB,EAAKP,MAAMO,UAElB,EAAKP,MAAMO,SAASC,EAAG,EAAKR,MAAMS,WAGtCC,QAASX,KAAKC,MAAMW,WACpBC,QAASb,KAAKC,MAAMY,QACpBC,YAAad,KAAKC,MAAMa,YACxBC,QAASf,KAAKC,MAAMe,MACpBC,OAAQjB,KAAKC,MAAMiB,KACnBC,SAAUnB,KAAKC,MAAMkB,SACrBC,aAAcpB,KAAKC,MAAMmB,mB,GArDNC,cA2D3BvB,EAAawB,aAAe,CAC1Bd,SAAU,aACVK,QAAS,aACTD,WAAY,aACZI,MAAO,aACPE,KAAM,aACNX,UAAW,GACXD,GAAI,GACJQ,YAAa,GACbT,KAAM,OACNc,UAAU,EACVpB,UAAU,EACVqB,aAAc,IAGDtB,O,uHCvETyB,E,2MACJC,MAAQ,G,EAERC,SAAW,SAACrB,EAAOsB,GACjB,EAAKC,SAAS,IACd,EAAK1B,MAAMU,QAAQP,EAAOsB,I,EAG5BE,gBAAkB,SAAAC,GAChB,OACE,yBAAKtB,UAAU,WACb,2BAAOA,UAAU,aACdsB,EACD,8BACG,IACD,0BAAMtB,UAAU,SACd,kBAAC,IAAD,OAEF,0BAAMA,UAAU,OACd,kBAAC,IAAD,W,EAQZuB,iBAAmB,SAAAC,GACjB,OAAO,yBAAKxB,UAAU,eAAewB,I,wEAG7B,IAAD,OACP,OAAO/B,KAAKC,MAAM+B,SAASC,KAAI,SAAC7B,EAAO8B,GAAR,OAC7B,yBACE3B,UAAU,MACV4B,IAAK,EAAKlC,MAAMmC,aAAeC,KAAKC,SAAWJ,EAAIA,GAEnD,yBAAK3B,UAAU,QACb,yBAAKA,UAAU,OACb,kBAAC,IAAD,eACEgC,aAAc,SAAAb,GAAM,OAAI,EAAKD,SAASrB,EAAOsB,IAC7Cc,OAAMpC,EAAMqC,OACZZ,OAAQ,EAAKD,gBAAgBxB,EAAMsC,OACnCC,QAAS,EAAKb,iBAAiB,kBAAC1B,EAAMwC,KAAP,QAC3B,EAAK3C,kB,GA5CC4C,IAAMxB,WAqD9BE,EAAUD,aAAe,CACvBX,QAAS,aACTyB,cAAc,GAGDb,O,sEC3DTuB,G,OAAQ,SAAC,GAQR,IAAD,IAPJN,YAOI,aANJG,eAMI,MANM,KAMN,MALJd,cAKI,MALK,KAKL,EAJJU,EAII,EAJJA,aAII,IAHJQ,qBAGI,MAHY,CAAEP,KAAM,kBAAM,MAAMQ,MAAO,kBAAM,OAG7C,MAFJC,oBAEI,MAFW,CAAEC,KAAM,GAAKC,eAAgB,SAExC,MADJ5C,iBACI,MADQ,GACR,IACsB6C,mBAASZ,GAD/B,mBACGC,EADH,KACWY,EADX,KAUJ,OAFAC,QAAQC,IAAIZ,EAAS,eAGnB,yBACEpC,UAAS,iBAAYkC,EAAS,eAAiB,IAC/Ce,MAAO,CAAEC,OAAQ,UAAWC,SAAU,aAEtC,yBACEnD,UAAU,gBACVI,QAdgB,SAAAF,GACpB4C,GAASZ,GACTF,GAAcE,EAAQhC,IAalB+C,MAAO,CAAEG,QAAS,SAElB,yBAAKH,MAAO,CAAEN,KAAM,IAAMrB,GAC1B,yBAAK2B,MAAOP,GACTR,EAASM,EAAcP,KAAOO,EAAcC,QAGjD,kBAAC,YAAD,CAAWzC,UAAS,gCAA2BA,IAC5CkC,EAASE,EAAU,SAM5BG,EAAMxB,aAAe,CACnBiB,aAAc,cAGDO,O,wFC5CTc,EAAY,SAAC,GAAuD,IAArDrD,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,SAAUqD,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,SAAa7D,EAAY,0DAqBvE,OACE,yBAAKM,UAAU,cACb,kBAAC,IAAD,CAAUA,UAAW,sBAAwBA,IAC7C,kBAAC,IAAD,eACEA,UAAW,eAAiBA,EAC5BC,SAzBgB,SAAAuD,GAEpB,IAAMC,EAAcD,EAAME,OAAO7D,MAAM8D,WAAWC,cAG5CC,EACJC,MAAMC,QAAQT,IAASC,EAASS,OAC5BV,EAAKW,QAAO,SAAAC,GAOV,OAAmB,IALJX,EAASY,WAAU,SAAAC,GAChC,OAAOF,EAAUE,GACdR,cACAS,SAASZ,SAIhBH,EAENrD,EAASuD,EAAOK,KAQRnE,MAMZ2D,EAAUtC,aAAe,CAEvBf,UAAW,GAEXC,SAAU,aAEVqD,KAAM,GAINC,SAAU,IAGGF,O,kKC5CTiB,E,iLACM,IAAD,OACP,OACE,kBAAC,IAAD,CACEC,KAAM9E,KAAKC,MAAMwC,OACjBlC,UAAU,qBACVwE,aAAa,qBACbC,aAAa,sBAEb,yBAAKzE,UAAU,mBACb,yBAAKA,UAAU,eACb,2BAAIP,KAAKC,MAAMgF,UAEjB,yBAAK1E,UAAU,iBAAiBP,KAAKC,MAAMiF,UAC3C,yBAAK3E,UAAU,iBACb,yBAAKA,UAAU,cACb,kBAAC,IAAD,CACEA,UAAU,UACVI,QAAS,SAAAF,GACH,EAAKR,MAAMkF,cACb,EAAKlF,MAAMkF,aAAa1E,EAAG,UAI9BT,KAAKC,MAAMmF,YAEd,kBAAC,IAAD,CACE7E,UAAU,UACVI,QAAS,SAAAF,GAGP,EAAKR,MAAMkF,aAAa1E,EAAG,YAL/B,kB,GA1BMoC,IAAMxB,WA4C1BwD,EAAMvD,aAAe,CACnBmB,QAAQ,EACRwC,QAAS,QACTG,WAAY,OACZD,aAAc,cAGDN,O,6YCpDA,SAASQ,EAAYpF,GAAQ,IAAD,EACPmD,mBAAS,IAAIkC,MADN,mBAClCC,EADkC,KACvBC,EADuB,KAEnCC,EAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC/DC,EAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEF,OACE,6BACE,kBAAC,IAAD,CACEC,mBAAoB,gBAClBC,EADkB,EAClBA,KACAC,EAFkB,EAElBA,WACAC,EAHkB,EAGlBA,cACAC,EAJkB,EAIlBA,cACAC,EALkB,EAKlBA,wBALkB,EAMlBC,wBANkB,OAQlB,6BACE,yBAAK1F,UAAU,aACb,yBAAKA,UAAU,UACZkF,EAAMxD,KAAI,SAAAiE,GAAI,OACb,yBAAKvF,QAAS,kBAAMkF,EAAWK,IAAO3F,UAAU,UAC7C2F,QAKT,yBAAK3F,UAAU,mBACb,yBACEA,UAAU,YACVI,QAASmF,EACT/F,SAAUiG,EACVG,IAAKC,MAEP,yBAAK7F,UAAU,aAAamF,EAAOE,EAAKS,aACxC,yBACE9F,UAAU,aACVI,QAASoF,EACThG,SAAUiG,EACVG,IAAKC,SAKbE,SAAUf,EACV/E,SAAU,SAAAoF,GACRJ,EAAaI,IAGfW,kBAAgB,EAChBC,aAAa,Y,+BC0QNC,E,YApTf,WAAYxG,GAAQ,IAAD,8BACjB,4CAAMA,KAVNyG,SACAC,IAAO,IAAIrB,MACRsB,cACAC,MAAM,KAAK,GAAK,IAMF,EALnBC,OACEH,IAAO,IAAIrB,MACRsB,cACAC,MAAM,KAAK,GAAK,IAEF,EAoCjBE,cAAgB,SAACtG,EAAGoD,GAClB,EAAKlC,SAAS,CAAEqF,eAAgBvG,EAAEwD,OAAO7D,MAAOyD,UArCjC,EAuCjBoD,cAAgB,SAAAxG,GACd,EAAKkB,SAAS,CAAEuF,OAAO,KAxCR,EAwDjBC,cAAgB,WACd,IAAMvE,EAAO,EAAK3C,MAAMmH,oBACpBC,EAAUC,OAAOC,KAAK3E,GAAM,GAChC,GAAI,EAAKpB,MAAMgG,kBAAkBC,KAAM,CACrC,IAAMC,EAAe,EAAKlG,MAAMgG,kBAAkB5B,KAC5C+B,EAAe,EAAKnG,MAAMgG,kBAAkBC,KAAKZ,MAAM,KAAK,GAElE,GAAIQ,EAEF,OADWzE,EAAKyE,GACJ7C,QAAO,SAAAoD,GACjB,IAAMhC,EAAOgC,EAAIC,YAAYC,OAAOjB,MAAM,KAAK,GACzCY,EAAO,IAAInC,KAAKsC,EAAIC,aAAaE,WAKvC,OAJAzE,QAAQC,IACNqC,GAAQ8B,GAAgBC,GAAgBF,EACxC,aAGA7B,GAAQ8B,GACRC,GAAgBF,GAChBG,EAAII,YAAc,EAAK/H,MAAMgI,QAQrC,MAAO,IAnFQ,EAsFjBC,yBAA2B,WACzB,IAAMtF,EAAO,EAAK3C,MAAMmH,oBACpBvD,EAAOyD,OAAOC,KAAK3E,GAAM,GAC7B,OAAIiB,EAIFA,GADAA,GADAA,EAAOA,EAAKsE,QAAQ,QAAS,KACjBtB,MAAM,MACN5E,KAAI,SAAA2F,GAAQ,IAAD,EACOA,EAAIE,OAAOjB,MAAM,KADxB,mBAChBjB,EADgB,KACVwC,EADU,KAErB,GAAIA,EAAe,CAAC,IAAD,EACGA,EAAcvB,MAAM,KADvB,mBACZY,EADY,KACNY,EADM,KAOjB,OALIZ,KACFA,EAAOA,EAAKZ,MAAM,MACTtC,OAAS,GAAGkD,EAAKa,MAC1Bb,EAAOA,EAAKc,KAAK,MAEZ,CAAE3C,OAAM6B,OAAMY,SAEvB,MAAO,CAAEzC,WAIN,IA5GQ,EA+GjB4C,iBAAmB,SAAA3E,GACjBP,QAAQC,IAAIM,EAAM,aAElB,OAAIQ,MAAMC,QAAQT,GACD,YAAO,IAAI4E,IAAI5E,EAAK5B,KAAI,SAAAW,GAAI,OAAIA,EAAKgD,UACnC3D,KAAI,SAAA2F,GACnB,IAAMxH,EAAQyD,EAAKW,QAAO,SAAA5B,GAAI,OAAIA,EAAKgD,OAASgC,KAChD,MAAO,CACLhC,KAAMgC,EACNjF,QAASvC,MAIR,IAzHT,EAAKoB,MAAQ,CACXgG,kBAAmB,GACnBkB,aAAc,GACdxB,OAAO,GAET,EAAKyB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKpI,SAAW,EAAKA,SAASoI,KAAd,gBATC,E,uFA0CSnI,GACxBT,KAAK2B,SAAS,CACZuF,OAAO,M,mCAGEzG,EAAGiG,EAAUI,GACxB9G,KAAKC,MAAM4I,oBAAoB7I,KAAK0G,SAAU1G,KAAK8G,QACnDxD,QAAQC,IAAIvD,KAAK0G,SAAU1G,KAAKC,OAChCD,KAAK2B,SAAS,CAAEuF,OAAO,M,+BAEhBzG,EAAGiG,EAAUI,GACpB9G,KAAK2B,SAAS,CAAE+E,SAAUjG,EAAEwD,OAAOyC,SAAUI,OAAQrG,EAAEwD,OAAO6C,SAC9DxD,QAAQC,IAAImD,EAAUI,EAAQ,gB,+BAyEtB,IAAD,OACPxD,QAAQC,IAAIvD,KAAKwB,MAAO,QACxB,IAAIsH,EAAY9I,KAAKkI,2BAEfa,EAAQ/I,KAAKwI,iBAAiBM,GAChC3B,EAAgBnH,KAAKmH,gBACrB6B,EAAehJ,KAAKwB,MAAMkH,aAAaZ,OAAO3D,cAalD,OAZI6E,EAAazE,OAAS,IACxB4C,EAAgBA,EAAc3C,QAAO,SAAAyE,GAQnC,OAPiB3B,OAAOC,KAAK0B,GAAMzE,QAAO,SAAArC,GAAG,MACnC,OAARA,KAEI8G,EAAK9G,GAAKgC,cAAc+E,MAAMF,MAIpBzE,OAAS,MAI3B,oCACE,kBAAC,IAAD,CACE9B,OAAQzC,KAAKwB,MAAM0F,MACnB9B,WAAY,OACZH,QAAS,8BACTE,aAAc,SAAA1E,GAAC,OAAI,EAAKkI,aAAalI,EAAG,EAAKiG,SAAU,EAAKI,UAE5D,yBAAKvG,UAAU,kBACb,yBAAKA,UAAU,oBACd,0CACC,kBAAC8E,EAAD,CACA9E,UAAU,uBACRO,YAAY,kBACZT,KAAK,OACL8I,YAAa,SAAAzC,GACX,EAAKA,SAAWC,IAAOD,GACpBE,cACAuB,QAAQ,IAAK,KACbtB,MAAM,KAAK,OAIpB,yBAAKtG,UAAU,oBACd,uCACC,kBAAC8E,EAAD,CACA9E,UAAU,uBACRO,YAAY,gBACZT,KAAK,OACL8I,YAAa,SAAArC,GACX,EAAKA,OAASH,IAAOG,GAClBF,cACAuB,QAAQ,IAAK,KACbtB,MAAM,KAAK,SAMxB,yBAAKtG,UAAU,8BACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,+BACb,kBAACqD,EAAA,EAAD,CACE9C,YAAY,iBACZN,SAAU,SAAAC,GAAC,OAAI,EAAKkB,SAAS,CAAE+G,aAAcjI,EAAEwD,OAAO7D,SACtDyD,KAAM7D,KAAKwB,MAAM2F,cACjB/G,MAAOJ,KAAKwB,MAAMkH,aAClBnI,UAAU,2BAGf,yBAAKA,UAAU,wBAAf,IAGE,yBAAM4F,IAAKiD,IAAQC,IAAK,GAE1B1I,QAAS,kBAAI,EAAKgB,SAAS,CAACuF,OAAM,SAInC,yBAAK3G,UAAU,yBAEb,yBAAKA,UAAU,sCACZwI,EAAM9G,KAAI,SAAA8G,GACTzF,QAAQC,IAAI,EAAK/B,MAAMgG,kBAAmBuB,GADxB,MAEK,EAAKvH,MAAMgG,kBAA1B5B,EAFU,EAEVA,KAAM6B,EAFI,EAEJA,KACd,OACE,yBAAKlH,UAAU,cACb,0BAAMA,UAAU,cACboG,IAAOoC,EAAMnD,MAAM0D,OAAO,cAI5BP,EAAMpG,QAAQV,KAAI,SAAAU,GACjB,OACE,yBACEpC,UAAS,4BACPqF,IAASjD,EAAQiD,MAAQ6B,IAAS9E,EAAQ8E,KACtC,uBACA,IAEN9G,QAAS,WACP,EAAKgB,SAAS,CAAE6F,kBAAmB7E,MAGpCoG,EAAMpG,QACP,yBACEpC,UAAU,oBACViD,MAAO,CAAE+F,OAAwB,GAAhB5G,EAAQ0F,MACpB,OACI,yBACT9H,UAAU,oBACViD,MAAO,CAAE+F,OAAwB,EAAhB5G,EAAQ0F,MACpB,OAEP,yBAAK9H,UAAU,sBACZoC,EAAQ8E,gBAY3B,yBAAKlH,UAAU,kCACZ4G,EAAclF,KAAI,SAACW,EAAM4G,GAAP,OACjB,kBAACjI,EAAA,EAAD,CACEhB,UAAU,sBACVyB,SAAU,CACR,CACEU,MACE,6BACG,IACD,yBAAKnC,UAAU,wBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,sBACZqC,EAAK6G,UACN,yBAAKlJ,UAAU,sBACZqC,EAAK8G,mBAGV,yBAAKnJ,UAAU,4BACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,6BACZqC,EAAK+G,cAIZ,yBAAKpJ,UAAU,0BAEZoG,IAAO/D,EAAKiF,aAAayB,OAAO,aAFnC,IAGE,8BACG,IACA3C,IAAO/D,EAAKiF,aAAayB,OAAO,eAO7C1G,KAAM,kBACJ,yBACErC,UAAU,8BACViD,MAAO,CAAEE,SAAU,aAEnB,yBAAKnD,UAAU,oBAAoBqC,EAAKoF,2B,GAhTjC3G,a,yBCNzBuI,E,YACJ,WAAY3J,GAAQ,IAAD,8BACjB,4CAAMA,KAaR4J,QAAU,iBAAM,CACd,CACEnH,MAAO,oBACPoH,cAAe,GACfzI,UAAW,kBAAC,EAAD,eAAkB4G,KAAM,aAAiB,EAAKhI,SAE3D,CACEyC,MAAO,gBACPqH,UAAW,GACX1I,UAAW,kBAAC,EAAD,iBAAsB,EAAKpB,MAA3B,CAAkCgI,KAAM,cArBrD,EAAKzG,MAAQ,CACXlB,GAAI,IACJ0H,UAAW,IACXgC,iBAAkB,GAClBxC,kBAAmB,GAEnByC,YAAa,SAAAjC,GACX,EAAKrG,SAAS,CAAEqG,UAAWA,MATd,E,iFAiCjBhI,KAAKC,MAAM4I,wB,+BAIX,IAAIgB,EAAU7J,KAAK6J,UAEnB,OACE,oCACE,kBAAC,IAAD,CAAMtJ,UAAU,kBACd,kBAAC,IAAD,CAASA,UAAU,sBAChBsJ,EAAQ5H,KAAI,SAACiI,EAAKV,GAAN,OACX,kBAAC,IAAD,CAAKjJ,UAAU,WAAW4B,IAAKqH,GAC5BU,EAAIxH,WAKVmH,EAAQ5H,KAAI,SAACiI,EAAKV,GAAN,OACX,kBAAC,IAAD,CAAUjJ,UAAU,YAAY4B,IAAKqH,GACnC,iCAAOU,EAAI7I,qB,GArDKA,aAiExB8I,EAAqB,CACzBtB,oBAAqBuB,IAAqBC,wBAO7BC,eALS,SAAA9I,GACtB,MAAO,CACL4F,oBAAqB5F,EAAM+I,uBAGSJ,EAAzBG,CAA6CV,G,4CC5EvCY,E,iLAEjB,OACE,yBAAKjK,UAAU,QACb,kBAAC,EAAD,W,GAJkCc","file":"static/js/10.546c06e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../InputElement/InputElement.scss';\r\nclass InputElement extends Component {\r\n  render() {\r\n    const disabled =\r\n      this.props.disabled && typeof this.props.disabled === 'boolean'\r\n        ? true\r\n        : false;\r\n    const readOnly =\r\n      this.props.readOnly && typeof this.props.readOnly === 'boolean'\r\n        ? true\r\n        : false;\r\n    return this.props.value !== undefined ? (\r\n      <input\r\n        value={this.props.value}\r\n        type={this.props.type}\r\n        id={this.props.id}\r\n        className={'input-style ' + this.props.className}\r\n        readOnly={readOnly}\r\n        disabled={disabled}\r\n        onChange={e => {\r\n          if (\r\n            this.props.onChange &&\r\n            typeof this.props.onChange === 'function'\r\n          ) {\r\n            this.props.onChange(e, this.props.JsonName);\r\n          }\r\n        }}\r\n        onClick={this.props.clickInput}\r\n        onInput={this.props.onInput}\r\n        placeholder={this.props.placeholder}\r\n        onFocus={this.props.focus}\r\n        onBlur={this.props.blur}\r\n        multiple={this.props.multiple}\r\n      />\r\n    ) : (\r\n      <input\r\n        type={this.props.type}\r\n        id={this.props.id}\r\n        className={'input-style ' + this.props.className}\r\n        disabled={disabled}\r\n        onChange={e => {\r\n          if (\r\n            this.props.onChange &&\r\n            typeof this.props.onChange === 'function'\r\n          ) {\r\n            this.props.onChange(e, this.props.JsonName);\r\n          }\r\n        }}\r\n        onClick={this.props.clickInput}\r\n        onInput={this.props.onInput}\r\n        placeholder={this.props.placeholder}\r\n        onFocus={this.props.focus}\r\n        onBlur={this.props.blur}\r\n        multiple={this.props.multiple}\r\n        defaultValue={this.props.defaultValue}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nInputElement.defaultProps = {\r\n  onChange: () => {},\r\n  onInput: () => {},\r\n  clickInput: () => {},\r\n  focus: () => {},\r\n  blur: () => {},\r\n  className: '',\r\n  id: '',\r\n  placeholder: '',\r\n  type: 'text',\r\n  multiple: false,\r\n  disabled: false,\r\n  defaultValue: '',\r\n};\r\n\r\nexport default InputElement;\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../Accordion/Accordion.scss';\r\nimport { FaAngleDown, FaAngleUp } from 'react-icons/fa';\r\nimport Slide from '../slidedown';\r\n\r\nclass Accordion extends React.Component {\r\n  state = {};\r\n\r\n  callback = (value, status) => {\r\n    this.setState({});\r\n    this.props.onClick(value, status);\r\n  };\r\n\r\n  headerComponent = header => {\r\n    return (\r\n      <div className=\"heading\">\r\n        <label className=\"tab-label\">\r\n          {header}\r\n          <span>\r\n            {' '}\r\n            <span className=\"minus\">\r\n              <FaAngleUp />\r\n            </span>\r\n            <span className=\"add\">\r\n              <FaAngleDown />\r\n            </span>\r\n          </span>\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  contentComponent = Content => {\r\n    return <div className=\"tab-content\">{Content}</div>;\r\n  };\r\n\r\n  render() {\r\n    return this.props.menuList.map((value, i) => (\r\n      <div\r\n        className=\"row\"\r\n        key={this.props.isSingleOpen ? Math.random() * i : i}\r\n      >\r\n        <div className=\"tabs\">\r\n          <div className=\"tab\">\r\n            <Slide\r\n              sliderStatus={status => this.callback(value, status)}\r\n              open={value.isOpen ? true : false}\r\n              header={this.headerComponent(value.title)}\r\n              content={this.contentComponent(<value.data />)}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nAccordion.defaultProps = {\r\n  onClick: () => {},\r\n  isSingleOpen: false,\r\n};\r\n\r\nexport default Accordion;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { SlideDown } from 'react-slidedown';\r\nimport 'react-slidedown/lib/slidedown.css';\r\n\r\nconst Slide = ({\r\n  open = false,\r\n  content = null,\r\n  header = null,\r\n  sliderStatus,\r\n  customToggler = { open: () => null, close: () => null },\r\n  styleForIcon = { flex: 0.1, justifyContent: 'right' },\r\n  className = '',\r\n}) => {\r\n  const [isOpen, setOpen] = useState(open);\r\n\r\n  const handleToggler = e => {\r\n    setOpen(!isOpen);\r\n    sliderStatus(!isOpen, e);\r\n  };\r\n\r\n  console.log(content, 'contentdata');\r\n\r\n  return (\r\n    <div\r\n      className={`slider ${isOpen ? 'active-slide' : ''}`}\r\n      style={{ cursor: 'pointer', position: 'relative' }}\r\n    >\r\n      <div\r\n        className=\"slider-header\"\r\n        onClick={handleToggler}\r\n        style={{ display: 'flex' }}\r\n      >\r\n        <div style={{ flex: 1 }}>{header}</div>\r\n        <div style={styleForIcon}>\r\n          {isOpen ? customToggler.open : customToggler.close}\r\n        </div>\r\n      </div>\r\n      <SlideDown className={`my-dropdown-slidedown ${className}`}>\r\n        {isOpen ? content : null}\r\n      </SlideDown>\r\n    </div>\r\n  );\r\n};\r\n\r\nSlide.defaultProps = {\r\n  sliderStatus: () => {},\r\n};\r\n\r\nexport default Slide;\r\n","import React from 'react';\nimport InputElement from '../InputElement';\nimport './search-box.scss';\nimport { MdSearch } from 'react-icons/md';\nconst SearchBox = ({ className, onChange, list, filterBy, ...props }) => {\n  const updateContent = event => {\n    // getting searchbox value\n    const searchValue = event.target.value.toString().toLowerCase();\n\n    // using filter function to get updated list\n    const newList =\n      Array.isArray(list) && filterBy.length\n        ? list.filter(list_item => {\n            //check whether searchbox values are available in list\n            const isTrue = filterBy.findIndex(filterContent => {\n              return list_item[filterContent]\n                .toLowerCase()\n                .includes(searchValue);\n            });\n            return isTrue === -1 ? false : true;\n          })\n        : list;\n    // pass onchange handler with event and updated list\n    onChange(event, newList);\n  };\n  return (\n    <div className=\"search-box\">\n      <MdSearch className={'search-icon search-' + className} />\n      <InputElement\n        className={' search-bar ' + className}\n        onChange={updateContent}\n        {...props}\n      />\n    </div>\n  );\n};\n\nSearchBox.defaultProps = {\n  /* classname for searchbox */\n  className: '',\n  /* onchange handler to pass the data of EVENT and updated LIST */\n  onChange: () => {},\n  /* list of object should be given for filter */\n  list: [],\n  /* filter using FILTERBY content, \n    filterby content should be array\n  */\n  filterBy: [],\n};\n\nexport default SearchBox;\n","// import { confirmPopup } from 'react-confirm-alert';\r\nimport React, { Component } from 'react';\r\nimport './popup.scss';\r\nimport Animate from '../addAnimation';\r\nimport Button from '../Button';\r\n\r\nclass Popup extends React.Component {\r\n  render() {\r\n    return (\r\n      <Animate\r\n        show={this.props.isOpen}\r\n        className=\"Popup-bg-container\"\r\n        enterAnimate=\"zoom-out-enter .4s\"\r\n        leaveAnimate=\"zoom-out-leave .3s\"\r\n      >\r\n        <div className=\"Popup-container\">\r\n          <div className=\"Popup-title\">\r\n            <b>{this.props.heading}</b>\r\n          </div>\r\n          <div className=\"Popup-message\">{this.props.children}</div>\r\n          <div className=\"Popup-control\">\r\n            <div className=\"buttonflex\">\r\n              <Button\r\n                className=\"primary\"\r\n                onClick={e => {\r\n                  if (this.props.clickHandler) {\r\n                    this.props.clickHandler(e, 'save');\r\n                  }\r\n                }}\r\n              >\r\n                {this.props.buttonText}\r\n              </Button>\r\n              <Button\r\n                className=\"primary\"\r\n                onClick={e => {\r\n                  // console.log(this);\r\n\r\n                  this.props.clickHandler(e, 'cancel');\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Animate>\r\n    );\r\n  }\r\n}\r\n\r\nPopup.defaultProps = {\r\n  isOpen: false,\r\n  heading: 'Modal',\r\n  buttonText: 'Save',\r\n  clickHandler: () => {},\r\n};\r\n\r\nexport default Popup;\r\n","import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport '../DatePicker/date.scss';\r\nimport arrow from '../../Img/arrow-icon.jpg';\r\nexport default function Date_picker(props) {\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const years = [2015, 2016, 2017, 2018, 2019, 2015, 2016, 2017, 2018, 2019];\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  return (\r\n    <div>\r\n      <DatePicker\r\n        renderCustomHeader={({\r\n          date,\r\n          changeYear,\r\n          decreaseMonth,\r\n          increaseMonth,\r\n          prevMonthButtonDisabled,\r\n          nextMonthButtonDisabled,\r\n        }) => (\r\n          <div>\r\n            <div className=\"YearBlock\">\r\n              <div className=\"yearul\">\r\n                {years.map(year => (\r\n                  <div onClick={() => changeYear(year)} className=\"yearli\">\r\n                    {year}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"header_Calender\">\r\n              <img\r\n                className=\"leftarrow\"\r\n                onClick={decreaseMonth}\r\n                disabled={prevMonthButtonDisabled}\r\n                src={arrow}\r\n              />\r\n              <div className=\"monthname\">{months[date.getMonth()]}</div>\r\n              <img\r\n                className=\"rightarrow\"\r\n                onClick={increaseMonth}\r\n                disabled={prevMonthButtonDisabled}\r\n                src={arrow}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        selected={startDate}\r\n        onChange={date => {\r\n          setStartDate(date);\r\n          // props.Getbackdate(date);\r\n        }}\r\n        showYearDropdown\r\n        dropdownMode=\"select\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport SearchBox from '../../../Atoms/SearchBox';\r\n//import Mainheader from './Header_enterprise/Mainheader';\r\nimport './ExceptionMonitor.scss';\r\nimport Accordion from '../../../Atoms/Accordion';\r\nimport moment from 'moment';\r\nimport Popup from '../../../Atoms/popup/popup';\r\nimport InputElement from '../../../Atoms/InputElement';\r\nimport Date_picker from '../../../Atoms/DatePicker';\r\nimport {Allimages} from '../../../../Utils/imageRetriver.js';\r\n// import {Filter} from '../../../Img/Filter.png';\r\nimport Filter from '../../../../assets/Icon/Filter.svg';\r\nimport autoMergeLevel1 from 'redux-persist/es/stateReconciler/autoMergeLevel1';\r\n\r\nclass ExceptionMonitor extends Component {\r\n  FromDate =\r\n  moment(new Date())\r\n    .toISOString()\r\n    .split('.')[0] + 'Z';\r\nToDate =\r\n  moment(new Date())\r\n    .toISOString()\r\n    .split('.')[0] + 'Z';\r\n\r\nconstructor(props) {\r\n  super(props);\r\n\r\n  this.state = {\r\n    selectedException: {},\r\n    SearchString: '',\r\n    popUp: true,\r\n  };\r\n  this.onFormSubmit = this.onFormSubmit.bind(this);\r\n  this.onChange = this.onChange.bind(this);\r\n}\r\n  // showDetailss = (index, value) => {\r\n  //   if (this.state.showStoryDetails !== value) {\r\n  //     this.setState({ showStoryDetails: value });\r\n  //     this.props.showDetails(value);\r\n  //   }\r\n  //   this.setState({ showStory: true, activeIndex: index });\r\n  // };\r\n\r\n  // dateTimeFormatter = timeString => {\r\n  //   let day = timeString.getDate();\r\n  //   let month = timeString.getMonth();\r\n  //   let year = timeString\r\n  //     .getFullYear()\r\n  //     .toString()\r\n  //     .slice(-2);\r\n  //   let hour = timeString.getHours();\r\n  //   let min = timeString.getMinutes();\r\n  //   return `${day} ${month}'${year} ${hour}:${min}`;\r\n  // };\r\n\r\n  // tzConverter = timeString => {\r\n  //   const TZtime = new Date(timeString).toISOString().split('.')[0];\r\n  //   return TZtime;\r\n  // };\r\n\r\n  searchHandler = (e, list) => {\r\n    this.setState({ searchBoxValue: e.target.value, list });\r\n  };\r\n  cancelHandler = e => {\r\n    this.setState({ popUp: false });\r\n  };\r\n  handleFromAndToDateChange(e) {\r\n    this.setState({\r\n      popUp: false,\r\n    });\r\n  }\r\n  onFormSubmit(e, FromDate, ToDate) {\r\n    this.props.GetEventMonitorList(this.FromDate, this.ToDate);\r\n    console.log(this.FromDate, this.props);\r\n    this.setState({ popUp: false });\r\n  }\r\n  onChange(e, FromDate, ToDate) {\r\n    this.setState({ FromDate: e.target.FromDate, ToDate: e.target.ToDate });\r\n    console.log(FromDate, ToDate, 'jhdsgfjhas');\r\n  }\r\n  exceptionList = () => {\r\n    const data = this.props.EventMonitorDetails;\r\n    let listKey = Object.keys(data)[0];\r\n    if (this.state.selectedException.time) {\r\n      const selectedDate = this.state.selectedException.date;\r\n      const selectedHour = this.state.selectedException.time.split(':')[0];\r\n\r\n      if (listKey) {\r\n        let list = data[listKey];\r\n        return list.filter(val => {\r\n          const date = val.createdTime.trim().split(' ')[0];\r\n          const time = new Date(val.createdTime).getHours();\r\n          console.log(\r\n            date == selectedDate && selectedHour == time,\r\n            'chartdata'\r\n          );\r\n          if (\r\n            date == selectedDate &&\r\n            selectedHour == time &&\r\n            val.errortype === this.props.view\r\n          ) {\r\n            return true;\r\n          }\r\n          return false;\r\n        });\r\n      }\r\n    }\r\n    return [];\r\n  };\r\n\r\n  createChartComponentData = () => {\r\n    const data = this.props.EventMonitorDetails;\r\n    let list = Object.keys(data)[0];\r\n    if (list) {\r\n      //replace curly braces from string\r\n      list = list.replace(/[{}]/g, '');\r\n      list = list.split(',');\r\n      list = list.map(val => {\r\n        let [date, timeWithCount] = val.trim().split(' ');\r\n        if (timeWithCount) {\r\n          let [time, count] = timeWithCount.split('=');\r\n          if (time) {\r\n            time = time.split(':');\r\n            if (time.length > 2) time.pop();\r\n            time = time.join(':');\r\n          }\r\n          return { date, time, count };\r\n        }\r\n        return { date };\r\n      });\r\n      return list;\r\n    }\r\n    return [];\r\n  };\r\n\r\n  chartOrderByDate = list => {\r\n    console.log(list, 'checkdata');\r\n    let newList = [];\r\n    if (Array.isArray(list)) {\r\n      const uniqueArr = [...new Set(list.map(data => data.date))];\r\n      return uniqueArr.map(val => {\r\n        const value = list.filter(data => data.date === val);\r\n        return {\r\n          date: val,\r\n          content: value,\r\n        };\r\n      });\r\n    }\r\n    return [];\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state, 'data');\r\n    let chartData = this.createChartComponentData();\r\n    // const dateTimeFormatter = this.dateTimeFormatter();\r\n    const chart = this.chartOrderByDate(chartData);\r\n    let exceptionList = this.exceptionList();\r\n    let searchString = this.state.SearchString.trim().toLowerCase();\r\n    if (searchString.length > 0) {\r\n      exceptionList = exceptionList.filter(item => {\r\n        const newValue = Object.keys(item).filter(key =>\r\n          key === 'id'\r\n            ? false\r\n            : item[key].toLowerCase().match(searchString)\r\n            ? true\r\n            : false\r\n        );\r\n        return newValue.length > 0;\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        <Popup\r\n          isOpen={this.state.popUp}\r\n          buttonText={'Save'}\r\n          heading={'Enter From date and To Date'}\r\n          clickHandler={e => this.onFormSubmit(e, this.FromDate, this.ToDate)}\r\n        >\r\n          <div className=\"DatePickerFlex\">\r\n            <div className=\"date-picker-area\">\r\n             <b> From Date </b>\r\n              <Date_picker\r\n              className=\"Event-Datepickerarea\"\r\n                placeholder=\"Enter From date\"\r\n                type=\"text\"\r\n                Getbackdate={FromDate => {\r\n                  this.FromDate = moment(FromDate)\r\n                    .toISOString()\r\n                    .replace('T', ' ')\r\n                    .split('.')[0];\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"date-picker-area\">\r\n             <b> To Date</b>\r\n              <Date_picker\r\n              className=\"Event-Datepickerarea\"\r\n                placeholder=\"Enter To date\"\r\n                type=\"text\"\r\n                Getbackdate={ToDate => {\r\n                  this.ToDate = moment(ToDate)\r\n                    .toISOString()\r\n                    .replace('T', ' ')\r\n                    .split('.')[0];\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Popup>\r\n        <div className=\"Event-Monitor-main-content\">\r\n          <div className=\"Event-monitor-partone\">\r\n            <div className=\"Event-monitor-search-header\">\r\n              <SearchBox\r\n                placeholder=\"Search by name\"\r\n                onChange={e => this.setState({ SearchString: e.target.value })}\r\n                list={this.state.exceptionList}\r\n                value={this.state.SearchString}\r\n                className=\"EventMonitorSearchBar\"\r\n              />\r\n                          </div>\r\n           <div className=\"Event-monitor-filter\"\r\n           \r\n           \r\n           > <img  src={Filter} alt={\"\"}\r\n           \r\n           onClick={()=>this.setState({popUp:true})}\r\n           /></div>\r\n          </div>\r\n          {/* <div className=\"middle-space\"></div> */}\r\n          <div className=\"Event-monitor-parttwo\">\r\n            \r\n            <div className=\"Event-monitor-bar-container scroll\">\r\n              {chart.map(chart => {\r\n                console.log(this.state.selectedException, chart);\r\n                const { date, time } = this.state.selectedException;\r\n                return (\r\n                  <div className=\"chart-data\">\r\n                    <span className=\"chart-date\">\r\n                      {moment(chart.date).format('DD MMM YY')}\r\n                    </span>\r\n                    \r\n                      \r\n                    {chart.content.map(content => {\r\n                      return (\r\n                        <div\r\n                          className={`chart-bar-wrapper ${\r\n                            date === content.date && time === content.time\r\n                              ? 'activeExceptionChart'\r\n                              : ''\r\n                          }`}\r\n                          onClick={() => {\r\n                            this.setState({ selectedException: content });\r\n                          }}\r\n                        >\r\n                          {chart.content ? (\r\n                          <div\r\n                            className=\"Event-monitor-bar\" \r\n                            style={{ height: content.count * 10\r\n                               + '%' }}\r\n                          ></div>):( <div\r\n                            className=\"Event-monitor-bar\" \r\n                            style={{ height: content.count * 0\r\n                               + '%' }}\r\n                          ></div>)}\r\n                          <div className=\"Event-monitor-time\">\r\n                            {content.time}\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })} \r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            \r\n          </div>\r\n\r\n          <div className=\"Event-monitor-partthree scroll\">\r\n            {exceptionList.map((data, index) => (\r\n              <Accordion\r\n                className=\"Event-monitor-label\"\r\n                menuList={[\r\n                  {\r\n                    title: (\r\n                      <div>\r\n                        {' '}\r\n                        <div className=\"Event-monitor-slider\">\r\n                          <div className=\"Event-Monitor-Details\">\r\n                            <div className=\"Event-monitor-name\">\r\n                              {data.errorCode}\r\n                              <div className=\"Event-monitor-desc\">\r\n                                {data.errorDescription}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"Event-monitor-errorLayer\">\r\n                              <div className=\"Event-monitor-outlayer\">\r\n                                <div className=\"Event-monitor-description\">\r\n                                  {data.errorLayer}\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"Event-monitor-datetime\">\r\n                              {/* 14 FEB 20, 23:45 */}\r\n                              {moment(data.createdTime).format('DD MMM YY')},\r\n                              <span>\r\n                                {' '}\r\n                                {moment(data.createdTime).format(' hh:mm')}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ),\r\n                    data: () => (\r\n                      <div\r\n                        className=\"Event-monitor-slider-inputs\"\r\n                        style={{ position: 'relative' }}\r\n                      >\r\n                        <div className=\"code-name-expand\">{data.errortype}</div>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExceptionMonitor;\r\n\r\n// const NullData=()=>{\r\n// <div className=\"NullData\"\r\n// style={{ height: content.count * 0 + '%' }}>\r\n// </div>\r\n// }","import React, { Component } from 'react';\r\nimport { Tab, Tabs, TabPanel, TabList } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport ExceptionMonitor from '../ExceptionMonitor/index';\r\nimport './EventMonitor_TabList.scss';\r\nimport { Event_Monitor_Action } from '../../../../Store/EventMonitor/EventMonitor.action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass MainTablistView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: ' ',\r\n      errortype: ' ',\r\n      selectedInstance: '',\r\n      selectedException: {},\r\n\r\n      showDetails: errortype => {\r\n        this.setState({ errortype: errortype });\r\n      },\r\n    };\r\n  }\r\n\r\n  TabItem = () => [\r\n    {\r\n      title: 'Exception Monitor',\r\n      ExceptionData: [],\r\n      Component: <ExceptionMonitor view={'EXCEPTION'} {...this.props} />,\r\n    },\r\n    {\r\n      title: 'Error Monitor',\r\n      ErrorData: [],\r\n      Component: <ExceptionMonitor {...this.props} view={'ERROR'} />,\r\n    },\r\n    // {\r\n    //   title: 'Trace Dashboard',\r\n    //   TraceData: [],\r\n    //   Component: <ExceptionMonitor {...this.props} />,\r\n    // },\r\n  ];\r\n\r\n  componentDidMount() {\r\n    this.props.GetEventMonitorList();\r\n  }\r\n\r\n  render() {\r\n    let TabItem = this.TabItem();\r\n\r\n    return (\r\n      <>\r\n        <Tabs className=\"main-error-tab\">\r\n          <TabList className=\"tab-error-main-div\">\r\n            {TabItem.map((tab, index) => (\r\n              <Tab className=\"tab-list\" key={index}>\r\n                {tab.title}\r\n              </Tab>\r\n            ))}\r\n          </TabList>\r\n\r\n          {TabItem.map((tab, index) => (\r\n            <TabPanel className=\"tab-panel\" key={index}>\r\n              <div> {tab.Component}</div>\r\n            </TabPanel>\r\n          ))}\r\n        </Tabs>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst NoEvent = () => {\r\n  return <div className=\"abc\">hii</div>;\r\n};\r\nconst mapDispatchToProps = {\r\n  GetEventMonitorList: Event_Monitor_Action.getEventMonitorDetails,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    EventMonitorDetails: state.EventMonitorReducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainTablistView);","import React, { Component } from 'react';\r\n//import Mainheader from './Header_enterprise/Mainheader';\r\nimport './index.scss';\r\nimport MainTablistView from './EventMonitor_TabList/index';\r\n\r\nexport default class EventMoniter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <MainTablistView />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}