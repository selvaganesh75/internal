{"version":3,"sources":["components/Atoms/InputElement/index.js","components/Atoms/DropdownComponent/dropdown.js","webpack:///./src/assets/Icon/chevronup.svg?fa26","webpack:///./src/assets/Icon/chevrondown.svg?a696","components/Atoms/DropdownComponent/dropdown-multiple.js","components/Atoms/DropdownComponent/index.js","components/Atoms/SearchBox/index.js","components/Atoms/Datepicker/index.js","components/Atoms/slidedown/index.js","components/Page/FlightManagement/calculation.js","components/Atoms/Pie/index.js","components/Molecules/Piechart/index.js","components/Page/TaskViewScreen/TaskView.js","components/Page/FlightManagement/presentation/flight-list.js","components/Page/FlightManagement/presentation/flightUpdate/flight-schedule.js","components/Page/FlightManagement/presentation/flightUpdate/flight-information.js","components/Molecules/AddTurn/index.js","components/Page/FlightManagement/presentation/flightUpdate/add-delete-newturn.js","components/Page/FlightManagement/presentation/flightUpdate/flight-turnaround.js","components/Page/FlightManagement/presentation/flightUpdate/crewonflight.js","components/Page/FlightManagement/presentation/flightUpdate/index.js","components/Page/FlightManagement/index.js"],"names":["InputElement","disabled","this","props","readOnly","undefined","value","type","id","className","onChange","e","JsonName","onClick","clickInput","onInput","placeholder","onFocus","focus","onBlur","blur","multiple","autocomplete","defaultValue","Component","defaultProps","Dropdown","state","listOpen","headerTitle","title","bold","close","bind","setTimeout","window","addEventListener","removeEventListener","setState","prevState","list","toggleItem","dropdownDisable","toggleList","map","item","key","selected","React","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","SvgChevronup","_ref","svgRef","stroke","fill","strokeWidth","viewBox","height","width","ref","ForwardRef","forwardRef","SvgChevrondown","SearchBox","filterBy","updateContent","event","searchValue","toString","toLowerCase","console","log","newList","Array","isArray","filter","list_item","findIndex","filterContent","includes","searchIcon","addTurnSearch","Date_picker","prev","minDate","previousdate","Date","useState","startDate","setStartDate","years","months","renderCustomHeader","date","changeYear","decreaseMonth","increaseMonth","prevMonthButtonDisabled","year","src","arrow","getMonth","placeholderText","Getbackdate","showYearDropdown","dropdownMode","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","Slide","open","content","header","sliderStatus","isOpen","setOpen","style","cursor","DateMonthConverter","dateString","dateMonth","split","toDateString","month","timeConverter","timeString","str","slice","now","timestring","moment","format","numberValidator","test","Pie","chartData","data","join","pie","backgroundImage","borderRadius","position","Piechart","connect","TaskViewPopOver","toggle","Modal","loaderAction","setLoader","removeLoader","FlightList","flights","updateData","callback","fltnumber","aircraftregistrationno","airlineaircrafttype","depstncd","arrstncd","schdeplcldttm","scharrlcldttm","inlcldttm","offlcldttm","outlcldttm","onlcldttm","depgateno","fltstatus","actarrlcldttm","actdeplcldttm","percentagecompleted","pieChartOpen","setPieChartOpen","UpdateDoneStatus","useSelector","fltMngtUpdate","UpdateDone","departure","stationname","OutOrIn","OnOrOff","stdorsta","atdorata","gateno","arrival","TaskView","heading","Button","flightlegid","ischange","ButtonHandler","stopPropagation","FlightInformation","request","paxcount","Number","Pax_load","baggagecount","Baggage","ssrcount","PRM","Gate","AC_REG","baynumber","Bay","flightUpdateActions","storeUpdateDone","postFLT_Update","ActualTimeRenderer","OutOrOn","InOrOff","FlightSchedules","estarrlcldttm","estdeplcldttm","etdoreta","atdoron","offorata","ActualTimeRendererforupdate","inputFields","setTimeWarning","commonAction","openAlert","fltlegid","gate","AddTurn","obj","depstncdarr","arrstncdarr","turnIdLst","flightNum","effectivefrom","calenderdate","fltLegIdForArr","fltstatusReducer","templateData","val","addNewTurn","EntireFlightData","submitted","depat","turnIdAdd","FLT_No_SPlit","FTL_Compare","filtered_flight","a","b","flight","userarr","template","fltnum","origin","opsdate","arrivallegid","deplegid","turntemplateid","submitAddTurn","addNewTurnSubmit","searchBoxValue","objFltVal","stationdd","turnId","flightTemp","addturn","config","Stationdddata","TurnIdList","Stationarrdata","stationreducer","push","station","templateresponse","onSubmit","handleSubmit","DropdownComponent","err","toDate","closeAlert","mapDispatchToProps","StationActions","getStationDetails","TemplateListActions","getTemplateData","flightTurnAroundAction","postFLT_TurnAround","templateActions","getFLT_Template","updateDone","Stationinitialdata","TurnTemplateInitialDatareducer","flightManagementTemplate","AddDeleteTurn","openAdd","addTurnLink","cancelAddNewTurn","handleRemove","confirmDelete","selectedindexfordelete","deleteAddTurn","deleteTurn","cancelDeleteStation","splitDepLegId","depleg","reqstation","replace2","replace","datestring","removeZ","arrivaldepartureverification","arr","dep","deleteId","turnName","noCurrentTurnAvailable","TurnData","turninstanceid","DeleteIcon","alt","actionCreators","deleteCurrentFLT_TurnAround","FlightTurnaround","turnData","mgt","groundtm","plannedtat","actualtat","turnStation","CrewOnFlight","crews","crew","staffid","crewfirstname","crewlastname","crewbasestation","actingrank","FlightUpdate","fltMgntList","fltcrew","updatedData","updateHandler","updateDetails","getUpdate","getTurnTemplate","getCrewOnFlight","getflightCurrentTurn","getflightNextTurn","turnAroundData","currentTurn","templatedetails","FlightSchedule","FlightTurnAround","NextturnAroundData","TemplateInformation","tempdetails","turntemplatename","getFLT_Update","crewOnFlightActions","getFLT_CREWONFLIGHT","postUpdatedData","storeFLT_Update","getFLT_TurnAround","getFLT_NextTurnAround","fltMntCrewOnFlightReducer","fltTurnAroundReducer","FlightManagement","togglePopover","index","new_data","updateDetailsData","isFlt_Mgnt_addFlight","rerender","searchHandler","generateList","templateList","updated_data","newData","u_data","details","handleChange","handleClose","isSubmitted","getTemplate","Interval","setInterval","getTemplatewoloader","clearInterval","Donehandler","isAddFlight","Header","getFLT_Templatewoloader"],"mappings":"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","file":"static/js/9.0dc69e72.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../InputElement/InputElement.scss';\r\nclass InputElement extends Component {\r\n  render() {\r\n    const disabled =\r\n      this.props.disabled && typeof this.props.disabled === 'boolean'\r\n        ? true\r\n        : false;\r\n    const readOnly =\r\n      this.props.readOnly && typeof this.props.readOnly === 'boolean'\r\n        ? true\r\n        : false;\r\n    return this.props.value !== undefined ? (\r\n      <input\r\n        value={this.props.value}\r\n        type={this.props.type}\r\n        id={this.props.id}\r\n        className={'input-style ' + this.props.className}\r\n        readOnly={readOnly}\r\n        disabled={disabled}\r\n        onChange={e => {\r\n          if (\r\n            this.props.onChange &&\r\n            typeof this.props.onChange === 'function'\r\n          ) {\r\n            this.props.onChange(e, this.props.JsonName);\r\n          }\r\n        }}\r\n        onClick={this.props.clickInput}\r\n        onInput={this.props.onInput}\r\n        placeholder={this.props.placeholder}\r\n        onFocus={this.props.focus}\r\n        onBlur={this.props.blur}\r\n        multiple={this.props.multiple}\r\n\r\n      />\r\n    ) : (\r\n        <input\r\n          type={this.props.type}\r\n          id={this.props.id}\r\n          className={'input-style ' + this.props.className}\r\n          disabled={disabled}\r\n          autocomplete=\"off\"\r\n          onChange={e => {\r\n            if (\r\n              this.props.onChange &&\r\n              typeof this.props.onChange === 'function'\r\n            ) {\r\n              this.props.onChange(e, this.props.JsonName);\r\n            }\r\n          }}\r\n          onClick={this.props.clickInput}\r\n          onInput={this.props.onInput}\r\n          placeholder={this.props.placeholder}\r\n          onFocus={this.props.focus}\r\n          onBlur={this.props.blur}\r\n          multiple={this.props.multiple}\r\n          defaultValue={this.props.defaultValue}\r\n        />\r\n      );\r\n  }\r\n}\r\n\r\nInputElement.defaultProps = {\r\n  onChange: () => { },\r\n  onInput: () => { },\r\n  clickInput: () => { },\r\n  focus: () => { },\r\n  blur: () => { },\r\n  className: '',\r\n  id: '',\r\n  placeholder: '',\r\n  type: 'text',\r\n  multiple: false,\r\n  disabled: false,\r\n  defaultValue: '',\r\n};\r\n\r\nexport default InputElement;\r\n","import React from 'react';\r\nimport { ReactComponent as ChevronUp } from '../../../assets/Icon/chevronup.svg';\r\nimport { ReactComponent as ChevronDown } from '../../../assets/Icon/chevrondown.svg';\r\nimport { TiTick } from 'react-icons/ti';\r\nimport './DropDown.scss';\r\n\r\nexport default class Dropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listOpen: false,\r\n      headerTitle: this.props.title,\r\n      bold: false,\r\n    };\r\n    this.close = this.close.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { listOpen } = this.state;\r\n    setTimeout(() => {\r\n      if (listOpen) {\r\n        window.addEventListener('click', this.close);\r\n      } else {\r\n        window.removeEventListener('click', this.close);\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('click', this.close);\r\n  }\r\n\r\n  toggleList() {\r\n    this.setState(prevState => ({\r\n      listOpen: !prevState.listOpen,\r\n    }));\r\n  }\r\n\r\n  close() {\r\n    this.setState({\r\n      listOpen: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { list, toggleItem, className } = this.props;\r\n    const { listOpen, headerTitle } = this.state;\r\n    return (\r\n      <div className={`${className} dd-wrapper`}>\r\n        {this.props.dropdownDisable ? (\r\n          <div\r\n            className=\"dd-header disable-bg\"\r\n            onClick={() => this.toggleList()}\r\n          >\r\n            <div\r\n              className={\r\n                this.state.bold ? 'dd-header-title-bold' : 'dd-header-title'\r\n              }\r\n            >\r\n              {headerTitle}\r\n            </div>\r\n            <span>\r\n              <ChevronDown />\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"dd-header\" onClick={() => this.toggleList()}>\r\n              <div\r\n                className={\r\n                  this.state.bold || this.props.defaultValue\r\n                    ? 'dd-header-title-bold'\r\n                    : 'dd-header-title'\r\n                }\r\n              >\r\n                {this.state.bold\r\n                  ? headerTitle\r\n                  : this.props.defaultValue\r\n                  ? this.props.defaultValue\r\n                  : headerTitle}\r\n              </div>\r\n              <span>{listOpen ? <ChevronUp /> : <ChevronDown />}</span>\r\n            </div>\r\n            {listOpen && (\r\n              <ul className=\"dd-list\">\r\n                {list.map(item => (\r\n                  <li\r\n                    className=\"dd-list-item\"\r\n                    key={item.title}\r\n                    onClick={() => {\r\n                      this.setState({ headerTitle: item.title, bold: true });\r\n                      toggleItem(item);\r\n                    }}\r\n                  >\r\n                    {item.title}{' '}\r\n                    {item.selected && (\r\n                      <span>\r\n                        <TiTick />\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDropdown.defaultProps = {\r\n  title: 'Select',\r\n  list: [],\r\n  toggleItem: () => {},\r\n  className: '',\r\n};\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M147.6 301.3c-7.5-7.5-7.5-19.8 0-27.3l95.7-95.4c7.3-7.3 19.1-7.5 26.6-.6l94.3 94c3.8 3.8 5.7 8.7 5.7 13.7 0 4.9-1.9 9.9-5.6 13.6-7.5 7.5-19.7 7.6-27.3 0l-81-79.8-81.1 81.9c-7.5 7.5-19.7 7.5-27.3-.1z\"\n});\n\nvar SvgChevronup = function SvgChevronup(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    stroke: \"currentColor\",\n    fill: \"#666666\",\n    strokeWidth: 0,\n    viewBox: \"0 0 512 512\",\n    height: \"26px\",\n    width: \"26px\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChevronup, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chevronup.8673b621.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M147.6 210.7c-7.5 7.5-7.5 19.8 0 27.3l95.7 95.4c7.3 7.3 19.1 7.5 26.6.6l94.3-94c3.8-3.8 5.7-8.7 5.7-13.7 0-4.9-1.9-9.9-5.6-13.6-7.5-7.5-19.7-7.6-27.3 0l-81 79.8-81.1-81.9c-7.5-7.5-19.7-7.5-27.3.1z\"\n});\n\nvar SvgChevrondown = function SvgChevrondown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    stroke: \"currentColor\",\n    fill: \"#666666\",\n    strokeWidth: 0,\n    viewBox: \"0 0 512 512\",\n    height: \"26px\",\n    width: \"26px\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChevrondown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chevrondown.fee003ff.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\r\nimport { ReactComponent as ChevronUp } from '../../../assets/Icon/chevronup.svg';\r\nimport { ReactComponent as ChevronDown } from '../../../assets/Icon/chevrondown.svg';\r\nimport { TiTick } from 'react-icons/ti';\r\nimport './DropDown.scss';\r\n\r\nclass DropdownMultiple extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listOpen: false,\r\n      headerTitle: this.props.title,\r\n      timeOut: null,\r\n    };\r\n    this.close = this.close.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { listOpen } = this.state;\r\n    setTimeout(() => {\r\n      if (listOpen) {\r\n        window.addEventListener('click', this.close);\r\n      } else {\r\n        window.removeEventListener('click', this.close);\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('click', this.close);\r\n  }\r\n\r\n  close(timeOut) {\r\n    this.setState({\r\n      listOpen: false,\r\n    });\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps) {\r\n    const count = nextProps.list.filter(function(a) {\r\n      return a.selected;\r\n    }).length;\r\n    if (count === 0) {\r\n      return { headerTitle: nextProps.title };\r\n    } else if (count === 1) {\r\n      return { headerTitle: `${count} ${nextProps.titleHelper}` };\r\n    } else if (count > 1) {\r\n      return { headerTitle: `${count} ${nextProps.titleHelper}s` };\r\n    }\r\n  }\r\n\r\n  toggleList() {\r\n    this.setState(prevState => ({\r\n      listOpen: !prevState.listOpen,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { list, toggleItem } = this.props;\r\n    const { listOpen, headerTitle } = this.state;\r\n    return (\r\n      <div className=\"dd-wrapper\">\r\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\r\n          <div className=\"dd-header-title\">{headerTitle}</div>\r\n          <span>{listOpen ? <ChevronUp /> : <ChevronDown />}</span>\r\n        </div>\r\n        {listOpen && (\r\n          <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\r\n            {list.map(item => (\r\n              <li\r\n                className=\"dd-list-item\"\r\n                key={item.title}\r\n                onClick={() => toggleItem(item.id, item.key)}\r\n              >\r\n                {item.title} {item.selected && <TiTick />}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropdownMultiple;\r\n","import Dropdown from './dropdown';\r\nimport DropdownMultiple from './dropdown-multiple';\r\n\r\nexport { Dropdown, DropdownMultiple };\r\n","import React from 'react';\r\nimport InputElement from '../InputElement';\r\nimport './search-box.scss';\r\nimport { MdSearch } from 'react-icons/md';\r\nconst SearchBox = ({ className, onChange, list, filterBy, ...props }) => {\r\n  const updateContent = event => {\r\n    // getting searchbox value\r\n    const searchValue = event.target.value.toString().toLowerCase();\r\n    console.log(searchValue, \"updatecontent\")\r\n\r\n    // using filter function to get updated list\r\n    const newList =\r\n      Array.isArray(list) && filterBy.length\r\n        ? list.filter(list_item => {\r\n          //check whether searchbox values are available in list\r\n          if (list_item !== null) {\r\n            const isTrue = filterBy.findIndex(filterContent => {\r\n              return list_item[filterContent]\r\n                .toLowerCase()\r\n                .includes(searchValue);\r\n            });\r\n            return isTrue === -1 ? false : true;\r\n          }\r\n        })\r\n        : list;\r\n    console.log(newList, newList.length, list, list.length, \"inside search bar\");\r\n    // pass onchange handler with event and updated list\r\n    onChange(event, newList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-box\">\r\n      {props.searchIcon ? '' : <MdSearch className={'search-icon search-' + className} />}\r\n      {props.addTurnSearch ? <InputElement\r\n        onChange={updateContent}\r\n        {...props}\r\n      /> : <InputElement\r\n          className={' search-bar ' + className}\r\n          onChange={updateContent}\r\n          {...props}\r\n        />}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchBox.defaultProps = {\r\n  /* classname for searchbox */\r\n  className: '',\r\n  /* onchange handler to pass the data of EVENT and updated LIST */\r\n  onChange: () => { },\r\n  /* list of object should be given for filter */\r\n  list: [],\r\n  /* filter using FILTERBY content, \r\n    filterby content should be array\r\n  */\r\n  filterBy: [],\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport '../Datepicker/date.scss';\r\nimport arrow from '../../Img/arrow-icon.png';\r\nimport moment from 'moment';\r\n\r\nexport default function Date_picker(props) {\r\n  console.log(props, \"startDate\")\r\n  console.log(props.minDate, \"mindate\")\r\n  let prev;\r\n  if (props.previousdate !== undefined) {\r\n    prev = new Date(props.previousdate);\r\n  } else {\r\n    prev = ''\r\n  }\r\n  const [startDate, setStartDate] = useState(prev);\r\n  // props.previousdate ? props.previousdate : ''\r\n  console.log(startDate, \"startDate1\")\r\n\r\n  const years = [2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035];\r\n  // if (years.length - 1 !== dateString) {\r\n  //   console.log(years.length - 1, dateString, 'years');\r\n  //   years.push(dateString);\r\n  // }\r\n\r\n  // var dateString = moment().format('YYYY');\r\n  // let years = [];\r\n  // let futureyear = moment()\r\n  //   .add(1, 'years')\r\n  //   .format('YYYY');\r\n  // years.push(dateString, futureyear);\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  return (\r\n    <div>\r\n      <DatePicker\r\n        renderCustomHeader={({\r\n          date,\r\n          changeYear,\r\n          decreaseMonth,\r\n          increaseMonth,\r\n          prevMonthButtonDisabled,\r\n          // nextMonthButtonDisabled,\r\n        }) => (\r\n            <div>\r\n              <div className=\"YearBlock\">\r\n                <div className=\"yearul\">\r\n                  {years.map(year => (\r\n                    <div onClick={() => changeYear(year)} className=\"yearli\">\r\n                      {year}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"header_Calender\">\r\n                <img\r\n                  className=\"leftarrow\"\r\n                  onClick={decreaseMonth}\r\n                  disabled={prevMonthButtonDisabled}\r\n                  src={arrow}\r\n                />\r\n                <div className=\"monthname\">{months[date.getMonth()]}</div>\r\n                <img\r\n                  className=\"rightarrow\"\r\n                  onClick={increaseMonth}\r\n                  disabled={prevMonthButtonDisabled}\r\n                  src={arrow}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        placeholderText=\"Select a Date\"\r\n        className={props.className}\r\n        selected={startDate}\r\n        onChange={date => {\r\n          console.log(date, \"dateeeeeeeee\")\r\n          setStartDate(date);\r\n          props.Getbackdate(date);\r\n        }}\r\n        id={props.id}\r\n        showYearDropdown\r\n        dropdownMode=\"select\"\r\n        minDate={props.minDate}\r\n        showTimeSelect={props.showTimeSelect}\r\n        timeFormat={props.timeFormat}\r\n        timeIntervals={props.timeIntervals}\r\n        timeCaption={props.timeCaption}\r\n        dateFormat={props.dateFormat}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { SlideDown } from 'react-slidedown';\r\nimport 'react-slidedown/lib/slidedown.css';\r\n\r\nconst Slide = ({\r\n  open = false,\r\n  content = null,\r\n  header = null,\r\n  sliderStatus,\r\n}) => {\r\n  const [isOpen, setOpen] = useState(open);\r\n  console.log('hi from slide',sliderStatus);\r\n  const handleToggler = () => {\r\n    setOpen(!isOpen);\r\n    sliderStatus(isOpen);\r\n  };\r\n  return (\r\n    <div\r\n      className={`slider ${isOpen ? 'active-slide' : ''}`}\r\n      style={{ cursor: 'pointer' }}\r\n    >\r\n      <div className=\"slider-header\" onClick={handleToggler}>\r\n        {header}\r\n      </div>\r\n      <SlideDown className={'my-dropdown-slidedown'}>\r\n        {isOpen ? content : null}\r\n      </SlideDown>\r\n    </div>\r\n  );\r\n};\r\n\r\nSlide.defaultProps = {\r\n  sliderStatus: () => {},\r\n};\r\n\r\nexport default Slide;\r\n","import moment from 'moment';\r\n\r\n//expected date\r\n// output format date and month **  31 12  **\r\nexport const DateMonthConverter = dateString => {\r\n  console.log(dateString,\"datest\")\r\n  const dateMonth = new Date(dateString.split(\"T\")[0]).toDateString().split(' ');\r\n  const month = dateMonth[1] || '';\r\n  const date = dateMonth[2] || '';\r\n  return `${date} ${month}`;\r\n};\r\nexport const DateMonthandTimeConverter = (dateString, timeString) => {\r\n  const day = new Date(dateString).getDay();\r\n  const month = new Date(dateString).getMonth();\r\n  const year = new Date(dateString)\r\n    .getFullYear()\r\n    .toString()\r\n    .slice(-2);\r\n  const time = new Date(timeString).toLocaleTimeString();\r\n  const hour = time[0] || '0';\r\n  const min = time[1] || '0';\r\n  console.log(`${day} ${month}'${year} ${hour}:${min}`);\r\n\r\n  return `${day} ${month}'${year} ${hour}:${min}`;\r\n};\r\n\r\n// expected time\r\n\r\n//output format **  12:00  **\r\n\r\nexport const timeConverter = timeString => {\r\n  console.log(timeString, 'timed1');\r\n  let val = timeString !== undefined ? timeString : '';\r\n  var str = val.slice(0, -1);\r\n  console.log(str, 'timed2');\r\n  var now = new Date(str);\r\n  console.log(now, 'timed3');\r\n  var timestring = moment(now).format('HH:mm');\r\n  console.log(timestring, 'timed');\r\n  return timestring;\r\n};\r\n\r\n//converting into local string\r\n// export const timeConverter = timeString => {\r\n//   console.log(timeString, 'timeString');\r\n//   // const time1 = new Date(timeString);\r\n//   // const finalhrs=time1.toLocaleTimeString(time1.setHours(time1.getHours()+ 6)).split(':');\r\n//   // const finalmin=time1.toLocaleTimeString(time1.setMinutes(time1.getMinutes()+ 30)).split(':');\r\n//   // const time = new Date(timeString).toTimeString().split(':');\r\n\r\n//   const time = new Date(timeString).toLocaleTimeString().split(':');\r\n//   console.log(time, 'time string 1');\r\n//   // if (time != 'null') {\r\n//   // const time = new Date(timeString);\r\n//   // const hour=time.getUTCHours();\r\n//   // const min=time.getUTCMinutes();\r\n//   const hour = time[0] || '0';\r\n//   const min = time[1] || '0';\r\n//   return `${hour.length == 1 ? '0' + hour : hour}:${\r\n//     min.length == 1 ? '0' + min : min\r\n//   }`;\r\n//   // }\r\n// };\r\n\r\n// expected format 12:12\r\n//output true or false\r\nexport const timeValidator = value => {\r\n  var regexp = /^\\d{2}:\\d{2}$/gm;\r\n  if (regexp.test(value)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const numberValidator = value => /^\\d{0,}$/gm.test(value);\r\n\r\nexport const tzFormat = (value, date) => {\r\n  const [hour, min] = value.split(':');\r\n  var d = new Date();\r\n  if (date) {\r\n    d = date;\r\n  }\r\n  d.setHours(hour, min, 0);\r\n  return d.toISOString().split('.')[0] + 'Z';\r\n};\r\n","import React, { Component } from 'react';\r\nimport './Pie.scss'\r\n\r\nconst Pie = ({ width, height, chartData }) => {\r\n    // width=200, height=200 ,chartData=[\"green 70%\", \"white 20%\"]\r\n    let data = \"conic-gradient(green 0%,  white 0%)\";\r\n    if (Array.isArray(chartData)) {\r\n      data = \"conic-gradient(\" + chartData.join() + \")\";\r\n    }\r\n    const pie = {\r\n      width: width || \"25%\",\r\n      height: height || \"25%\",\r\n      backgroundImage: data,\r\n      borderRadius: \"100%\",\r\n      position:\"relative\",\r\n    };\r\n  \r\n return <div className=\"pie border-radius q\" style={pie}></div>;\r\n  \r\n  };\r\n  \r\n  export default Pie;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Piechart.scss';\r\n\r\nclass Piechart extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"Alert-bg-container-add\">\r\n                <div className=\"Alert-container-add\">\r\n                    <div>\r\n                        <div>Activity Progress</div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Piechart);\r\n","import React, { Component } from 'react';\r\nimport {Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nclass TaskViewPopOver extends Component {\r\n    state={\r\n\r\n    }\r\n    render(){\r\n        console.log(\"popover\",this.props.isOpen,this.props.toggle)\r\n        return(\r\n           <>\r\n          <Modal isOpen={this.props.isOpen} toggle={this.props.toggle} >\r\n          {/* className={className} */}\r\n          </Modal>\r\n           </> \r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskViewPopOver;","import React, { useState } from 'react';\r\nimport Button from '../../../Atoms/Button';\r\nimport { commonAction } from '../../../../Store/commonActivity/action';\r\nimport { flightUpdateActions } from '../../../../Store/flightManagement/flightUpdate/flightUpdate.action';\r\nimport { connect } from 'react-redux';\r\nimport { DateMonthConverter, timeConverter, tzFormat } from '../calculation';\r\nimport { loaderAction } from '../../../../Store/loader/loader.action';\r\nimport { useSelector } from \"react-redux\";\r\nimport Pie from '../../../Atoms/Pie';\r\nimport Piechart from '../../../Molecules/Piechart';\r\nimport TaskViewPopOver from '../../TaskViewScreen/TaskView';\r\n\r\n\r\n\r\nconst { setLoader, removeLoader } = loaderAction;\r\n\r\nexport const FlightList = ({ flights, updateData, callback }) => {\r\n\r\n\r\n  const {\r\n    fltnumber = '',\r\n    aircraftregistrationno = '',\r\n    airlineaircrafttype = '',\r\n    depstncd = '',\r\n    arrstncd = '',\r\n    schdeplcldttm = '',\r\n    scharrlcldttm = '',\r\n    inlcldttm = '',\r\n    offlcldttm = '',\r\n    outlcldttm = '',\r\n    onlcldttm = '',\r\n    depgateno = '',\r\n    fltstatus = '',\r\n    actarrlcldttm = '',\r\n    actdeplcldttm = '',\r\n    percentagecompleted = '',\r\n  } = flights;\r\n  console.log(flights, 'updatedetails');\r\n\r\n  const [pieChartOpen, setPieChartOpen] = useState(false);\r\n  const toggle = () => setPieChartOpen(!pieChartOpen);\r\n\r\n  // const [ButtonChange, setButtonChange] = useState(false);\r\n  // console.log(ButtonChange,\"BUTTONCHANGE\");\r\n  const UpdateDoneStatus = useSelector(state => state.fltMngtUpdate.UpdateDone);\r\n  console.log(UpdateDoneStatus, \"counter\")\r\n  const departure = {\r\n    stationname: depstncd,\r\n    OutOrIn: outlcldttm === null ? '' : timeConverter(outlcldttm),\r\n    OnOrOff: offlcldttm === null ? '' : timeConverter(offlcldttm),\r\n    stdorsta: schdeplcldttm === null ? '' : timeConverter(schdeplcldttm),\r\n    dateMonth: schdeplcldttm === null ? '' : DateMonthConverter(schdeplcldttm),\r\n    atdorata: actdeplcldttm === null ? '' : timeConverter(actdeplcldttm),\r\n    gateno: depgateno\r\n  };\r\n  const arrival = {\r\n    stationname: arrstncd,\r\n    OutOrIn: inlcldttm === null ? '' : timeConverter(inlcldttm),\r\n    OnOrOff: onlcldttm === null ? '' : timeConverter(onlcldttm),\r\n    stdorsta: scharrlcldttm === null ? '' : timeConverter(scharrlcldttm),\r\n    dateMonth: scharrlcldttm === null ? '' : DateMonthConverter(scharrlcldttm),\r\n    atdorata: actarrlcldttm === null ? '' : timeConverter(actarrlcldttm),\r\n  };\r\n  const checkDataAvailable = (value = {}) => {\r\n    console.log(value, 'condition check');\r\n    for (const key in value) {\r\n      console.log(key, 'value52');\r\n      if (value.hasOwnProperty(key)) {\r\n        const element = value[key];\r\n        console.log(element, 'value');\r\n        if (element === '' || element === null) {\r\n          commonAction.openAlert({\r\n            title: 'Flight Information',\r\n            content: 'All editable field must be filled.',\r\n          });\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const setSuccessAlert = value =>\r\n    commonAction.openAlert({\r\n      title: 'Success',\r\n      content: value + '.',\r\n    });\r\n\r\n  const updatedData = data => {\r\n    this.props.getUpdate();\r\n    this.props.postUpdatedData();\r\n  };\r\n\r\n  const updateHandler = (e) => {\r\n    e.stopPropagation();\r\n    //  setButtonChange(true)\r\n    //  callback(true);\r\n    console.log('UpdateHandler', updateData.id);\r\n    flightUpdateActions.storeUpdateDone({ flightlegid: updateData.id, ischange: true });\r\n  }\r\n\r\n  const Taskview = ()=>{\r\n    console.log(\"taskview\")\r\n    setPieChartOpen(true)\r\n  }\r\n\r\n  const DoneHandler = e => {\r\n    console.log('DoneHandler', updateData.id);\r\n    e.stopPropagation();\r\n    const {\r\n      FlightInformation,\r\n      // FlightSchedule,\r\n      // FlightTurnAround,\r\n      id,\r\n    } = updateData;\r\n    // if (\r\n    //   checkDataAvailable(FlightInformation)\r\n    //   //  &&\r\n    //   // checkDataAvailable(FlightSchedule) &&\r\n    //   // checkDataAvailable(FlightTurnAround)\r\n    // ) {\r\n    console.log('Inside UPDATE DATA');\r\n\r\n    // const request = {\r\n    // const request = value => {\r\n    const request = {\r\n      // actarrutcdttm:\r\n      //   FlightSchedule.ATA === tzFormat(FlightSchedule.ATA)\r\n      //     ? FlightSchedule.ATA\r\n      //     : tzFormat(FlightSchedule.ATA),\r\n      // actdeputcdttm:\r\n      //   FlightSchedule.ATD === tzFormat(FlightSchedule.ATD)\r\n      //     ? FlightSchedule.ATD\r\n      //     : tzFormat(FlightSchedule.ATD),\r\n      // offutcdttm:\r\n      //   FlightSchedule.OFF === tzFormat(FlightSchedule.OFF)\r\n      //     ? FlightSchedule.OFF\r\n      //     : tzFormat(FlightSchedule.OFF),\r\n      // onutcdttm:\r\n      //   FlightSchedule.ON === tzFormat(FlightSchedule.ON)\r\n      //     ? FlightSchedule.ON\r\n      //     : tzFormat(FlightSchedule.ON),\r\n      // estarrutcdttm:\r\n      //   FlightSchedule.ETA === tzFormat(FlightSchedule.ETA)\r\n      //     ? FlightSchedule.ETA\r\n      //     : tzFormat(FlightSchedule.ETA),\r\n      // estdeputcdttm:\r\n      //   FlightSchedule.ETD === tzFormat(FlightSchedule.ETD)\r\n      //     ? FlightSchedule.ETD\r\n      //     : tzFormat(FlightSchedule.ETD),\r\n\r\n      // actarrutcdttm: tzFormat(FlightSchedule.ATA),\r\n      // actdeputcdttm: tzFormat(FlightSchedule.ATD),\r\n      // offutcdttm: tzFormat(FlightSchedule.OFF),\r\n      // onutcdttm: tzFormat(FlightSchedule.ON),\r\n      // estarrutcdttm: tzFormat(FlightSchedule.ETA),\r\n      // estdeputcdttm: tzFormat(FlightSchedule.ETD),\r\n\r\n      paxcount: Number(FlightInformation.Pax_load),\r\n      baggagecount: Number(FlightInformation.Baggage),\r\n      ssrcount: Number(FlightInformation.PRM),\r\n      depgateno: FlightInformation.Gate,\r\n      aircraftregistrationno: FlightInformation.AC_REG,\r\n      baynumber: FlightInformation.Bay,\r\n    };\r\n    console.log(request, id, 'call');\r\n    // setButtonChange(false);\r\n\r\n    flightUpdateActions.storeUpdateDone({ flightlegid: updateData.id, ischange: false });\r\n    flightUpdateActions.postFLT_Update(request, id);\r\n\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flight-list\">\r\n      {pieChartOpen ? <TaskViewPopOver  isOpen={pieChartOpen} toggle={toggle}/> : ''} \r\n      <div className=\"flight-info\">\r\n        <div className=\"flight-col-list-1 \">\r\n          <div className=\"flight-id font-weight-bold\"> {fltnumber}</div>\r\n          <div className=\"flight-name\">\r\n            {aircraftregistrationno} | {airlineaircrafttype}\r\n          </div>\r\n        </div>\r\n        <div className=\"flight-col-list-2 \">\r\n          <ActualTimeRenderer heading={['STD', 'ATD', 'OFF', 'GATE']} {...departure} />\r\n        </div>\r\n        <div className=\"flight-col-list-3 \">\r\n          <ActualTimeRenderer heading={['STA', 'ATA', 'ON']} {...arrival} />\r\n        </div>\r\n        {/* <div className=\"flight-col-list-4 \">\r\n          <div className=\"journey-details\">{depgateno} </div>\r\n        </div> */}\r\n        <div className=\"flight-col-list-4 percentagecompletion dis-flex\">\r\n          <div className=\"journey-details redcolor\">\r\n            {percentagecompleted}% </div>\r\n          <div className=\"marginleft2pt\" onClick={Taskview}><Pie width={15} height={15} chartData={[\"rgb(36, 228, 109) \" + percentagecompleted + \"%\", \"white 0%\"]} /></div>\r\n        </div>\r\n        <div className=\"flight-col-list-5 \">\r\n          <Button className=\"flgt-mngt-shedule-button\">{fltstatus}</Button>\r\n          {UpdateDoneStatus.flightlegid === updateData.id && UpdateDoneStatus.ischange === true ? (\r\n            <Button\r\n              className=\"flgt-mngt-update-button\"\r\n              ButtonHandler={DoneHandler}\r\n            >\r\n              Done\r\n            </Button>\r\n          ) : (\r\n              <Button\r\n                className=\"flgt-mngt-update-button\"\r\n                ButtonHandler={updateHandler}\r\n              >Update</Button>)}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ActualTimeRenderer = ({\r\n  stationname = '',\r\n  stdorsta = '',\r\n  OutOrOn = '',\r\n  InOrOff = '',\r\n  OnOrOff = '',\r\n  dateMonth = '',\r\n  atdorata = '',\r\n  gateno = '',\r\n  heading,\r\n}) => {\r\n  console.log(OnOrOff, 'OnOrOff');\r\n  return (\r\n    <>\r\n      <div className=\"journey-details departure-place\">\r\n        <span>{stationname} </span> {dateMonth}\r\n      </div>\r\n      <div className=\"departure-head actual-time\">\r\n        <div className=\"actual-time-place flex-1\">\r\n          <div className=\"time-heading mr-b-2\"> {heading[0]} </div>\r\n          <div className=\"time-value\">\r\n            <span className=\"font-weight-bold\">{stdorsta} </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"actual-time-place flex-1\">\r\n          <div className=\"time-heading mr-b-2 flex-1\"> {heading[1]} </div>\r\n          <div className=\"time-value\">\r\n            <span className=\"font-weight-bold\">{atdorata}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"actual-time-place flex-1\">\r\n          <div className=\"time-heading mr-b-2 flex-1\"> {heading[2]} </div>\r\n          <div className=\"time-value\">\r\n            <span className=\"font-weight-bold\">{OnOrOff}</span>\r\n          </div>\r\n        </div>\r\n        <div className=\"actual-time-place flex-1\">\r\n          <div className=\"time-heading mr-b-2 flex-1\"> {heading[3]} </div>\r\n          <div className=\"time-value\">\r\n            <span className=\"font-weight-bold\">{gateno}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n// function mapState(state) {\r\n//   console.log(state,\"liststate\")\r\n//   return { ...state.fltMngtUpdate };\r\n// }\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state, \"liststate\")\r\n  return { ...state.fltMngtUpdate };\r\n};\r\n\r\n\r\n\r\n// const actionCreators = {\r\n//   // getUpdate: flightUpdateActions.getFLT_Update,\r\n//   // getCrewOnFlight: crewOnFlightActions.getFLT_CREWONFLIGHT,\r\n//   postUpdatedData: flightUpdateActions.storeFLT_Update,\r\n//   postfunctionUpdate: flightUpdateActions.storePostFLT_Update,\r\n//   updateCall: flightUpdateActions.postFLT_Update,\r\n//   UpdateDone:flightUpdateActions.storeUpdateDone\r\n// };\r\n\r\nexport default connect(mapStateToProps)(FlightList);\r\n","import React from 'react';\r\nimport '../../flight-management.scss';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\nimport { timeValidator, timeConverter } from '../../calculation';\r\n\r\nexport const FlightSchedules = props => {\r\n  const {\r\n    schdeplcldttm = null,\r\n    scharrlcldttm = null,\r\n    offlcldttm = null,\r\n    onlcldttm = null,\r\n    actarrlcldttm = null,\r\n    actdeplcldttm = null,\r\n    estarrlcldttm = null,\r\n    estdeplcldttm = null,\r\n  } = props.flights;\r\n\r\n  // const inputFields = props.inputFields;\r\n  // const inputFields = props.inputFields || {};\r\n\r\n  // const updateData = value => {\r\n  //   console.log(inputFields, 'inputFileds');\r\n  //   const inputValue = {\r\n  //     ...inputFields,\r\n  //     ETD: inputFields.ETD === null ? '' : timeConverter(estdeplcldttm),\r\n  //     // : inputFields.ETD,\r\n  //     ETA:\r\n  //       inputFields.ETA === null\r\n  //         ? null //timeConverter(estarrlcldttm)\r\n  //         : timeConverter(estarrlcldttm),\r\n  //     // : inputFields.ETA,\r\n  //     ATD:\r\n  //       inputFields.ATD === null\r\n  //         ? null //timeConverter(actdeplcldttm)\r\n  //         : timeConverter(actdeplcldttm),\r\n  //     // : inputFields.ATD,\r\n  //     ATA:\r\n  //       inputFields.ATA === null\r\n  //         ? null //timeConverter(actarrlcldttm)\r\n  //         : timeConverter(actarrlcldttm),\r\n  //     OFF:\r\n  //       inputFields.OFF === null\r\n  //         ? null //timeConverter(offlcldttm)\r\n  //         : timeConverter(offlcldttm),\r\n  //     ON:\r\n  //       inputFields.ON === null\r\n  //         ? null //timeConverter(onlcldttm)\r\n  //         : timeConverter(offlcldttm),\r\n  //   };\r\n  //   console.log(inputValue, 'inputValue');\r\n  //   props.callback({ FlightSchedule: { ...inputValue, ...value } });\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"ScheduleHeader\">\r\n        <div className=\"ScheduleHeading\">Flight Schedule</div>\r\n\r\n        <div className=\"flight-list\">\r\n          <div className=\"flight-info\">\r\n            <div className=\"ScheduleDetails1 \">\r\n              <ActualTimeRendererforupdate\r\n                heading={['STD', 'ETD', 'ATD', 'OFF']}\r\n                // inputFields={props.inputFields}\r\n                // placeholder={props.inputFields}\r\n                // updateData={updateData}\r\n                stdorsta={\r\n                  schdeplcldttm === null ? null : timeConverter(schdeplcldttm)\r\n                }\r\n                etdoreta={\r\n                  estdeplcldttm === null ? null : timeConverter(estdeplcldttm)\r\n                }\r\n                atdoron={\r\n                  actdeplcldttm === null ? null : timeConverter(actdeplcldttm)\r\n                }\r\n                offorata={\r\n                  offlcldttm === null ? null : timeConverter(offlcldttm)\r\n                }\r\n              />\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails6 \"></div>\r\n          </div>\r\n\r\n          <div className=\"flight-list\">\r\n            <div className=\"flight-info\">\r\n              <div className=\"ScheduleDetails1 \">\r\n                <ActualTimeRendererforupdate\r\n                  heading={['STA', 'ETA', 'ON', 'ATA']}\r\n                  // inputFields={props.inputFields}\r\n                  // updateData={updateData}\r\n                  stdorsta={\r\n                    scharrlcldttm !== null ? timeConverter(scharrlcldttm) : null\r\n                  }\r\n                  etdoreta={\r\n                    estarrlcldttm !== null ? timeConverter(estarrlcldttm) : null\r\n                  }\r\n                  atdoron={onlcldttm !== null ? timeConverter(onlcldttm) : null}\r\n                  offorata={\r\n                    actarrlcldttm !== null ? timeConverter(actarrlcldttm) : null\r\n                  }\r\n                />\r\n              </div>\r\n\r\n              <div className=\"ScheduleDetails6 \"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ActualTimeRendererforupdate = ({\r\n  heading,\r\n  updateData,\r\n  inputFields,\r\n  stdorsta,\r\n  etdoreta,\r\n  atdoron,\r\n  offorata,\r\n}) => {\r\n  console.log(stdorsta, etdoreta, atdoron, offorata, ' stdorsta');\r\n  // const setTimeWarning = () =>\r\n  //   commonAction.openAlert({\r\n  //     title: 'Warning',\r\n  //     content: 'Format should be 00:00',\r\n  //   });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"departure-head actual-time\">\r\n        <div className=\"actual-time-place flex-1\">\r\n          <div className=\"updatetime-heading mr-b-2\"> {heading[0]} </div>\r\n          <div className=\"updatetime-value\">\r\n            <span className=\"box font-weight-bold\">{stdorsta}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"actual-time-place flex-1\">\r\n          <div className=\"updatetime-editheading mr-b-2\"> {heading[1]} </div>\r\n\r\n          <div className=\"Details Detailsbox flt-mgnt-update-input updatetimebox-value font-weight-bold\">\r\n            <div\r\n              className=\"flt-mgnt-update-input\"\r\n              // value={inputFields[heading[1]]}\r\n              // defaultValue={etdoreta}\r\n              // onChange={e => {\r\n              //   updateData({ [heading[1]]: e.target.value });\r\n              //   console.log(e.target.value, 'tesssssst');\r\n              // }}\r\n              // blur={e => {\r\n              //   if (!timeValidator(inputFields[heading[1]])) {\r\n              //     // updateData({ [heading[1]]: '' });\r\n              //     setTimeWarning();\r\n              //   }\r\n              // }}\r\n            >\r\n              {etdoreta}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"actual-time-place flex-1\">\r\n          <div className=\"updatetime-editheading mr-b-2\"> {heading[2]} </div>\r\n\r\n          <div className=\"Details Detailsbox flt-mgnt-update-input updatetimebox-value font-weight-bold\">\r\n            <div\r\n            // className=\"flt-mgnt-update-input\"\r\n            // // value={inputFields[heading[2]]}\r\n            // defaultValue={atdoron}\r\n            // onChange={e => {\r\n            //   updateData({ [heading[2]]: e.target.value });\r\n            // }}\r\n            // blur={e => {\r\n            //   if (!timeValidator(inputFields[heading[2]])) {\r\n            //     // updateData({ [heading[2]]: '' });\r\n            //     setTimeWarning();\r\n            //   }\r\n            // }}\r\n            >\r\n              {atdoron}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"actual-time-place flex-1\">\r\n          <div className=\"updatetime-editheading mr-b-2\"> {heading[3]} </div>\r\n\r\n          <div className=\"Details Detailsbox flt-mgnt-update-input updatetimebox-value font-weight-bold\">\r\n            <div\r\n            // className=\"flt-mgnt-update-input\"\r\n            // // value={inputFields[heading[3]]}\r\n            // defaultValue={offorata}\r\n            // onChange={e => {\r\n            //   updateData({ [heading[3]]: e.target.value });\r\n            // }}\r\n            // blur={e => {\r\n            //   if (!timeValidator(inputFields[heading[3]])) {\r\n            //     // updateData({ [heading[3]]: '' });\r\n            //     setTimeWarning();\r\n            //   }\r\n            // }}\r\n            >\r\n              {offorata}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component, useState, useEffect } from 'react';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport '../../flight-management.scss';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\nimport { timeValidator, numberValidator } from '../../calculation';\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\nexport const FlightInformation = props => {\r\n  // const {\r\n  //   schdeplcldttm = '',\r\n  //   scharrlcldttm = '',\r\n  //   offlcldttm = '',\r\n  //   onlcldttm = '',\r\n  //   actarrlcldttm = '',\r\n  //   actdeplcldttm = '',\r\n  //   estarrlcldttm = '',\r\n  //   estdeplcldttm = '',\r\n  //   aircraftregistrationno\r\n  // } = props.flights;\r\n  console.log(props, 'flight information');\r\n  const {\r\n    airlineaircrafttype = '',\r\n    aircraftregistrationno = '',\r\n    depgateno = '',\r\n    baynumber = '',\r\n    paxcount = '',\r\n    ssrcount = '',\r\n    baggagecount = '',\r\n  } = props.flights;\r\n\r\n  const UpdateDoneStatus = useSelector(state => state.fltMngtUpdate.UpdateDone);\r\n  const setTimeWarning = value =>\r\n    commonAction.openAlert({\r\n      title: 'Warning',\r\n      content: value,\r\n    });\r\n\r\n  const inputFields = props.inputFields || {};\r\n  console.log(props,inputFields, 'fieldsinput');\r\n  const updateData = value => {\r\n    console.log(value, 'flightvalue');\r\n    props.callback({ FlightInformation: { ...inputFields, ...value } });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"ScheduleHeader\">\r\n        <div className=\"ScheduleHeading\">Flight Information</div>\r\n\r\n        <div className=\"flight-list\">\r\n          <div className=\"flight-info\">\r\n            <div className=\"ScheduleDetails1 \">\r\n              <div className=\"DetailsHeader\">AC TYPE</div>\r\n              <div className=\"Details1 font-weight-bold\">\r\n                {airlineaircrafttype}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails2 \">\r\n              <div className=\"DetailsHeader\">AC REG</div>\r\n              <div className=\"Details Detailsbox font-weight-bold\">\r\n                <div\r\n                  className=\"flt-mgnt-update-input\"\r\n                  value={inputFields.AC_REG}\r\n                  // defaultValue={aircraftregistrationno}\r\n                  // onChange={e => {\r\n                  //   updateData({ AC_REG: e.target.value });\r\n                  // }}\r\n                  // blur={e => {\r\n                  //   if (!inputFields.AC_REG.length) {\r\n                  //     // updateData({ AC_REG: '' });\r\n                  //     setTimeWarning('should be correct format');\r\n                  //   }\r\n                  // }}\r\n                >\r\n                  {aircraftregistrationno}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails3 \">\r\n              <div className=\"DetailsHeader\">Gate</div>\r\n              {/* {props.Donehandler ?( */}\r\n              {UpdateDoneStatus.flightlegid === props.flights.fltlegid && UpdateDoneStatus.ischange === true ?(\r\n              <div className=\"Details Detailsbox font-weight-bold\">\r\n                <InputElement\r\n                  className=\"flt-mgnt-update-input\"\r\n                  value={inputFields.Gate}\r\n                  defaultValue={depgateno}\r\n                  onChange={e => {\r\n                    updateData({ Gate: e.target.value });\r\n                  }}\r\n                  blur={e => {\r\n                    if (\r\n                      inputFields &&\r\n                      inputFields.gate &&\r\n                      !inputFields.Gate.length\r\n                    ) {\r\n                      updateData({ Gate: '' });\r\n                      setTimeWarning('should be correct format');\r\n                    }\r\n                  }}\r\n                />\r\n              </div>):(\r\n              <div className=\"Details Detailsbox font-weight-bold\">\r\n                {' '}\r\n                <div\r\n                  className=\"flt-mgnt-update-input\"\r\n                  // value={inputFields.Gate}\r\n                />\r\n                {depgateno}\r\n              </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails3 \">\r\n              <div className=\"DetailsHeader\">Bay</div>\r\n              {UpdateDoneStatus.flightlegid === props.flights.fltlegid && UpdateDoneStatus.ischange === true ?(\r\n              <div className=\"Details Detailsbox font-weight-bold\">\r\n                <InputElement\r\n                  className=\"flt-mgnt-update-input\"\r\n                  value={inputFields.Bay}\r\n                  defaultValue={baynumber}\r\n                  onChange={e => {\r\n                    updateData({ Bay: e.target.value });\r\n                  }}\r\n                  blur={e => {\r\n                    if (inputFields.Bay && !inputFields.Bay.length) {\r\n                      updateData({ Gate: '' });\r\n                      setTimeWarning('should be correct format');\r\n                    }\r\n                  }}\r\n                />\r\n              </div>):(\r\n                 <div className=\"Details Detailsbox font-weight-bold\">\r\n                <div\r\n                  className=\"flt-mgnt-update-input\"\r\n                  // value={inputFields.Bay}\r\n                 />\r\n                 {baynumber}\r\n                 </div>\r\n               )}\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails4 \">\r\n              <div className=\"DetailsHeader\">Pax Load</div>\r\n              {UpdateDoneStatus.flightlegid === props.flights.fltlegid && UpdateDoneStatus.ischange === true ?(\r\n              <div className=\"Details Detailsbox font-weight-bold\">\r\n                <InputElement\r\n                  className=\"flt-mgnt-update-input\"\r\n                  value={inputFields.Pax_load}\r\n                  defaultValue={paxcount}\r\n                  onChange={e => {\r\n                    updateData({ Pax_load: e.target.value });\r\n                  }}\r\n                  blur={e => {\r\n                    if (!numberValidator(inputFields.Pax_load)) {\r\n                      updateData({ Pax_load: '' });\r\n                      setTimeWarning('Should be number');\r\n                    }\r\n                  }}\r\n                />\r\n              </div>):(\r\n                 <div className=\"Details Detailsbox font-weight-bold\">\r\n                 <div\r\n                   className=\"flt-mgnt-update-input\"\r\n                   />\r\n                   {paxcount}\r\n                   </div>\r\n                 )}\r\n            </div>\r\n            <div className=\"ScheduleDetails7\">\r\n              <div className=\"DetailsHeader\">SSR</div>\r\n              {UpdateDoneStatus.flightlegid === props.flights.fltlegid && UpdateDoneStatus.ischange === true ?(\r\n              <div className=\"Details Detailsbox font-weight-bold\">\r\n                <InputElement\r\n                  className=\"flt-mgnt-update-input\"\r\n                  value={inputFields.PRM}\r\n                  defaultValue={ssrcount}\r\n                  onChange={e => {\r\n                    updateData({ PRM: e.target.value });\r\n                  }}\r\n                  blur={e => {\r\n                    if (!numberValidator(inputFields.PRM)) {\r\n                      updateData({ PRM: '' });\r\n                      setTimeWarning('Should be number');\r\n                    }\r\n                  }}\r\n                />\r\n              </div>):(\r\n                <div className=\"Details Detailsbox font-weight-bold\">\r\n                <div\r\n                  className=\"flt-mgnt-update-input\"/>\r\n                  {ssrcount}\r\n                  </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails8 \">\r\n              <div className=\"DetailsHeader\">Baggage</div>\r\n              {UpdateDoneStatus.flightlegid === props.flights.fltlegid && UpdateDoneStatus.ischange === true ?(\r\n              <div className=\"Details Detailsbox font-weight-bold\">\r\n                <InputElement\r\n                  className=\"flt-mgnt-update-input\"\r\n                  value={inputFields.Baggage}\r\n                  defaultValue={baggagecount}\r\n                  onChange={e => {\r\n                    updateData({ Baggage: e.target.value });\r\n                  }}\r\n                  blur={e => {\r\n                    if (!numberValidator(inputFields.Baggage)) {\r\n                      updateData({ Baggage: '' });\r\n                      setTimeWarning('Should be number');\r\n                    }\r\n                  }}\r\n                />\r\n              </div>):(\r\n                <div className=\"Details Detailsbox font-weight-bold\">\r\n                <div\r\n                  className=\"flt-mgnt-update-input\"/>\r\n                  {baggagecount}\r\n                  </div>\r\n              )}\r\n            </div>\r\n            <div className=\"ScheduleDetails9 \"></div>\r\n\r\n            {/* <Button className='flgt-mngt-update-button' ButtonHandler={()=>this.props.FlightSchedule(false)}>Update</Button>  */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* </div> */}\r\n      {/* </div> */}\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './AddTurn.scss';\r\nimport Button from '../../Atoms/Button';\r\nimport Input from '../../Atoms/InputElement';\r\nimport { Dropdown as DropdownComponent } from '../../Atoms/DropdownComponent';\r\nimport Date_picker from '../../Atoms/Datepicker';\r\nimport { StationActions } from '../../../Store/Station/action';\r\nimport { TemplateListActions } from '../../../Store/TemplateList/action';\r\nimport { templateActions } from '../../../Store/flightManagement/template/template.action';\r\nimport { flightTurnAroundAction } from '../../../Store/flightManagement/flightUpdate/flightTurnAround/flightTurnAround.action';\r\nimport SearchBox from '../../Atoms/SearchBox';\r\nimport moment from 'moment';\r\nimport { flightUpdateActions } from '../../../Store/flightManagement/flightUpdate/flightUpdate.action';\r\nimport config from '../../../config';\r\nimport { commonAction } from '../../../Store/commonActivity/action';\r\n\r\nclass AddTurn extends Component {\r\n    obj = {\r\n        depstncdarr: '',\r\n        arrstncdarr: '',\r\n        turnIdLst: '',\r\n        flightNum: '',\r\n        effectivefrom: '',\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchBoxValue: '',\r\n            list: [],\r\n            objFltVal: '',\r\n            template: '',\r\n            fltnum: '',\r\n            origin: '',\r\n            opsdate: '',\r\n            submitted: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.stationdd();\r\n        this.props.turnId();\r\n        this.props.flightTemp();\r\n    }\r\n\r\n    calenderdate = (date) => {\r\n        if (date !== null) {\r\n            let Dated = moment(date).format('YYYY-MM-DD');\r\n            let Time = moment(date).format('HH.mm.ss');\r\n            let currentdate = Dated + \"T\" + Time + \"Z\";\r\n            return currentdate;\r\n        } else {\r\n            return ''\r\n        }\r\n    }\r\n\r\n    // searchhandler = (e, list) => {\r\n    //     let toString = e.target.value.toString();\r\n    //     console.log(toString, 'to string');\r\n    //     this.setState({ searchBoxValue: toString, list });\r\n    // };\r\n\r\n    // sort = val => {\r\n    //     let iteration = val;\r\n    //     if (this.state.searchBoxValue !== '') {\r\n    //         iteration = val.filter(item => {\r\n    //             console.log(item, 'view');\r\n\r\n    //             if (\r\n    //                 item.fltnumber\r\n    //                     .toLowerCase()\r\n    //                     .indexOf(this.state.searchBoxValue.toLowerCase()) !== -1\r\n    //             ) {\r\n    //                 console.log(\r\n    //                     item.fltnumber.toLowerCase(),\r\n    //                     this.state.searchBoxValue.toLowerCase(),\r\n    //                     'selva search'\r\n    //                 );\r\n    //                 return item;\r\n    //             }\r\n    //         });\r\n    //     }\r\n    //     return iteration;\r\n    // };\r\n\r\n    fltLegIdForArr = () => {\r\n        return (\r\n            this.props.fltstatusReducer.templateData.map((key, val) =>\r\n                key.fltlegid.split(\"T\")\r\n            )\r\n        );\r\n    };\r\n\r\n    handleChange(event) {\r\n        const { id, value } = event.target;\r\n        this.setState({ [id]: value });\r\n    }\r\n\r\n    addNewTurn = (EntireFlightData) => {\r\n        // if (this.obj.turnIdLst === '') {\r\n        //     commonAction.openAlert({\r\n        //         title: 'Create Department',\r\n        //         content: 'Please Enter Department Code.',\r\n        //     });\r\n        //     return false;\r\n        // }\r\n        // else if (this.obj.arrstncdarr === '') {\r\n        //     commonAction.openAlert({\r\n        //         title: 'Create Department',\r\n        //         content: 'Please Enter Department Code.',\r\n        //     });\r\n        //     return false;\r\n        // }\r\n\r\n        // else if (this.obj.effectivefrom === '') {\r\n        //     commonAction.openAlert({\r\n        //         title: 'Create Department',\r\n        //         content: 'Please Enter Department Code.',\r\n        //     });\r\n        //     return false;\r\n        // }\r\n\r\n        // else if (this.obj.flightNum === '') {\r\n        //     commonAction.openAlert({\r\n        //         title: 'Create Department',\r\n        //         content: 'Please Enter Department Name.',\r\n        //     });\r\n        //     return false;\r\n        // }\r\n\r\n        this.setState({ submitted: true });\r\n\r\n        let arrival = (\"FLT\" + '_' + this.obj.flightNum + '_' + this.obj.arrstncdarr + '_' + this.props.flights.depstncd + '_' + this.obj.effectivefrom);\r\n        let depat = this.props.flights.fltlegid;\r\n        let turnIdAdd = this.obj.turnIdLst;\r\n\r\n        let FLT_No_SPlit = arrival.split('_');\r\n        console.log(FLT_No_SPlit, \"FLTNOSPLIT\")\r\n        let FTL_Compare = FLT_No_SPlit[0] + \"_\" + FLT_No_SPlit[1];\r\n        console.log(FTL_Compare, \"spliting\")\r\n        let filtered_flight = EntireFlightData.filter((flights) => {\r\n            console.log(flights.fltlegid, \"flights12345\")\r\n            let a = flights.fltlegid.split(\"_\");\r\n            console.log(a, \"fromgflightleg\")\r\n            let b = a[0] + \"_\" + a[1];\r\n\r\n            if (b === FTL_Compare) {\r\n                console.log(b, \"between\")\r\n                if (a[2] === FLT_No_SPlit[2]) {\r\n                    if (a[3] === FLT_No_SPlit[3]) {\r\n                        let flight = a[4].split('T')\r\n                        let userarr = FLT_No_SPlit[4].split('T')\r\n                        if (flight[0] === userarr[0]) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n        console.log(filtered_flight, \"template12345\")\r\n\r\n        //    let compareStation =  filtered_flight.filter((flights)=>{\r\n        //        flights\r\n        //    })\r\n        const { template, fltnum, origin, opsdate } = this.state;\r\n\r\n        if (template && fltnum && origin && opsdate) {\r\n            const obj = {\r\n                arrivallegid: filtered_flight[0] && filtered_flight[0].fltlegid,\r\n                deplegid: depat,\r\n                turntemplateid: turnIdAdd,\r\n            }\r\n\r\n            this.props.submitAddTurn(obj);\r\n            this.props.addNewTurnSubmit();\r\n            // this.props.updateDone({flightlegid:depat,ischange:false })\r\n            flightUpdateActions.storeUpdateDone({ flightlegid: depat, ischange: false });\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { addturn } = config;\r\n        const { template, fltnum, origin, opsdate, submitted } = this.state;\r\n        // const val = this.props.fltstatusReducer.templateData;\r\n        // const sort = this.sort(val);\r\n\r\n        // console.log(sort, \"shorterArr\");\r\n        let EntireFlightData = this.props.fltstatusReducer.templateData;\r\n\r\n        let Stationdddata = [];\r\n        let TurnIdList = [];\r\n        let Stationarrdata = [];\r\n\r\n        this.props.stationreducer.map((item) =>\r\n            Stationarrdata.push({ title: item.station, selected: false })\r\n        );\r\n\r\n        this.props.stationreducer.map((item) =>\r\n            Stationdddata.push({ title: item.station, selected: false })\r\n        );\r\n\r\n        this.props.templateresponse.data.map((item) =>\r\n            TurnIdList.push({ title: item.id, selected: false })\r\n        );\r\n        return (\r\n            <div className=\"Alert-bg-container-add\">\r\n                <div className=\"Alert-container-add\">\r\n                    <div className=\"Add-title add-turn-tittle pad-10l\">Add Turn</div>\r\n\r\n                    <div className=\"pad-10\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"heig-75\">\r\n                                <div className=\"pad-5b\">Template</div>\r\n                                <div className=\"mandatory-star\">&nbsp;*</div>\r\n\r\n                                <DropdownComponent\r\n                                    className=\"bg-white\"\r\n                                    list={TurnIdList}\r\n                                    id=\"template\"\r\n                                    placeholder={`Select`}\r\n                                    toggleItem={val => {\r\n                                        this.obj.turnIdLst = val.title;\r\n                                    }} />\r\n                                {submitted && !template && (\r\n                                    <div className=\"help-block\">{addturn.err.template}</div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"heig-80\">\r\n                                <div className=\"pad-5\">Inbound Flight Number</div>\r\n                                <div className=\"mandatory-star\">&nbsp;*</div>\r\n                                {/* <SearchBox\r\n                            placeholder=\"Flight or Tail Number\"\r\n                            onChange={this.searchhandler}\r\n                            list={val}\r\n                            filterBy={['fltnumber']}\r\n                            className=\"add-turn-search-bar\"\r\n                            addTurnSearch\r\n                            searchIcon\r\n                        /> */}\r\n                                <Input\r\n                                    className=\"heig-48\"\r\n                                    id=\"fltnum\"\r\n                                    onChange={e => {\r\n                                        this.obj.flightNum = e.target.value;\r\n                                    }} />\r\n                                {submitted && !fltnum && (\r\n                                    <div className=\"help-block\">{addturn.err.fltnum}</div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"heig-80\">\r\n                                <div className=\"pad-5\">Origin</div>\r\n                                <div className=\"mandatory-star\">&nbsp;*</div>\r\n                                <DropdownComponent\r\n                                    className=\"bg-white\"\r\n                                    title=\"Select\"\r\n                                    id=\"origin\"\r\n                                    list={Stationarrdata}\r\n                                    placeholder=\"Select\"\r\n                                    toggleItem={val => {\r\n                                        this.obj.arrstncdarr = val.title;\r\n                                    }} />\r\n                                {submitted && !origin && (\r\n                                    <div className=\"help-block\">{addturn.err.origin}</div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div className=\"pad-5\">Destination</div>\r\n                            </div>\r\n                            {/* <DropdownComponent\r\n                            className=\"bg-white\"\r\n                            list={Stationdddata}\r\n                            placeholder={`Select`}\r\n                            toggleItem={val => {\r\n                                this.obj.depstncdarr = val.title;\r\n                            }} /> */}\r\n                            <Input\r\n                                defaultValue={this.props.flights.depstncd} />\r\n\r\n                            <div className=\"heig-80\">\r\n                                <div className=\"pad-5\">OPS Date</div>\r\n                                <div className=\"mandatory-star\">&nbsp;*</div>\r\n\r\n                                <Date_picker\r\n                                    className=\"datepic-width\"\r\n                                    id=\"opsdate\"\r\n                                    minDate={moment().toDate()}\r\n                                    Getbackdate={date => {\r\n                                        // this.obj.Effective = date;\r\n                                        this.obj.effectivefrom = this.calenderdate(date)\r\n                                    }}\r\n                                />\r\n                                {submitted && !opsdate && (\r\n                                    <div className=\"help-block\">{addturn.err.opsdate}</div>\r\n                                )}\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    <div className=\"Add-title button-block\">\r\n                        <div className=\"buttonflex\">\r\n                            <Button\r\n                                className=\"cancel-btn\"\r\n                                ButtonHandler={\r\n                                    this.props.closeAlert\r\n                                }\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                        </div>\r\n                        <div className=\"buttonflex\">\r\n                            <Button\r\n                                className=\"save-btn\"\r\n                                ButtonHandler={() => {\r\n                                    this.addNewTurn(EntireFlightData);\r\n                                }}\r\n                            >\r\n                                Done\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    stationdd: StationActions.getStationDetails,\r\n    turnId: TemplateListActions.getTemplateData,\r\n    submitAddTurn: flightTurnAroundAction.postFLT_TurnAround,\r\n    flightTemp: templateActions.getFLT_Template,\r\n    updateDone: flightUpdateActions.storeUpdateDone,\r\n};\r\nconst mapStateToProps = state => {\r\n    console.log(state, \"state\");\r\n    return {\r\n        stationreducer: state.Stationinitialdata,\r\n        templateresponse: state.TurnTemplateInitialDatareducer,\r\n        fltstatusReducer: state.flightManagementTemplate,\r\n        ...state.fltMngtUpdate,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTurn);\r\n","import React, { Component } from 'react';\r\nimport '../../flight-management.scss';\r\nimport AddTurn from '../../../../Molecules/AddTurn';\r\nimport DeleteIcon from '../../../../Img/delete.png';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport Confirmation from '../../../../Molecules/confirmation_alert';\r\nimport { flightTurnAroundAction } from '../../../../../Store/flightManagement/flightUpdate/flightTurnAround/flightTurnAround.action';\r\n\r\n\r\nclass AddDeleteTurn extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { addTurnLink: false, confirmDelete: false, selectedindexfordelete: null };\r\n    }\r\n\r\n    openAdd = () => {\r\n        this.setState({ addTurnLink: true })\r\n    }\r\n\r\n    addNewTurnSubmit = () => {\r\n        this.setState({ addTurnLink: false })\r\n    }\r\n\r\n    cancelAddNewTurn = () => {\r\n        this.setState({ addTurnLink: false })\r\n    }\r\n    handleRemove = (val) => {\r\n        this.setState({ confirmDelete: true, selectedindexfordelete: val })\r\n    }\r\n\r\n    deleteAddTurn = () => {\r\n        this.props.deleteTurn(this.state.selectedindexfordelete);\r\n        this.setState({ confirmDelete: false, selectedindexfordelete: null })\r\n    }\r\n\r\n    cancelDeleteStation = () => {\r\n        this.setState({ confirmDelete: false, selectedindexfordelete: null })\r\n    }\r\n\r\n    splitDepLegId = (depleg, reqstation) => {\r\n        if (depleg && depleg !== null) {\r\n            let dep = depleg.split(\"_\");\r\n            let departure = [];\r\n            departure = dep;\r\n            console.log(departure, \"departure\")\r\n            if (reqstation === \"station1\") {\r\n                return departure[2]\r\n            } else if (reqstation === \"station2\") {\r\n                return departure[3]\r\n            } else if (reqstation === \"Time1\") {\r\n                console.log(departure[4], \"departure4\")\r\n                if (departure[4] !== undefined || departure[4] !== null) {\r\n                    let replace1 = departure[4].replace(\".\", \":\");\r\n                    let replace2 = replace1.replace(\".\", \":\")\r\n                    let datestring = moment(replace2).format(\"DD MMM YY\")\r\n                    console.log(datestring, \"datestring\")\r\n                    return datestring;\r\n                }\r\n            } else if (reqstation === \"fltnumber\") {\r\n                return departure[1]\r\n            }\r\n            else if (reqstation === \"Time2\") {\r\n                console.log(departure[4], \"departure4\")\r\n                if (departure[4] !== undefined || departure[4] !== null) {\r\n                    let replace1 = departure[4].replace(\".\", \":\");\r\n                    let replace2 = replace1.replace(\".\", \":\")\r\n                    console.log(replace2,\"replace2\")\r\n                    let removeZ =  replace2.slice(0, -1);\r\n                    console.log(removeZ,\"removeZ\")\r\n                    let datestring = moment(removeZ).format(\"HH:mm:ss\");\r\n                    console.log(datestring, \"datestring\")\r\n                    return datestring;\r\n                }\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    split = (depleg) => {\r\n        if (depleg !== undefined && depleg !== null) {\r\n            let dep = depleg.split(\"_\");\r\n            let splitarrary = [];\r\n            splitarrary = dep;\r\n            return splitarrary;\r\n        }\r\n    }\r\n\r\n    arrivaldepartureverification = (arr, dep) => {\r\n        if (arr !== null && arr !== undefined && dep !== null && dep !== undefined) {\r\n            console.log(arr, dep, \"arrdep\")\r\n            let arrival = this.split(arr);\r\n            let departure = this.split(dep);\r\n            console.log(arrival, departure, \"arrdep2\")\r\n            if (arrival[3] !== departure[2]) {\r\n                return \"Tail Discontinuity Detected.Action Required\"\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.flights, \"adddeleteturn\")\r\n        return (\r\n            <>\r\n                <div>\r\n                    {this.state.confirmDelete ?\r\n                        <Confirmation\r\n                            title=\"Aircraft Registration\"\r\n                            content=\"Are you sure you want to delete?\"\r\n                            deleteId={() => this.deleteAddTurn()}\r\n                            closeAlert={() => this.cancelDeleteStation()} />\r\n                        : ''}\r\n                    {this.state.addTurnLink ?\r\n                        <AddTurn\r\n                            turnName={this.props.turnName}\r\n                            flights={this.props.flights}\r\n                            addNewTurnSubmit={() => this.addNewTurnSubmit()}\r\n                            closeAlert={() => this.cancelAddNewTurn()} />\r\n                        : ''}\r\n                    {this.props.turnName === \"CurrentTurn\" && this.props.noCurrentTurnAvailable === 'NA' && this.props.TurnData === null ? <div className=\"addnewturn\">Current Turn not assigned. <span className=\"click-here\" onClick={() => this.openAdd()}>Click Here</span> to add New turn</div> : (\r\n                        <div>\r\n                            <div className=\"add-turn\">\r\n                                <div className=\"arrdepdiscontinutiy\">{this.props.turnName === \"NextTurn\" ? this.arrivaldepartureverification(this.props.TurnData && this.props.TurnData.arrivallegid, this.props.TurnData && this.props.TurnData.deplegid) : ''}</div>\r\n                                <div className=\"dis-flex\">\r\n                                    <div className=\"width-20\">{this.splitDepLegId(this.props.TurnData && this.props.TurnData.arrivallegid, 'fltnumber')}</div>\r\n                                    <div className=\"width-50\">\r\n                                        <div>{this.splitDepLegId(this.props.TurnData && this.props.TurnData.arrivallegid, \"station1\")} - {this.splitDepLegId(this.props.TurnData && this.props.TurnData.arrivallegid, \"station2\")}</div>\r\n                                        <div className=\"mar-5t\">\r\n                                            <div >{this.splitDepLegId(this.props.TurnData && this.props.TurnData.arrivallegid, 'Time1')}</div>\r\n                                            <div className=\"marleft-5t\">{this.splitDepLegId(this.props.TurnData && this.props.TurnData.arrivallegid, 'Time2')}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"width-20\">{this.splitDepLegId(this.props.TurnData && this.props.TurnData.deplegid, \"fltnumber\")}</div>\r\n                                    <div className=\"width-50\">\r\n                                        <div>{this.splitDepLegId(this.props.TurnData && this.props.TurnData.deplegid, \"station1\")} - {this.splitDepLegId(this.props.TurnData && this.props.TurnData.deplegid, \"station2\")}  </div>\r\n                                        <div className=\"mar-5t\">\r\n                                            <div >{this.splitDepLegId(this.props.TurnData && this.props.TurnData.deplegid, 'Time1')}</div>\r\n                                            <div className=\"marleft-5t\">{this.splitDepLegId(this.props.TurnData && this.props.TurnData.deplegid, 'Time2')}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.props.turnName === 'NextTurn' ? '' :\r\n                                        this.props.UpdateDone.flightlegid === this.props.fltlegid && this.props.UpdateDone.ischange === true ? (\r\n                                            <div className=\"delete-img\">\r\n                                                <img\r\n                                                    onClick={() => this.handleRemove(this.props.TurnData.turninstanceid)}\r\n                                                    src={DeleteIcon}\r\n                                                    width=\"20px\"\r\n                                                    height=\"20px\"\r\n                                                    alt=\"delete\"\r\n                                                />\r\n                                            </div>) : ''\r\n                                    }\r\n                                </div>\r\n                            </div></div>)}\r\n                </div>\r\n            </>);\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapState(state) {\r\n    console.log(state, \"addnewturn\")\r\n    return {\r\n        ...state.fltMngtUpdate,\r\n    };\r\n}\r\n\r\n\r\nconst actionCreators = {\r\n    deleteTurn: flightTurnAroundAction.deleteCurrentFLT_TurnAround,\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(AddDeleteTurn);\r\n\r\n\r\n\r\n\r\n","import React, { Component, useState, useEffect } from 'react';\r\nimport '../../flight-management.scss';\r\nimport AddDeleteTurn from '../flightUpdate/add-delete-newturn';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\nimport { isJSX } from '@babel/types';\r\nexport const FlightTurnaround = props => {\r\n  console.log(props, 'flightturnaround');\r\n  const { fltnumber = '', aircraftregistrationno } = props.flights;\r\n  const { mgt = '', groundtm = '', plannedtat = '', actualtat = '',arrivallegid = '',deplegid='' } = props.turnData || {};\r\n  console.log('turnn', props);\r\n  // const [turn, setTurn] = useState({\r\n  //   fltnumber,\r\n  //   mgt,\r\n  //   groundtm,\r\n  //   plannedtat,\r\n  // });\r\n\r\n  // useEffect(() => {\r\n  //   const { fltnumber } = props.flights;\r\n  //   const { mgt = '', groundtm = '', plannedtat = '' } =\r\n  //     props.turnData[1] || {};\r\n  //   setTurn({ ...turn, fltnumber, mgt, groundtm, plannedtat });\r\n  // }, [props.flights.fltnumber, props.turnData.length]);\r\n  const inputFields = props.inputFields || {};\r\n  const timeValidator = value => {\r\n    var regexp = /^\\d{2}:\\d{2}$/gm;\r\n    if (regexp.test(value)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  const turnStation = (turnName,arr,dep )=>{\r\n        console.log(turnName,arr,dep,\"turnStation\")\r\n      \r\n        if(turnName === \"CurrentTurn\"){\r\n          if( dep !== null && dep !== undefined ){\r\n          let getturnName = dep && dep.split(\"_\")\r\n          let turnName = getturnName[2];\r\n          return turnName;\r\n          }\r\n        }else if(turnName === \"NextTurn\"){\r\n          if( dep !== null && dep !== undefined){\r\n          let getturnName = dep && dep.split(\"_\")\r\n          let turnName = getturnName[2];\r\n          return turnName;\r\n        }\r\n      }\r\n  }\r\n  // const setTimeWarning = () =>\r\n  //   commonAction.openAlert({\r\n  //     title: 'Warning',\r\n  //     content: 'Format should be 00:00',\r\n  //   });\r\n\r\n  // const updateData = value => {\r\n  //   props.callback({ FlightTurnAround: { ...inputFields, ...value } });\r\n  // };\r\n  return (\r\n    <>\r\n      <div className=\"ScheduleHeader\">\r\n        <div className=\"ScheduleHeading\">{props.turnName}</div>\r\n\r\n        <div className=\"flight-list\">\r\n          <div className=\"flight-info\">\r\n            <div className=\"ScheduleDetails1 \">\r\n              <div className=\"DetailsHeader\">TurnStation</div>\r\n              <div className=\"Details1 font-weight-bold\">{turnStation(props.turnName,arrivallegid,deplegid)}</div>\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails2 \">\r\n              <div className=\"DetailsHeader\">Ground Time</div>\r\n              <div className=\"Details1 font-weight-bold\">{groundtm}</div>\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails3 \">\r\n              <div className=\"DetailsHeader\">Actual TAT</div>\r\n              <div className=\"Details1 font-weight-bold\">{actualtat}</div>\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails4 \">\r\n              <div className=\"DetailsHeader\">Planned TAT</div>\r\n              <div className=\"Details1 font-weight-bold\">{plannedtat}</div>\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails5 \">\r\n              <div className=\"DetailsHeader\">MGT</div>\r\n\r\n              <div className=\"Details1 font-weight-bold\">{mgt}</div>\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails6 \">\r\n              <div className=\"DetailsHeader\">A/C Door Close</div>\r\n              <div className=\"Details Detailsbox font-weight-bold\">\r\n                --\r\n                <div\r\n                  className=\"flt-mgnt-update-input textalign\"\r\n                // placeholder={`06:05`}\r\n                // defaultValue={' '}\r\n                // disabled\r\n                // onChange={e => {\r\n                //   updateData({ DoorClose: e.target.value });\r\n                // }}\r\n                // blur={e => {\r\n                //   if (!timeValidator(inputFields.DoorClose)) {\r\n                //     updateData({ DoorClose: '' });\r\n                //     setTimeWarning();\r\n                //   }\r\n                // }}\r\n                >\r\n                  {}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"ScheduleDetails7 \"></div>\r\n            {/* <div className=\"ScheduleDetails6 \"></div>\r\n              <div className=\"ScheduleDetails7 \"></div> */}\r\n\r\n            {/* <Button className='flgt-mngt-update-button' ButtonHandler={()=>this.props.FlightSchedule(false)}>Update</Button>  */}\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"hr-line\"></div>\r\n          <AddDeleteTurn\r\n            noCurrentTurnAvailable={props.noCurrentTurnAvailable}\r\n            TurnData={props.turnData}\r\n            fltnumber={fltnumber}\r\n            turnName={props.turnName}\r\n            flights={props.flights}\r\n            fltlegid={props.fltlegid} /> </div>\r\n      </div>\r\n\r\n      {/* </div> */}\r\n      {/* </div> */}\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport '../../flight-management.scss';\r\nimport str from '../../../../Img/str.png';\r\nimport clove from '../../../../Img/clove.png';\r\nimport date from '../../../../Img/date.png';\r\nimport fly from '../../../../Img/fly.png';\r\nimport { Allimages } from '../../../../../Utils/imageRetriver';\r\nimport moment from 'moment';\r\nexport const CrewOnFlight = props => {\r\n  console.log('crew', props);\r\n\r\n  const crews = props.crew || [];\r\n\r\n  const DateMonthConverter = dateString => {\r\n\r\n    if(dateString !==null){\r\n    const dateMonth = new Date(dateString).toDateString().split(' ');\r\n    console.log(dateString);\r\n    const month = dateMonth[1] || '';\r\n    const date = dateMonth[2] || '';\r\n    const year = dateMonth[3] || '';\r\n    const str = year.slice(2);\r\n    return `${date} ${month.toUpperCase()} ${str}`;\r\n    console.log(`${date} ${month} ${str}`);\r\n    }else{\r\n      return ''\r\n    }\r\n  };\r\n\r\n  const timeConverter = timeString => {\r\n    //  const time = new Date(timeString).toLocaleTimeString().split(\":\");\r\n    //   const time = new Date(timeString);\r\n    //  const finalhrs=time.toLocaleTimeString(time.setHours(time.getHours()+ 6)).split(':');\r\n    //   const finalmin=time.toLocaleTimeString(time.setMinutes(time.getMinutes()+ 30)).split(':');\r\n    // const time = new Date(timeString).getUTCFullYear();\r\n    // const hour=time.getUTCHours().toString();\r\n    // const min=time.getUTCMinutes().toString();\r\n    if(timeString !==null){\r\n    const time = new Date(timeString).toTimeString().split(':');\r\n    const hour = time[0] || '0';\r\n    const min = time[1] || '0';\r\n    return `${hour.length == 1 ? '0' + hour : hour}:${\r\n      min.length == 1 ? '0' + min : min\r\n    }`;\r\n  }else{\r\n  return ''\r\n  }\r\n  };\r\n\r\n  const time = value => {\r\n    let val = value !== undefined ? value : '';\r\n    var str = val.slice(0, -1);\r\n    var now = new Date(str);\r\n    var timestring = moment(now).format('HH:mm');\r\n    return timestring;\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"ScheduleHeader\">\r\n        <div className=\"ScheduleHeading\">Crew On Flight</div>\r\n        {/* <div className=\"flight-list\"> */}\r\n        <div className=\"crew-list\">\r\n          {crews.map((value, key) => (\r\n            <div className=\"crew-list\" key={key}>\r\n              <div className=\"crew-info\">\r\n                {/* <div className=\"Crew\"> */}\r\n                <div className=\"CrewDetails1 \">\r\n                  <div className=\"CrewDetailsHeader\">{value.staffid}</div>\r\n                </div>\r\n\r\n                <div className=\"CrewDetails2\">\r\n                  <div className=\"CrewDetailsName\">\r\n                    <b>\r\n                      {value.crewfirstname} {value.crewlastname}\r\n                    </b>\r\n                  </div>\r\n                  {/* <div className=\"Rectangle\"><div className=\"RectangleFonts\"><center>#</center>   </div></div>\r\n                  <div className=\"Rectangle\"><div className=\"RectangleFonts\"><center>></center>   </div></div> */}\r\n                </div>\r\n\r\n                <div className=\"CrewDetails3\">\r\n                  <div className=\"CrewDetailsName\">{value.crewbasestation}</div>\r\n                </div>\r\n\r\n                <div className=\"CrewDetails4\">\r\n                  <div className=\"CrewDetailsHeader\">\r\n                    <img src={str} /> {value.actingrank}\r\n                  </div>\r\n                  {/* <img src=\"../../../../Img/star.jpg\"></img>FSS </div> */}\r\n                </div>\r\n\r\n                <div className=\"CrewDetails5\">\r\n                  <div className=\"CrewDetailsHeader textalign\">---\r\n                    {/* <img src={date} /> */}\r\n                    {/* {DateMonthConverter(value.reportingdttm)} */}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"CrewDetails6\">\r\n                  <div className=\"CrewDetailsHeader textalign\">---\r\n                    {/* {timeConverter(value.reportingdttm)} */}\r\n                  </div>\r\n                </div>\r\n                <div className=\"CrewDetails7\">\r\n                  <div className=\"CrewDetailsHeader textalign\">\r\n                    {/* {value.contactnumber} */} ---\r\n                    </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport { FlightSchedules } from './flight-schedule';\r\nimport { FlightInformation } from './flight-information';\r\nimport { FlightTurnaround } from './flight-turnaround';\r\nimport '../../flight-management.scss';\r\nimport { flightUpdateActions } from '../../../../../Store/flightManagement/flightUpdate/flightUpdate.action';\r\nimport { connect } from 'react-redux';\r\nimport { templateActions } from '../../../../../Store/flightManagement/template/template.action';\r\nimport { CrewOnFlight } from './crewonflight';\r\nimport { crewOnFlightActions } from '../../../../../Store/flightManagement/crewOnFlight/crewOnFlight.action';\r\nimport { flightTurnAroundAction } from '../../../../../Store/flightManagement/flightUpdate/flightTurnAround/flightTurnAround.action';\r\nimport { TemplateListActions } from '../../../../../Store/TemplateList/action';\r\n\r\nclass FlightUpdate extends Component {\r\n  componentDidMount() {\r\n    console.log('hifromupdate', this.props.updateDetails);\r\n    this.props.getUpdate();\r\n    this.props.getTurnTemplate();\r\n    this.props.getCrewOnFlight(this.props.updateDetails.id);\r\n    this.props.getflightCurrentTurn(this.props.updateDetails.turnId && this.props.updateDetails.turnId[0]);\r\n    if(this.props.updateDetails.turnId === null ? this.props.getflightNextTurn(this.props.updateDetails.turnId&& this.props.updateDetails.turnId) :\r\n    this.props.getflightNextTurn(this.props.updateDetails.turnId&& this.props.updateDetails.turnId[1]));\r\n   \r\n  }\r\n  fltMgntList = [];\r\n  fltcrew = [];\r\n\r\n  state = {\r\n    list: [],\r\n    crew: [],\r\n  };\r\n\r\n  updatedData = data => {\r\n    console.log(data, 'flightdata');\r\n    this.props.updateHandler({ ...this.props.updateDetails, ...data });\r\n  };\r\n\r\n  render() {\r\n    console.log('this.props.flights', this.props.flights);\r\n    let noCurrentTurnAvailable;\r\n    if(this.props.updateDetails.turnId && this.props.updateDetails.turnId[0] === 'NA' ||  this.props.turnAroundData === null){\r\n         noCurrentTurnAvailable = 'NA';\r\n    }\r\n    else{\r\n       noCurrentTurnAvailable='';\r\n    }\r\n    return (\r\n      <div className=\"update-details-container\">\r\n        <div className=\"Extenddiv\">\r\n        <TemplateInformation\r\n           currentTurn={this.props.turnAroundData}\r\n           templatedetails={this.props.data}\r\n          />\r\n          <FlightSchedules\r\n            flights={this.props.flights}\r\n            inputFields={this.props.updateDetails.FlightSchedule}\r\n            // callback={this.updatedData}\r\n          />\r\n          <FlightInformation\r\n            flights={this.props.flights}\r\n            callback={this.updatedData}\r\n            inputFields={this.props.updateDetails.FlightInformation}\r\n          />\r\n          <FlightTurnaround\r\n            flights={this.props.flights}\r\n            // callback={this.updatedData}\r\n            turnData={this.props.turnAroundData}\r\n            inputFields={this.props.updateDetails.FlightTurnAround}\r\n            turnName=\"CurrentTurn\"\r\n            fltlegid = {this.props.flights.fltlegid}\r\n            noCurrentTurnAvailable = {noCurrentTurnAvailable}\r\n          />\r\n          <FlightTurnaround\r\n            flights={this.props.flights}\r\n            // callback={this.updatedData}\r\n            turnData={this.props.NextturnAroundData}\r\n            inputFields={this.props.updateDetails.NextturnAroundData}\r\n            turnName=\"NextTurn\"\r\n            fltlegid = {this.props.flights.fltlegid}\r\n          />\r\n          <CrewOnFlight crew={this.props.crew} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n \r\n\r\nexport const  TemplateInformation = props =>{\r\n\r\n  const turntemplatename = (template,id) =>{\r\n    console.log(template,id,\"tempid\")\r\n    return(\r\n    template.map((tempdetails)=>{\r\n      if(tempdetails.turntemplateid === id){\r\n        console.log(tempdetails.turntemplatename,id,\"tempid1\")\r\n          let tempname = tempdetails.turntemplatename\r\n          return tempname;\r\n      }\r\n    })\r\n    )\r\n}\r\n  return(\r\n    <>\r\n  <div className=\"ScheduleHeader\">\r\n        <div className=\"ScheduleHeading\">Template Information</div>\r\n        <div className=\"flight-list\">\r\n          <div className=\"flight-info\">\r\n          <div className=\"width25 \">\r\n              <div className=\"DetailsHeader\">Template ID</div>\r\n              <div className=\"Details1 font-weight-bold\">\r\n                {props.currentTurn && props.currentTurn.turntemplateid}\r\n              </div>\r\n            </div>\r\n            <div className=\"width30\">\r\n              <div className=\"DetailsHeader\">Template Name</div>\r\n              <div className=\"Details1 font-weight-bold\">\r\n                 {turntemplatename(props.templatedetails,props.currentTurn && props.currentTurn.turntemplateid)}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        </>\r\n  )\r\n}\r\n\r\nfunction mapState(state) {\r\n  console.log(state,\"indexstate\")\r\n  return {\r\n    ...state.fltMngtUpdate,\r\n    ...state.fltMntCrewOnFlightReducer,\r\n    ...state.fltTurnAroundReducer,\r\n    ...state.TurnTemplateInitialDatareducer\r\n  };\r\n}\r\n\r\nconst actionCreators = {\r\n  getUpdate: flightUpdateActions.getFLT_Update,\r\n  getCrewOnFlight: crewOnFlightActions.getFLT_CREWONFLIGHT,\r\n  postUpdatedData: flightUpdateActions.storeFLT_Update,\r\n  getflightCurrentTurn: flightTurnAroundAction.getFLT_TurnAround,\r\n  getflightNextTurn : flightTurnAroundAction.getFLT_NextTurnAround,\r\n  getTurnTemplate : TemplateListActions.getTemplateData\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(FlightUpdate);\r\n","import React from 'react';\r\nimport './flight-management.scss';\r\nimport SearchBox from '../../Atoms/SearchBox';\r\n// import Accordion from '../../Atoms/Accordion';\r\n// import FileUpload from './presentation/file-upload';\r\nimport { templateActions } from '../../../Store/flightManagement/template/template.action';\r\nimport { connect } from 'react-redux';\r\nimport { FlightList } from './presentation/flight-list';\r\nimport FlightUpdate from './presentation/flightUpdate/index';\r\nimport Slide from '../../Atoms/slidedown';\r\nimport { flightUpdateActions } from '../../../Store/flightManagement/flightUpdate/flightUpdate.action';\r\n// import AddTask from '../../Molecules/AddTask';\r\n// import AddFlightList from './addFlightList/add-flight';\r\n// import filter from '../../../assets/Icon/Group 208.svg';\r\n// import Button from '../../Atoms/Button';\r\n// import Popover, { ArrowContainer } from 'react-tiny-popover';\r\n// import DatePicker from '../../Atoms/Datepicker/index';\r\n\r\nclass FlightManagement extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.togglePopover = this.togglePopover.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    // localStorage.setItem(\r\n    //   'token',\r\n    //   'token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsicmVzb3VyY2Utc2VydmVyLXJlc3QtYXBpIl0sInVzZXJfbmFtZSI6IjEwMTQzMTEiLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU3ODkxMDQxNywidXNlcklkIjoiMTAxNDMxMSIsImF1dGhvcml0aWVzIjpbIkVuZ2luZWVyIl0sImp0aSI6IjQxMDE1OTQ2LWRhMGUtNGY2Yi05ZDdkLWMzMTkxMTQ2MDc4YSIsImNsaWVudF9pZCI6InNwcmluZy1zZWN1cml0eS1vYXV0aDItcmVhZC1jbGllbnQifQ.I9cDxbHjipKRXHuhgkJhSeTvsyCi1_ebSyV3KH-7gYE'\r\n    // );\r\n  }\r\n  \r\n  togglePopover = () => {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  };\r\n\r\n  handleChange(isSubmitted) {\r\n    this.setState({ isFlt_Mgnt_addFlight: isSubmitted });\r\n    this.setState({ searchBoxValue: '' });\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ isOpen: false });\r\n  }\r\n\r\n  updateData = (data, index) => {\r\n   //console.log(\"Hello \")\r\n    const { updateDetails } = this.props;\r\n    // updateDetails.map(val=>{\r\n    //   console.log(val,data,'newInfo')\r\n    //   if(val.id === data.id){\r\n    //     val = {...data}\r\n    //   }\r\n    //   return val\r\n    // })\r\n    let new_data = []\r\n    updateDetails.map(val=> { val.id === data.id ? new_data.push({...data}) : new_data.push({...val})})\r\n    //updateDetails[index] = data;\r\n    this.props.updateDetailsData(new_data);\r\n  };\r\n  state = {\r\n    searchBoxValue: '',\r\n    isFlt_Mgnt_addFlight: false,\r\n    list: [],\r\n    isOpen: false,\r\n    updateDetails:[],\r\n    // Donehandler:'',\r\n  };\r\n  rerender = false;\r\n\r\n  \r\n  componentDidMount() {\r\n    this.props.getTemplate();\r\n     this.Interval =  setInterval(() => { if(this.props.UpdateDone.ischange){\r\n      return '';\r\n     }else{this.props.getTemplatewoloader()}} , 90000);\r\n  }\r\n  componentWillUnmount(){\r\n    flightUpdateActions.storeUpdateDone({flightlegid:\"abc\",ischange:false})\r\n    clearInterval(this.Interval);\r\n   \r\n  }\r\n\r\n  searchHandler = (e, list) => {\r\n   // console.log(e.target.value,\"search handler\")\r\n   console.log(this.props.updateDetails,list,'liusjhads')\r\n   let id = []\r\n    list.map(data=> id.push(data.id))\r\n    let new_data = []\r\n    this.props.updateDetails.map(data => {\r\n      if(id.includes(data.id)){\r\n        new_data.push(data)\r\n      }\r\n    })\r\n    this.setState( {searchBoxValue: e.target.value, list,updateDetails:new_data });\r\n  };\r\n  generateList = (templateList, updatedData) => {\r\n    //check the flight list must be array\r\n    const updateDetails = this.state.updateDetails.length < 1 ? updatedData : this.state.updateDetails\r\n    let updated_data = []\r\n    updateDetails.map(data=>{\r\n      let newData = data\r\n      updatedData.map(u_data=>{\r\n        if(data.id === u_data.id){\r\n          newData = u_data\r\n        }\r\n      })\r\n      updated_data.push(newData)\r\n    })\r\n    if (!Array.isArray(templateList)) {\r\n      return null;\r\n    }\r\n\r\n    let list = [...templateList];\r\n    //check whether searchbox have value\r\n    if (this.state.searchBoxValue.length) {\r\n      list = this.state.list;\r\n      console.log(\"inside search if\",this.state.list)\r\n    }\r\n\r\nconsole.log(updated_data,\"flightdataupdate paaaaajhkj\")\r\n    // generate list\r\n    list = list.map((data, index) => {\r\n      return (\r\n        <Slide\r\n          key={data.fltlegid }\r\n          header={\r\n            <FlightList\r\n              key={data.fltlegid }\r\n              flights={data}\r\n              updateData={updated_data[index]}\r\n            />\r\n          }\r\n          content={\r\n            <FlightUpdate\r\n              flights={data}\r\n              updateDetails={updated_data[index]}\r\n              updateHandler={details => { this.updateData(details, index)}}\r\n            />\r\n          }\r\n        />\r\n      );\r\n     \r\n    });\r\n    console.log(list,\"lastlist\")\r\n    return list;\r\n  };\r\n\r\n  render() {\r\n    const { templateData, updateDetails } = this.props;\r\n    this.fltMgntList = this.generateList(templateData, updateDetails);\r\n    console.log(this.state.Donehandler,\"didmount\")\r\n    return (\r\n      <div className=\"main flight-management\">\r\n        \r\n        <Header\r\n          searchHandler={this.searchHandler}\r\n          handleChange={this.handleChange}\r\n          isAddFlight={this.state.isFlt_Mgnt_addFlight}\r\n          list={templateData}\r\n          searchBoxValue={this.state.searchBoxValue}\r\n          togglePopover={this.togglePopover}\r\n          isOpen={this.state.isOpen}\r\n          handleClose={this.handleClose}\r\n        />\r\n\r\n        {/* <div className=\"flight-manangement-area\">\r\n          {this.state.isFlt_Mgnt_addFlight ? (\r\n            <AddFlightList handleChange={this.handleChange} />\r\n          ) : ( */}\r\n          {/* {this.props.UpdateDone.ischange ? '':( */}\r\n        <div className=\"flight-management-list\">{this.fltMgntList}</div>\r\n        {/* } */}\r\n        {/* )}\r\n          <div className=\"accordian-area\">\r\n            <Accordion menuList={Menu} />\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const FlightSchedule = () => {\r\n//   return <FileUpload />;\r\n// };\r\n\r\nconst Header = ({\r\n  searchHandler,\r\n  handleChange,\r\n  isAddFlight,\r\n  list,\r\n  togglePopover,\r\n  isOpen,\r\n  handleClose,\r\n  searchBoxValue,\r\n}) => {\r\n  return (\r\n    <div className=\"flight-management-header\">\r\n      <div className=\"flight-management-wrap\">\r\n        <div className=\"flight-management-text\">\r\n          Flight Management {isAddFlight && '> Add Flight'}\r\n        </div>\r\n        {console.log(list,searchBoxValue,searchHandler,\"flightfilter\")}\r\n        {/* if not ADD_FLIGHT component render the searchbox and add flight button */}\r\n        {!isAddFlight && (\r\n          <div className=\"flight-management-header-right-content\">\r\n            <SearchBox\r\n              placeholder=\"Flight or Tail Number\"\r\n              onChange={searchHandler}\r\n              list={list}\r\n              value={searchBoxValue}\r\n              filterBy={['fltnumber', 'aircraftregistrationno']}\r\n            />\r\n            {/* <AddTask AddTaskHandler={() => handleChange(true)}>\r\n              {' '}\r\n              Add Flight{' '}\r\n            </AddTask> */}\r\n            <div className=\"fliterPopoverdiv\">\r\n              {/* <Popover\r\n                isOpen={isOpen}\r\n                position={'bottom'} // preferred position\r\n                onClickOutside={handleClose}\r\n                content={({ position, targetRect, popoverRect }) => (\r\n                  <ArrowContainer\r\n                    className=\"arrowContainer\" // if you'd like an arrow, you can import the ArrowContainer!\r\n                    position={position}\r\n                    targetRect={targetRect}\r\n                    popoverRect={popoverRect}\r\n                    arrowColor={'#fafafa'}\r\n                    arrowSize={15}\r\n                    arrowStyle={{ opacity: 1 }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: '#fafafa',\r\n                        opacity: 1,\r\n                        height: '280px',\r\n                        width: '270px',\r\n                      }}\r\n                      onClick={() => {}}\r\n                    >\r\n                      <div\r\n                        style={{\r\n                          opacity: '0.5',\r\n                          marginLeft: '15px',\r\n                          fontSize: '12px',\r\n                          color: '#000000',\r\n                          marginBottom: '7px',\r\n                          paddingTop: '16px',\r\n                        }}\r\n                      >\r\n                        Select Date\r\n                      </div>\r\n                      <div style={{ marginLeft: '10px' }}>\r\n                        <DatePicker />\r\n                      </div>\r\n                      <div\r\n                        style={{\r\n                          width: '270px',\r\n                          height: '51px',\r\n                          marginTop: '147px',\r\n                          border: 'solid 1px #e2e2e2',\r\n                          flexFlow: 'row-reverse',\r\n                          display: 'flex',\r\n                          backgroundColor: '#f0f0f0',\r\n                        }}\r\n                      >\r\n                        <span\r\n                          style={{\r\n                            marginTop: '10px',\r\n                            height: '42px',\r\n                            flexFlow: 'row-reverse',\r\n                            display: 'flex',\r\n                            backgroundColor: '#f0f0f0',\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            className=\"flgt-mngt-search-done-button\"\r\n                            ButtonHandler={() => {}}\r\n                          >\r\n                            Done\r\n                          </Button>\r\n                          <Button ButtonHandler={handleClose}>Cancel</Button>{' '}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </ArrowContainer>\r\n                )}\r\n              >\r\n                <Button className=\"fliterPopover\" ButtonHandler={togglePopover}>\r\n                  <img src={filter} alt={''} />\r\n                </Button>\r\n              </Popover> */}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// export const Menu = [\r\n//   {\r\n//     title: 'File Upload',\r\n//     data: FlightSchedule,\r\n//   },\r\n// {\r\n//   title: 'Crew On Flight',\r\n//   data: FlightSchedule,\r\n// },\r\n// {\r\n//   title: \"Optional place holder\",\r\n//   data: FlightSchedule\r\n// }\r\n// ];\r\n\r\nfunction mapState(state) {\r\n  console.log(state, 'flight template');\r\n  return {...state.flightManagementTemplate,...state.fltMngtUpdate} ;\r\n}\r\n// fltMngtUpdate.UpdateDone\r\nconst actionCreators = {\r\n  getTemplate: templateActions.getFLT_Template,\r\n  updateDetailsData: templateActions.updateDetails,\r\n  getTemplatewoloader : templateActions.getFLT_Templatewoloader,\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(FlightManagement);\r\n"],"sourceRoot":""}