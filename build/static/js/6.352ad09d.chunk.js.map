{"version":3,"sources":["components/Atoms/InputElement/index.js","components/Atoms/DropdownComponent/dropdown.js","components/Molecules/AddTask/index.js","webpack:///./src/assets/Icon/chevronup.svg?fa26","webpack:///./src/assets/Icon/chevrondown.svg?a696","components/Atoms/DropdownComponent/dropdown-multiple.js","components/Atoms/DropdownComponent/index.js","components/Atoms/SearchBox/index.js","components/Atoms/slidedown/index.js","components/Atoms/Accordion/index.js","components/Atoms/Toggler/index.js","components/Page/TurnManagement/Presentation/Header/index.js","components/Atoms/Radio/index.js","components/Page/TurnManagement/Presentation/CreateTask/index.js","components/Atoms/CreateButton/index.js","components/Page/TurnManagement/Presentation/TaskList/index.js","components/Page/TurnManagement/Presentation/ManageTask/index.js","components/Page/TurnManagement/Presentation/CreateDepartment/index.js","components/Page/TurnManagement/Presentation/DepartmentList/index.js","components/Page/TurnManagement/Presentation/ManageDepartment/index.js","components/Page/TurnManagement/Presentation/CreateTurnType/index.js","components/Page/TurnManagement/Presentation/TurnTypeList/index.js","components/Page/TurnManagement/Presentation/ManageTurnType/index.js","components/Page/TurnManagement/Presentation/TurnTemplates/index.js","components/Page/TurnManagement/Presentation/TurnEqupFleet/index.js","components/Atoms/tab/tab.js","components/Atoms/tab/index.js","components/Page/TurnManagement/Presentation/SelectTasks/index.js","components/Page/TurnManagement/Presentation/Dependencytask/index.js","components/Page/TurnManagement/Presentation/ViewTemplate_AddTask/index.js","components/Page/TurnManagement/Presentation/TemplateView/index.js","components/Page/TurnManagement/Presentation/CreateTemplateTemplateDetails/index.js","components/Atoms/SaveCancelButton/index.js","components/Page/TurnManagement/Presentation/CreateTurnTemplate/index.js","components/Page/TurnManagement/Presentation/FlightTurnManagement/index.js","components/Page/TurnManagement/index.js"],"names":["InputElement","disabled","this","props","readOnly","undefined","value","type","id","className","onChange","e","JsonName","onClick","clickInput","onInput","placeholder","onFocus","focus","onBlur","blur","multiple","defaultValue","Component","defaultProps","Dropdown","state","listOpen","headerTitle","title","bold","close","bind","setTimeout","window","addEventListener","removeEventListener","setState","prevState","list","toggleItem","dropdownDisable","toggleList","map","item","key","selected","React","AddTask","clicked","AddTaskHandler","children","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","SvgChevronup","_ref","svgRef","stroke","fill","strokeWidth","viewBox","height","width","ref","ForwardRef","forwardRef","SvgChevrondown","SearchBox","filterBy","event","searchValue","toString","toLowerCase","newList","Array","isArray","filter","list_item","findIndex","filterContent","includes","Slide","open","content","header","sliderStatus","useState","isOpen","setOpen","style","cursor","Accordion","headerComponent","contentComponent","Content","menuList","data","Toggler","togglerchange","istoggle","onoffstatus","DataToggle","Header","Createturntemplate","TemplateSearch","Button","Radio","handler","radioHandler","dataList","index","name","text","htmlFor","CreateTask","obj","taskgroup","tasknm","taskdescription","iscaamsenable","departmentcode","alert","checkallfields","commonAction","openAlert","createtask","TaskSubmit","deptarray","departdropdown","forEach","dropdowndata","push","departmentname","display","ReturnSelected","dep","ButtonHandler","CreateButton","CreateButtonHandler","TaskList","val","TaskResponse","handledelete","src","DeleteIcon","alt","ManageTask","isCreateTask","AccTasksearch","iteration","match","taskinitialresponse","sort","departmentinitialresponse","TaskDelete","mapDispatchToProps","ManageTaskActions","postTaskDetails","deleteTaskDetails","connect","Managetaskinitialdatareducer","Managedepartmentinitialdatareducer","CreateDepartment","Departmentsubmit","toUpperCase","DepartmentList","DepartmentResponse","ManageDepartment","isCreateDepartment","DepartmentDelete","ManageDepartmentActions","postDepDetails","deleteDepartmentDetails","CreateTurnType","turntype","turndescription","TrunTypeSubmit","TurnTypeList","TurnTypeResponse","ManageTurnType","isCreateTurnType","TurnTypesubmit","turntypeinitialresponse","TurnTypeDelete","ManageTurnTypeActions","postTurnTypeDetails","deleteTurnTypeDetails","Manageturntypeinitialdatareducer","TurnTemplates","date","now","Date","moment","format","time","str","slice","templateclick","turntemplateid","airlineaircrafttype","fleettype","turntemplatename","createddate","lastmodifieddate","TurnEqupFleet","TemplateDetails","Tab","label","activeTab","Tabs","onClickTabItem","tab","child","SelectTasks","searchselectedtask","searchhandler","departmentresponse","marginBottom","selectedtask","dependencytask","callback","task","Taskdetails","showorder","isActive","tick","console","taskid","Tick","Tickonclick","Dependencytask","searchdependencytask","selectedOrder","orderDetails","newData","count","order","selectedDependencytask","showOrders","mainTaskCurrent","dependencytaskid","mainTask","taskstart","durationHandler","taskend","isDCPinclude","DCPHandler","ViewTemplate_AddTask","subtaskresponse","Maintask","selectedOrderForMainTask","selectedDependency","generateTurn","SubTask","dependency","filteredMaintask","taskId","Existingtask","existing","maintask","temp","cpminclind","SubTasktemp","newItem","parent","tasks","taskname","isAlreadySelected","main","currentparent","condition","savetask","currentdate","toISOString","split","copyobject","taskorder","finalobj","previoustask","templateresponse","copytemplate","striged","string","JSON","stringify","replace","addtaskcall","AddtasktoExistingTemplate","postcallofaddtask","counter","ViewTemplate","TemplateView","temp_task","addtask","addtaskresponse","AddtaskConst","cancelHandler","entiretemplate","deletedtask","isFooterEnabled","template","templatedetails","vi_temp_equp","plannedtat","temptask","ViewTemplateHeader","navigateback","DeleteTask","CreateTemplateTemplateDetails","fleetcategory","stationcd","Equipfleetcatagory","equipmenttype","numberOnly","test","CreateTemplatedetails","stationscode","CreateTurnTemplateHeader","SaveCancelButton","CancelButtonHandler","DoneButtonHandler","CreateTurnTemplate","turntypeid","station","ManageCreateTurnTemplate","postNewTemplate","FlightTurnManagement","currentTemplateID","pageToNavigate","Addtaskfooter","handleback","equipfleet","internalaircrafttype","templateidname","Menu","childTaskDetails","stationinitialresponse","AircraftTypeList","templateinitialdata","departmentinitialdata","TurnTypeInitialdata","taskinitialdata","stationinitialdata","initialactypedata","TemplateListActions","getTemplateData","getDepartmentDetails","getTurnTypeDetails","getTaskDetails","StationActions","getStationDetails","AircraftTypeActions","getAircraftTypeDetails","TurnTemplateInitialDatareducer","Stationinitialdata","Aircrafttypeinitialdata","TurnManagement"],"mappings":"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","file":"static/js/6.352ad09d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../InputElement/InputElement.scss';\r\nclass InputElement extends Component {\r\n  render() {\r\n    const disabled =\r\n      this.props.disabled && typeof this.props.disabled === 'boolean'\r\n        ? true\r\n        : false;\r\n    const readOnly =\r\n      this.props.readOnly && typeof this.props.readOnly === 'boolean'\r\n        ? true\r\n        : false;\r\n    return this.props.value !== undefined ? (\r\n      <input\r\n        value={this.props.value}\r\n        type={this.props.type}\r\n        id={this.props.id}\r\n        className={'input-style ' + this.props.className}\r\n        readOnly={readOnly}\r\n        disabled={disabled}\r\n        onChange={e => {\r\n          if (\r\n            this.props.onChange &&\r\n            typeof this.props.onChange === 'function'\r\n          ) {\r\n            this.props.onChange(e, this.props.JsonName);\r\n          }\r\n        }}\r\n        onClick={this.props.clickInput}\r\n        onInput={this.props.onInput}\r\n        placeholder={this.props.placeholder}\r\n        onFocus={this.props.focus}\r\n        onBlur={this.props.blur}\r\n        multiple={this.props.multiple}\r\n      />\r\n    ) : (\r\n      <input\r\n        type={this.props.type}\r\n        id={this.props.id}\r\n        className={'input-style ' + this.props.className}\r\n        disabled={disabled}\r\n        onChange={e => {\r\n          if (\r\n            this.props.onChange &&\r\n            typeof this.props.onChange === 'function'\r\n          ) {\r\n            this.props.onChange(e, this.props.JsonName);\r\n          }\r\n        }}\r\n        onClick={this.props.clickInput}\r\n        onInput={this.props.onInput}\r\n        placeholder={this.props.placeholder}\r\n        onFocus={this.props.focus}\r\n        onBlur={this.props.blur}\r\n        multiple={this.props.multiple}\r\n        defaultValue={this.props.defaultValue}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nInputElement.defaultProps = {\r\n  onChange: () => {},\r\n  onInput: () => {},\r\n  clickInput: () => {},\r\n  focus: () => {},\r\n  blur: () => {},\r\n  className: '',\r\n  id: '',\r\n  placeholder: '',\r\n  type: 'text',\r\n  multiple: false,\r\n  disabled: false,\r\n  defaultValue: '',\r\n};\r\n\r\nexport default InputElement;\r\n","import React from 'react';\nimport { ReactComponent as ChevronUp } from '../../../assets/Icon/chevronup.svg';\nimport { ReactComponent as ChevronDown } from '../../../assets/Icon/chevrondown.svg';\nimport { TiTick } from 'react-icons/ti';\nimport './DropDown.scss';\n\nexport default class Dropdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title,\n      bold: false,\n    };\n    this.close = this.close.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { listOpen } = this.state;\n    setTimeout(() => {\n      if (listOpen) {\n        window.addEventListener('click', this.close);\n      } else {\n        window.removeEventListener('click', this.close);\n      }\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.close);\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen,\n    }));\n  }\n\n  close() {\n    this.setState({\n      listOpen: false,\n    });\n  }\n\n  render() {\n    const { list, toggleItem, className } = this.props;\n    const { listOpen, headerTitle } = this.state;\n    return (\n      <div className={`${className} dd-wrapper`}>\n        {this.props.dropdownDisable ? (\n          <div\n            className=\"dd-header disable-bg\"\n            onClick={() => this.toggleList()}\n          >\n            <div\n              className={\n                this.state.bold ? 'dd-header-title-bold' : 'dd-header-title'\n              }\n            >\n              {headerTitle}\n            </div>\n            <span>\n              <ChevronDown />\n            </span>\n          </div>\n        ) : (\n          <div>\n            <div className=\"dd-header\" onClick={() => this.toggleList()}>\n              <div\n                className={\n                  this.state.bold || this.props.defaultValue\n                    ? 'dd-header-title-bold'\n                    : 'dd-header-title'\n                }\n              >\n                {this.state.bold\n                  ? headerTitle\n                  : this.props.defaultValue\n                  ? this.props.defaultValue\n                  : headerTitle}\n              </div>\n              <span>{listOpen ? <ChevronUp /> : <ChevronDown />}</span>\n            </div>\n            {listOpen && (\n              <ul className=\"dd-list\">\n                {list.map(item => (\n                  <li\n                    className=\"dd-list-item\"\n                    key={item.title}\n                    onClick={() => {\n                      this.setState({ headerTitle: item.title, bold: true });\n                      toggleItem(item);\n                    }}\n                  >\n                    {item.title}{' '}\n                    {item.selected && (\n                      <span>\n                        <TiTick />\n                      </span>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nDropdown.defaultProps = {\n  title: 'Select',\n  list: [],\n  toggleItem: () => {},\n  className: '',\n};\n","import React, { Component } from 'react';\r\nimport { GoPlus } from 'react-icons/go';\r\nimport Button from '../../Atoms/Button';\r\nimport './AddTask.scss';\r\n\r\nclass AddTask extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  state = {};\r\n  clicked = e => {\r\n    if (this.props.AddTaskHandler && typeof this.props.AddTaskHandler) {\r\n      this.props.AddTaskHandler(e);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"addtask-conatainer\" onClick={this.clicked}>\r\n        <GoPlus className=\"addtask-create-icon\" />\r\n        <Button className={'addtask-content ' + this.props.className}>\r\n          {this.props.children}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M147.6 301.3c-7.5-7.5-7.5-19.8 0-27.3l95.7-95.4c7.3-7.3 19.1-7.5 26.6-.6l94.3 94c3.8 3.8 5.7 8.7 5.7 13.7 0 4.9-1.9 9.9-5.6 13.6-7.5 7.5-19.7 7.6-27.3 0l-81-79.8-81.1 81.9c-7.5 7.5-19.7 7.5-27.3-.1z\"\n});\n\nvar SvgChevronup = function SvgChevronup(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    stroke: \"currentColor\",\n    fill: \"#666666\",\n    strokeWidth: 0,\n    viewBox: \"0 0 512 512\",\n    height: \"26px\",\n    width: \"26px\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChevronup, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chevronup.8673b621.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M147.6 210.7c-7.5 7.5-7.5 19.8 0 27.3l95.7 95.4c7.3 7.3 19.1 7.5 26.6.6l94.3-94c3.8-3.8 5.7-8.7 5.7-13.7 0-4.9-1.9-9.9-5.6-13.6-7.5-7.5-19.7-7.6-27.3 0l-81 79.8-81.1-81.9c-7.5-7.5-19.7-7.5-27.3.1z\"\n});\n\nvar SvgChevrondown = function SvgChevrondown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    stroke: \"currentColor\",\n    fill: \"#666666\",\n    strokeWidth: 0,\n    viewBox: \"0 0 512 512\",\n    height: \"26px\",\n    width: \"26px\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChevrondown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chevrondown.fee003ff.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\nimport { ReactComponent as ChevronUp } from '../../../assets/Icon/chevronup.svg';\nimport { ReactComponent as ChevronDown } from '../../../assets/Icon/chevrondown.svg';\nimport { TiTick } from 'react-icons/ti';\nimport './DropDown.scss';\n\nclass DropdownMultiple extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title,\n      timeOut: null,\n    };\n    this.close = this.close.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { listOpen } = this.state;\n    setTimeout(() => {\n      if (listOpen) {\n        window.addEventListener('click', this.close);\n      } else {\n        window.removeEventListener('click', this.close);\n      }\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.close);\n  }\n\n  close(timeOut) {\n    this.setState({\n      listOpen: false,\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const count = nextProps.list.filter(function(a) {\n      return a.selected;\n    }).length;\n    if (count === 0) {\n      return { headerTitle: nextProps.title };\n    } else if (count === 1) {\n      return { headerTitle: `${count} ${nextProps.titleHelper}` };\n    } else if (count > 1) {\n      return { headerTitle: `${count} ${nextProps.titleHelper}s` };\n    }\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen,\n    }));\n  }\n\n  render() {\n    const { list, toggleItem } = this.props;\n    const { listOpen, headerTitle } = this.state;\n    return (\n      <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n          <div className=\"dd-header-title\">{headerTitle}</div>\n          <span>{listOpen ? <ChevronUp /> : <ChevronDown />}</span>\n        </div>\n        {listOpen && (\n          <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\n            {list.map(item => (\n              <li\n                className=\"dd-list-item\"\n                key={item.title}\n                onClick={() => toggleItem(item.id, item.key)}\n              >\n                {item.title} {item.selected && <TiTick />}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DropdownMultiple;\n","import Dropdown from './dropdown';\r\nimport DropdownMultiple from './dropdown-multiple';\r\n\r\nexport { Dropdown, DropdownMultiple };\r\n","import React from 'react';\nimport InputElement from '../InputElement';\nimport './search-box.scss';\nimport { MdSearch } from 'react-icons/md';\nconst SearchBox = ({ className, onChange, list, filterBy, ...props }) => {\n  const updateContent = event => {\n    // getting searchbox value\n    const searchValue = event.target.value.toString().toLowerCase();\n\n    // using filter function to get updated list\n    const newList =\n      Array.isArray(list) && filterBy.length\n        ? list.filter(list_item => {\n            //check whether searchbox values are available in list\n            const isTrue = filterBy.findIndex(filterContent => {\n              return list_item[filterContent]\n                .toLowerCase()\n                .includes(searchValue);\n            });\n            return isTrue === -1 ? false : true;\n          })\n        : list;\n    console.log(newList.length, list.length);\n    // pass onchange handler with event and updated list\n    onChange(event, newList);\n  };\n  return (\n    <div className=\"search-box\">\n      <MdSearch className={'search-icon search-' + className} />\n      <InputElement\n        className={' search-bar ' + className}\n        onChange={updateContent}\n        {...props}\n      />\n    </div>\n  );\n};\n\nSearchBox.defaultProps = {\n  /* classname for searchbox */\n  className: '',\n  /* onchange handler to pass the data of EVENT and updated LIST */\n  onChange: () => {},\n  /* list of object should be given for filter */\n  list: [],\n  /* filter using FILTERBY content, \n    filterby content should be array\n  */\n  filterBy: [],\n};\n\nexport default SearchBox;\n","import React, { useState } from 'react';\r\nimport { SlideDown } from 'react-slidedown';\r\nimport 'react-slidedown/lib/slidedown.css';\r\n\r\nconst Slide = ({\r\n  open = false,\r\n  content = null,\r\n  header = null,\r\n  sliderStatus,\r\n}) => {\r\n  const [isOpen, setOpen] = useState(open);\r\n  console.log('hi from slide');\r\n  const handleToggler = () => {\r\n    setOpen(!isOpen);\r\n    sliderStatus(isOpen);\r\n  };\r\n  return (\r\n    <div\r\n      className={`slider ${isOpen ? 'active-slide' : ''}`}\r\n      style={{ cursor: 'pointer' }}\r\n    >\r\n      <div className=\"slider-header\" onClick={handleToggler}>\r\n        {header}\r\n      </div>\r\n      <SlideDown className={'my-dropdown-slidedown'}>\r\n        {isOpen ? content : null}\r\n      </SlideDown>\r\n    </div>\r\n  );\r\n};\r\n\r\nSlide.defaultProps = {\r\n  sliderStatus: () => {},\r\n};\r\n\r\nexport default Slide;\r\n","import React from 'react';\r\nimport '../Accordion/Accordion.scss';\r\n// import {Menu} from '../../../Utils/Data';\r\nimport { IoIosAdd } from 'react-icons/io';\r\nimport { AiOutlineMinus } from 'react-icons/ai';\r\nimport Slide from '../slidedown';\r\n\r\nclass Accordion extends React.Component {\r\n  state = {};\r\n\r\n  headerComponent = header => {\r\n    return (\r\n      <div className=\"heading\">\r\n        <label className=\"tab-label\">\r\n          {header}\r\n          <span>\r\n            {' '}\r\n            <span className=\"minus\">\r\n              <AiOutlineMinus />\r\n            </span>\r\n            <span className=\"add\">\r\n              <IoIosAdd />\r\n            </span>\r\n          </span>\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  contentComponent = Content => {\r\n    return <div className=\"tab-content\">{Content}</div>;\r\n  };\r\n\r\n  render() {\r\n    return this.props.menuList.map((value, i) => (\r\n      <div className=\"row\" key={i}>\r\n        <div className=\"tabs\">\r\n          <div className=\"tab\">\r\n            <Slide\r\n              header={this.headerComponent(value.title)}\r\n              content={this.contentComponent(<value.data />)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Accordion;\r\n","import React from 'react';\r\nimport './Toggler.scss';\r\n\r\nexport default class Toggler extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      istoggle: this.props.value,\r\n    };\r\n  }\r\n\r\n  togglerchange = () => {\r\n    this.setState(\r\n      prevState => {\r\n        return { istoggle: !prevState.istoggle };\r\n      },\r\n      () => {\r\n        if (\r\n          this.props.onoffstatus &&\r\n          typeof this.props.onoffstatus == 'function'\r\n        ) {\r\n          this.props.onoffstatus(this.state);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={'Toggle ' + this.props.DataToggle}>\r\n        <div\r\n          className={this.state.istoggle ? 'Toggler togglerchange' : 'Toggler'}\r\n          onClick={this.togglerchange}\r\n        >\r\n          ON\r\n        </div>\r\n        <div\r\n          className={this.state.istoggle ? 'Toggler' : 'Toggler togglerchange'}\r\n          onClick={this.togglerchange}\r\n        >\r\n          OFF\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport Button from '../../../../Atoms/Button';\r\nimport { MdSearch } from 'react-icons/md';\r\nimport { GoPlus } from 'react-icons/go';\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n  state = {};\r\n\r\n  Createturntemplate = () => {\r\n    if (\r\n      this.props.Createturntemplate &&\r\n      typeof this.props.Createturntemplate === 'function'\r\n    ) {\r\n      this.props.Createturntemplate();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"TurnManagementHeader\">\r\n        <div className=\"TurnManagementwrap\">\r\n          <div className=\"TurnManagementText\">Turn Management</div>\r\n          <div className=\"Turn-header-right-content\">\r\n            <div className=\"turn-search-header\">\r\n              <MdSearch className=\"turn-search-icon\" />\r\n              <InputElement\r\n                className=\"TurnManagementSearchBar\"\r\n                placeholder=\"Template Name / ID\"\r\n                onChange={e => this.props.TemplateSearch(e.target.value)}\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"turn-header-create\"\r\n              onClick={this.Createturntemplate}\r\n            >\r\n              <GoPlus className=\"turn-create-icon\" />\r\n              <Button className=\"CreateTurnTemplate\">\r\n                Create Turn Template\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../Radio/Radio.scss';\r\n\r\nclass Radio extends React.Component {\r\n  handler = e => {\r\n    if (this.props.radioHandler) {\r\n      this.props.radioHandler(e.target.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <>\r\n        {this.props.dataList.map((data, index) => {\r\n          return (\r\n            <>\r\n              <input\r\n                key={index}\r\n                type=\"radio\"\r\n                name={this.props.name}\r\n                id={this.props.name + index}\r\n                value={data.text}\r\n                onChange={e => this.handler(e)}\r\n              />\r\n              <label htmlFor={this.props.name + index}>{data.text}</label>\r\n            </>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Radio;\r\n","import React, { Component } from 'react';\r\nimport './CreateTask.scss';\r\nimport Radio from '../../../../Atoms/Radio';\r\nimport Button from '../../../../Atoms/Button';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport { Dropdown } from '../../../../Atoms/DropdownComponent';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\n\r\nclass CreateTask extends Component {\r\n  obj = {\r\n    taskgroup: '',\r\n    tasknm: '',\r\n    taskdescription: '',\r\n    iscaamsenable: '',\r\n    departmentcode: '',\r\n    alert: '',\r\n  };\r\n\r\n  checkallfields = () => {\r\n    if (this.obj.taskgroup === '') {\r\n      commonAction.openAlert({\r\n        title: 'TASK',\r\n        content: 'Task Group Must be Filled',\r\n      });\r\n      return false;\r\n    } else if (this.obj.tasknm === '') {\r\n      commonAction.openAlert({\r\n        title: 'TASK',\r\n        content: 'Task Name Must be Filled',\r\n      });\r\n      return false;\r\n    } else if (this.obj.taskdescription === '') {\r\n      commonAction.openAlert({\r\n        title: 'TASK',\r\n        content: 'Task Description Must be Filled',\r\n      });\r\n      return false;\r\n    } else if (this.obj.iscaamsenable === '') {\r\n      commonAction.openAlert({\r\n        title: 'TASK',\r\n        content: 'Caams Enable Must be Filled',\r\n      });\r\n      return false;\r\n    } else if (this.obj.alert === '') {\r\n      commonAction.openAlert({\r\n        title: 'TASK',\r\n        content: 'Alert Must be Filled',\r\n      });\r\n      return false;\r\n    } else if (this.obj.departmentcode === '') {\r\n      commonAction.openAlert({\r\n        title: 'TASK',\r\n        content: 'Responsible Department Must be Filled',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    this.props.createtask(false);\r\n    this.props.TaskSubmit(this.obj);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.departdropdown, 'liyu');\r\n    let deptarray = [];\r\n    this.props.departdropdown.forEach(dropdowndata => {\r\n      deptarray.push({\r\n        title: dropdowndata.departmentname,\r\n        selected: false,\r\n      });\r\n    });\r\n\r\n    let dataArray = [\r\n      {\r\n        text: 'ATW',\r\n      },\r\n      {\r\n        text: 'BTW',\r\n      },\r\n    ];\r\n    let caamsyesnoarray = [\r\n      {\r\n        text: 'YES',\r\n      },\r\n      {\r\n        text: 'No',\r\n      },\r\n    ];\r\n    let alertyesnoarray = [\r\n      {\r\n        text: 'YES',\r\n      },\r\n      {\r\n        text: 'No',\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <div className=\"TaskBody\">\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor\">Task Group</div>\r\n            <div className=\"mandatory-star\">&nbsp;*</div>\r\n          </div>\r\n          <Radio\r\n            name=\"click\"\r\n            dataList={dataArray}\r\n            radioHandler={e => (this.obj.taskgroup = e)}\r\n          />\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor Textpadding\">Task Name</div>\r\n            <div className=\"mandatory-star Textpadding\">&nbsp;*</div>\r\n          </div>\r\n          <InputElement\r\n            className=\"inputbox\"\r\n            placeholder=\"Enter\"\r\n            onChange={e => {\r\n              this.obj.tasknm = e.target.value;\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor Textpadding\">Task Description</div>\r\n            <div className=\"mandatory-star Textpadding\">&nbsp;*</div>\r\n          </div>\r\n          <InputElement\r\n            className=\"inputbox\"\r\n            placeholder=\"Enter\"\r\n            onChange={e => {\r\n              this.obj.taskdescription = e.target.value;\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor Textpadding\">CAAMS Enable</div>\r\n            <div className=\"mandatory-star Textpadding\">&nbsp;*</div>\r\n          </div>\r\n          <Radio\r\n            name=\"cammsyesno\"\r\n            dataList={caamsyesnoarray}\r\n            radioHandler={e => {\r\n              if (e === 'YES') {\r\n                this.obj.iscaamsenable = 'Y';\r\n              } else {\r\n                this.obj.iscaamsenable = 'N';\r\n              }\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor Textpadding\">ALERT</div>\r\n            <div className=\"mandatory-star Textpadding\">&nbsp;*</div>\r\n          </div>\r\n          <Radio\r\n            name=\"alertyesno\"\r\n            dataList={alertyesnoarray}\r\n            radioHandler={e => {\r\n              if (e === 'YES') {\r\n                this.obj.alert = 'Y';\r\n              } else {\r\n                this.obj.alert = 'N';\r\n              }\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor Textpadding\">Responsible Department</div>\r\n            <div className=\"mandatory-star Textpadding\">&nbsp;*</div>\r\n          </div>\r\n          <Dropdown\r\n            ReturnSelected={e => {\r\n              this.obj.departmentcode = e;\r\n            }}\r\n            title=\"Select Department\"\r\n            list={deptarray}\r\n            placeholder=\"Select Department\"\r\n            toggleItem={item => {\r\n              this.props.departdropdown.map((dep, i) => {\r\n                if (item.title === dep.departmentname) {\r\n                  this.obj.departmentcode = dep.departmentcode;\r\n                }\r\n              });\r\n            }}\r\n          />\r\n          <div className=\"buttondesign\">\r\n            <Button\r\n              className=\"save-btn\"\r\n              ButtonHandler={() => {\r\n                this.checkallfields();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button ButtonHandler={() => this.props.createtask(false)}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTask;\r\n","import React, { Component } from 'react';\r\nimport './CreateButton.scss';\r\n\r\nclass CreateButton extends Component {\r\n  state = {};\r\n\r\n  clicked = () => {\r\n    console.log('hi');\r\n    if (\r\n      this.props.CreateButtonHandler &&\r\n      typeof this.props.CreateButtonHandler === 'function'\r\n    ) {\r\n      this.props.CreateButtonHandler();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"CreateButton\" onClick={this.clicked}>\r\n          {this.props.text}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateButton;\r\n","import React, { Component } from 'react';\r\nimport './TaskList.scss';\r\nimport DeleteIcon from './../../../../Img/delete.png';\r\n\r\nclass TaskList extends Component {\r\n  state = {};\r\n  obj = {\r\n    tasknm: '',\r\n    taskgroup: '',\r\n  };\r\n  render() {\r\n    const val = this.props.TaskResponse;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Task\">\r\n          {val.map((value, index) => (\r\n            <div className=\"Task-item\" key={index}>\r\n              <div className=\"TaskNumber\">\r\n                {value.id}\r\n                <div className=\"Taskrow2\">{value.taskgroup}</div>\r\n              </div>\r\n              <div className=\"TaskNumber TaskDescription\">\r\n                {value.tasknm}\r\n                <div className=\"Taskrow2\">{value.taskdescription}</div>\r\n              </div>\r\n              <div className=\"TaskCategory\">\r\n                {value.departmentcode}\r\n                {/* {value.deptid} */}\r\n                <div className=\"delete-icon-div\">\r\n                  <img\r\n                    onClick={() => this.props.handledelete({ id: value.id })}\r\n                    src={DeleteIcon}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    alt=\"delete\"\r\n                  />\r\n\r\n                  {/* <div\r\n                        className=\"btn-style pad-16l \"\r\n                        onClick={() => this.handleClick(index)}\r\n                      >\r\n                        <img\r\n                          src={EditIcon}\r\n                          width=\"20px\"\r\n                          height=\"20px\"\r\n                          alt=\"edit\"\r\n                        />\r\n                      </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport CreateTask from '../CreateTask';\r\nimport './ManageTask.scss';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport CreateButton from '../../../../Atoms/CreateButton';\r\nimport TaskList from '../TaskList';\r\nimport { MdSearch } from 'react-icons/md';\r\nimport { connect } from 'react-redux';\r\nimport { ManageTaskActions } from '../../../../../Store/ManageTask/action';\r\nimport SearchBox from '../../../../Atoms/SearchBox';\r\n\r\nclass ManageTask extends React.Component {\r\n  state = {\r\n    isCreateTask: false,\r\n    AccTasksearch: '',\r\n  };\r\n  createtask = isOpen => {\r\n    this.setState(prevState => {\r\n      return { isCreateTask: isOpen };\r\n    });\r\n  };\r\n  TaskSubmit = obj => {\r\n    console.log('task', obj);\r\n    this.props.TaskSubmit(obj);\r\n  };\r\n  AccTasksearch = e => {\r\n    this.setState({ AccTasksearch: e.target.value });\r\n  };\r\n  sort(val) {\r\n    let iteration = val;\r\n    if (this.state.AccTasksearch !== '') {\r\n      iteration = val.filter(item => {\r\n        if (\r\n          item.tasknm\r\n            .toLowerCase()\r\n            .match(this.state.AccTasksearch.toLowerCase())\r\n        ) {\r\n          return item;\r\n        }\r\n      });\r\n    }\r\n    return iteration;\r\n  }\r\n  render() {\r\n    const val = this.props.taskinitialresponse.data;\r\n    console.log(this.props.departmentinitialresponse.data, 'dd');\r\n    console.log(this.state.AccTasksearch, 'acctask');\r\n    const sort = this.sort(val);\r\n    return (\r\n      <>\r\n        {this.state.isCreateTask ? (\r\n          <div>\r\n            <div className=\"createTasks\">Create Tasks</div>\r\n            <CreateTask\r\n              createtask={this.createtask}\r\n              TaskSubmit={this.TaskSubmit}\r\n              departdropdown={this.props.departmentinitialresponse.data}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <CreateButton\r\n            text=\"Create Task\"\r\n            CreateButtonHandler={() => {\r\n              this.createtask(true);\r\n            }}\r\n          />\r\n        )}\r\n        <div className=\"TaskHeading\">\r\n          <div className=\"TaskList\">Task List</div>\r\n          <div className=\"task-search-header\">\r\n            {/* <MdSearch className=\"task-search-icon\" />\r\n            <InputElement\r\n              className=\"searchbartask\"\r\n              placeholder=\"Search by name\"\r\n              onChange={e => this.AccTasksearch(e.target.value)}\r\n            /> */}\r\n            <SearchBox\r\n              className=\"searchbartask\"\r\n              placeholder=\"Search by name\"\r\n              list={val}\r\n              onChange={this.AccTasksearch}\r\n              filterBy={['tasknm']}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"task1\">\r\n          <TaskList\r\n            TaskResponse={sort}\r\n            handledelete={val => this.props.TaskDelete(val)}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  TaskSubmit: ManageTaskActions.postTaskDetails,\r\n  TaskDelete: ManageTaskActions.deleteTaskDetails,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    taskinitialresponse: state.Managetaskinitialdatareducer,\r\n    departmentinitialresponse: state.Managedepartmentinitialdatareducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTask);\r\n","import React, { Component } from 'react';\r\nimport './CreateDepartment.scss';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport Button from '../../../../Atoms/Button';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\nimport '../../../../../Utils/Aircraft.scss';\r\n\r\nclass CreateDepartment extends Component {\r\n  obj = {\r\n    departmentname: '',\r\n    departmentcode: '',\r\n  };\r\n  checkallfields = () => {\r\n    if (this.obj.departmentname === '') {\r\n      commonAction.openAlert({\r\n        title: 'Department',\r\n        content: 'Department Name Must be Filled',\r\n      });\r\n      return false;\r\n    } else if (this.obj.departmentcode === '') {\r\n      commonAction.openAlert({\r\n        title: 'Department',\r\n        content: 'Department Code Must be Filled',\r\n      });\r\n      return false;\r\n    }\r\n    this.props.CreateDepartment(false);\r\n    this.props.Departmentsubmit(this.obj);\r\n  };\r\n  render() {\r\n    console.log(this.obj, 'CreateDepartment');\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"CreateDepartmentText\">Create Department</div>\r\n          <div className=\"DepartmentDetails\">\r\n            {/* <div className='DepartmentText'>Department ID</div>\r\n              <InputElement className='DepartmentInputelements' placeholder='Enter' disabled  /> */}\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"DepartmentText\">Department Name</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <InputElement\r\n              className=\"DepartmentInputelements\"\r\n              placeholder=\"Enter\"\r\n              onChange={e => {\r\n                this.obj.departmentname = e.target.value;\r\n              }}\r\n            />\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"DepartmentText\">Department Code</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <InputElement\r\n              className=\"DepartmentInputelements\"\r\n              placeholder=\"Enter\"\r\n              onChange={e => {\r\n                this.obj.departmentcode = e.target.value.toUpperCase();\r\n              }}\r\n            />\r\n            <div className=\"buttondesign\">\r\n              <Button\r\n                className=\"save-btn\"\r\n                ButtonHandler={() => {\r\n                  this.checkallfields();\r\n                }}\r\n              >\r\n                Save\r\n              </Button>{' '}\r\n              <Button ButtonHandler={() => this.props.CreateDepartment(false)}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateDepartment;\r\n","import React, { Component } from 'react';\r\nimport './DepartmentList.scss';\r\nimport DeleteIcon from '../../../../Img/delete.png';\r\n\r\nclass DepartmentList extends Component {\r\n  render() {\r\n    const val = this.props.DepartmentResponse;\r\n    return (\r\n      <>\r\n        {val !== 'undefined' ? (\r\n          <div>\r\n            <div className=\"DepartmentlistText\">Department List</div>\r\n            <div className=\"Departmentlist\">\r\n              {val.data.map((value, index) => (\r\n                <div className=\"Departmentlistwrap\" key={index}>\r\n                  <div className=\"Departmentid\">{value.id}</div>\r\n                  <div className=\"Departmentname\">{value.departmentname}</div>\r\n                  <div className=\"Departmentcode\">\r\n                    {value.departmentcode}\r\n                    <div className=\"delete-icon-div\">\r\n                      <img\r\n                        onClick={() =>\r\n                          this.props.handledelete({ id: value.id })\r\n                        }\r\n                        src={DeleteIcon}\r\n                        width=\"20px\"\r\n                        height=\"20px\"\r\n                        alt=\"delete\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DepartmentList;\r\n","import React, { Component } from 'react';\r\nimport CreateDepartment from '../CreateDepartment';\r\nimport DepartmentList from '../DepartmentList';\r\nimport CreateButton from '../../../../Atoms/CreateButton';\r\nimport { connect } from 'react-redux';\r\nimport { ManageDepartmentActions } from '../../../../../Store/ManageDepartment/action';\r\n\r\nclass ManageDepartment extends Component {\r\n  state = {\r\n    isCreateDepartment: false,\r\n  };\r\n\r\n  CreateDepartment = isOpen => {\r\n    this.setState(prevState => {\r\n      return { isCreateDepartment: isOpen };\r\n    });\r\n  };\r\n  Departmentsubmit = obj => {\r\n    console.log(obj, 'prakash1');\r\n    this.props.Departmentsubmit(obj);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isCreateDepartment ? (\r\n          <CreateDepartment\r\n            CreateDepartment={this.CreateDepartment}\r\n            Departmentsubmit={this.Departmentsubmit}\r\n          />\r\n        ) : (\r\n          <CreateButton\r\n            text=\"Create Department\"\r\n            CreateButtonHandler={() => {\r\n              this.CreateDepartment(true);\r\n            }}\r\n          />\r\n        )}\r\n        <DepartmentList\r\n          DepartmentResponse={this.props.departmentinitialresponse}\r\n          handledelete={val => this.props.DepartmentDelete(val)}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  Departmentsubmit: ManageDepartmentActions.postDepDetails,\r\n  DepartmentDelete: ManageDepartmentActions.deleteDepartmentDetails,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    departmentinitialresponse: state.Managedepartmentinitialdatareducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDepartment);\r\n","import React, { Component } from 'react';\r\nimport './CreateTurnType.scss';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport Button from '../../../../Atoms/Button';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\n\r\nclass CreateTurnType extends Component {\r\n  obj = {\r\n    turntype: '',\r\n    turndescription: '',\r\n  };\r\n  checkallfields = () => {\r\n    if (this.obj.turntype === '') {\r\n      commonAction.openAlert({\r\n        title: 'TurnType',\r\n        content: 'Turn Name Must be Filled',\r\n      });\r\n      return false;\r\n    } else if (this.obj.turndescription === '') {\r\n      commonAction.openAlert({\r\n        title: 'TurnType',\r\n        content: 'Turn Description  Must be Filled',\r\n      });\r\n      return false;\r\n    }\r\n    this.props.CreateTurnType(false);\r\n    this.props.TrunTypeSubmit(this.obj);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"CreateTurnNameText\">Create TurnType</div>\r\n          <div className=\"TurnDetails\">\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"TurnName\">Turn Name</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <InputElement\r\n              className=\"TurnTypeInputelements\"\r\n              placeholder=\"Enter\"\r\n              onChange={e => {\r\n                this.obj.turntype = e.target.value;\r\n              }}\r\n            />\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"TurnName\">Description</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <textarea\r\n              type=\"text\"\r\n              placeholder=\"Enter\"\r\n              className=\"TurnTypeInputelements TurnTypeDescription\"\r\n              onChange={e => {\r\n                this.obj.turndescription = e.target.value;\r\n              }}\r\n            ></textarea>\r\n            {/* <div className='TurnTypeInputelements TurnTypeDescription' onClick={this.adddescription}></div> */}\r\n            <div className=\"buttondesign\">\r\n              <Button\r\n                className=\"save-btn\"\r\n                ButtonHandler={() => {\r\n                  this.checkallfields();\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button ButtonHandler={() => this.props.CreateTurnType(false)}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default CreateTurnType;\r\n","import React, { Component } from 'react';\r\nimport './../DepartmentList/DepartmentList.scss';\r\nimport './TurnType.scss';\r\nimport DeleteIcon from './../../../../Img/delete.png';\r\n\r\nclass TurnTypeList extends Component {\r\n  state = {};\r\n  render() {\r\n    const val = this.props.TurnTypeResponse.data;\r\n    return (\r\n      <>\r\n        <div className=\"DepartmentlistText\">Turn Type</div>\r\n        <div className=\"Departmentlist\">\r\n          {val.map((value, index) => (\r\n            <div className=\"Departmentlistwrap\" key={index}>\r\n              <div className=\"Departmentid\">{value.id}</div>\r\n              <div className=\"Departmentname\">\r\n                {value.turntype}\r\n                <div className=\"Departmentdescription\">\r\n                  {value.turndescription}\r\n                </div>\r\n              </div>\r\n              <div className=\"Departmentcode\">\r\n                <div className=\"delete-icon-div\">\r\n                  <img\r\n                    onClick={() => this.props.handledelete({ id: value.id })}\r\n                    src={DeleteIcon}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    alt=\"delete\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnTypeList;\r\n","import React, { Component } from 'react';\r\nimport CreateTurnType from '../CreateTurnType';\r\nimport CreateButton from './../../../../Atoms/CreateButton';\r\nimport TurnTypeList from '../TurnTypeList';\r\nimport { connect } from 'react-redux';\r\nimport { ManageTurnTypeActions } from '../../../../../Store/ManageTurnType/action';\r\n\r\nclass ManageTurnType extends Component {\r\n  state = {\r\n    isCreateTurnType: false,\r\n  };\r\n  CreateTurnType = isOpen => {\r\n    this.setState(prevState => {\r\n      return { isCreateTurnType: isOpen };\r\n    });\r\n  };\r\n  TrunTypeSubmit = obj => {\r\n    console.log('new', obj);\r\n    this.props.TurnTypesubmit(obj);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isCreateTurnType ? (\r\n          <CreateTurnType\r\n            CreateTurnType={this.CreateTurnType}\r\n            TrunTypeSubmit={this.TrunTypeSubmit}\r\n          />\r\n        ) : (\r\n          <CreateButton\r\n            text=\"Create Turn Type\"\r\n            CreateButtonHandler={() => {\r\n              this.CreateTurnType(true);\r\n            }}\r\n          />\r\n        )}\r\n        <TurnTypeList\r\n          TurnTypeResponse={this.props.turntypeinitialresponse}\r\n          handledelete={val => this.props.TurnTypeDelete(val)}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  TurnTypesubmit: ManageTurnTypeActions.postTurnTypeDetails,\r\n  TurnTypeDelete: ManageTurnTypeActions.deleteTurnTypeDetails,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    turntypeinitialresponse: state.Manageturntypeinitialdatareducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTurnType);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport './TurnTemplates.scss';\r\n\r\nclass TurnTemplates extends React.Component {\r\n  state = {};\r\n  date = value => {\r\n    let val = value !== undefined ? value : '';\r\n    var now = new Date(val);\r\n    console.log(now, 'date');\r\n    var dateString = moment(now).format('DD MMM YY ');\r\n    return dateString.toUpperCase();\r\n  };\r\n\r\n  time = value => {\r\n    let val = value !== undefined ? value : '';\r\n    var str = val.slice(0, -1);\r\n    var now = new Date(str);\r\n    var timestring = moment(now).format('HH:mm');\r\n    return timestring;\r\n  };\r\n\r\n  clicked = val => {\r\n    if (this.props.templateclick) {\r\n      console.log('from turn templates', val);\r\n      this.props.templateclick(val);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Flights\">\r\n        {this.props.sort.map((value, index) => (\r\n          <div\r\n            className=\"Flight_Box\"\r\n            key={index}\r\n            onClick={() => {\r\n              this.clicked(value);\r\n            }}\r\n          >\r\n            <div className=\"Flights_Details\">\r\n              <div className=\"Flight_Number\">\r\n                {value.turntemplateid}\r\n                <div className=\"BaseBody\">\r\n                  {value.airlineaircrafttype} - {value.fleettype}{' '}\r\n                </div>\r\n                {/* <div className=\"BaseBody\">{value.turntemplatename} | {value.versionno}</div>  */}\r\n              </div>\r\n              <div className=\"Base_Details\">{value.turntemplatename}</div>\r\n            </div>\r\n            <div className=\"_Date_Time\">\r\n              <div className=\"_Date1\">\r\n                <div className=\"header margin-left\">Created On</div>\r\n                <div className=\"displayflex\">\r\n                  <div>{this.date(value.createddate)}</div>\r\n                  <div className=\"_Time1\">{this.time(value.createddate)}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"_Date1\">\r\n                <div className=\"header\">Last Modified On </div>\r\n                <div className=\"displayflex\">\r\n                  <div>{this.date(value.lastmodifieddate)} </div>\r\n                  <div className=\"_Time1\">\r\n                    {this.time(value.lastmodifieddate)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnTemplates;\r\n","import React, { Component } from 'react';\r\nimport './TurnEqupFleet.scss';\r\n\r\nclass TurnEqupFleet extends Component {\r\n  state = {};\r\n  //  turntype=(turntypeid)=>{\r\n  //    let turn= this.props.turntype && this.props.turntype.data.filter((item,index)=>{\r\n  //          if(turntypeid === item.id){\r\n  //              return true\r\n  //          }\r\n  //          else{\r\n  //              return false\r\n  //          }\r\n  //      })\r\n  //     return (turn[0]&&turn[0].turntype);\r\n  //  }\r\n  render() {\r\n    console.log(this.props.TemplateDetails, this.props.turntype, 'luc');\r\n    return (\r\n      <>\r\n        <div className=\"turnequpfleet\">\r\n          <div className=\"turntype\">\r\n            <div>Turn Type</div>\r\n            <div className=\"turntypedrop\">{this.props.TemplateDetails[0]}</div>\r\n          </div>\r\n          <div className=\"plannedTAT\">\r\n            <div>Planned TAT</div>\r\n            <div className=\"plannedTATvalue\">\r\n              {this.props.TemplateDetails[1]}\r\n            </div>\r\n          </div>\r\n          <div className=\"equptype\">\r\n            <div>Equipment Type</div>\r\n            <div className=\"equptypedrop\">{this.props.TemplateDetails[2]}</div>\r\n          </div>\r\n          <div className=\"fleetype\">\r\n            <div>Fleet Category</div>\r\n            <div className=\"fleettypeinput\">\r\n              {this.props.TemplateDetails[3]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnEqupFleet;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './tab.scss';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label },\n    } = this;\n\n    let className = 'tab-list-item ' + this.props.className;\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './tab.scss';\n\nimport Tab from './tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.children[0] && this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab },\n    } = this;\n    console.log(this.props.children, 'children');\n    return (\n      <div className=\"tabs\">\n        <ul className=\"tab-list\">\n          {children.map(child => {\n            const { label, className } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n                className={className}\n              />\n            );\n          })}\n        </ul>\n        <div>\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component, useState, useEffect } from 'react';\r\nimport './SelectTasks.scss';\r\nimport SearchBox from '../../../../Atoms/SearchBox';\r\nimport Tick from '../../../../Img/tick.svg';\r\nimport Tickonclick from '../../../../Img/tickonclick.svg';\r\nimport Tabs from '../../../../Atoms/tab';\r\nclass SelectTasks extends Component {\r\n  state = {\r\n    searchselectedtask: '',\r\n  };\r\n  searchhandler = (e, list) => {\r\n    console.log(e.target.value, 'searchhandler');\r\n    this.setState({ searchselectedtask: e.target.value, list });\r\n  };\r\n  render() {\r\n    console.log(this.props.departmentresponse, 'departmentresponse');\r\n    console.log(\r\n      this.state.searchselectedtask,\r\n      this.state.list,\r\n      'searchselectedtask'\r\n    );\r\n    return (\r\n      <>\r\n        <div className=\"task\">\r\n          <div className=\"searchcover\">\r\n            <SearchBox\r\n              className=\"searchbox\"\r\n              placeholder=\"Search By Task Name\"\r\n              onChange={this.searchhandler}\r\n              filterBy={['tasknm']}\r\n            />\r\n          </div>\r\n          <div className=\"eng_ground_sec\">\r\n            <Tabs>\r\n              {this.props.departmentresponse.data.map((item, index) => (\r\n                // console.log(item.departmentcode)\r\n                // eslint-disable-next-line react/jsx-key\r\n                <div label={item.departmentcode}>\r\n                  <div style={{ marginBottom: '50px' }}>\r\n                    <Taskdetails\r\n                      selectedtask={this.props.selectedtask.filter(selected => {\r\n                        if (selected.departmentcode === item.departmentcode) {\r\n                          return true;\r\n                        }\r\n                      })}\r\n                      dependencytask={this.props.selectedtask}\r\n                      searchselectedtask={this.state.searchselectedtask}\r\n                      callback={this.props.callback}\r\n                      task={'Maintask'}\r\n                    ></Taskdetails>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Tabs>\r\n          </div>\r\n          {/* <div className='bottomline'></div> */}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default SelectTasks;\r\n\r\nexport const Taskdetails = ({\r\n  selectedtask,\r\n  searchselectedtask,\r\n  callback,\r\n  task,\r\n  showorder,\r\n}) => {\r\n  const [tickhandler, setTickhandler] = useState([]);\r\n  console.log(selectedtask, 'functional');\r\n  let sort = [];\r\n  selectedtask.map(item => {\r\n    if (searchselectedtask === '') {\r\n      sort = selectedtask;\r\n      return;\r\n    }\r\n    if (item.tasknm.toLowerCase().match(searchselectedtask.toLowerCase()))\r\n      sort.push(item);\r\n  });\r\n\r\n  // sort.map((maintask,index)=>{\r\n  //     maintask.tick = \"false\"\r\n  //     maintask.tasks=dependencytask.data;\r\n  //     maintask.tasks.map((subtask,index)=>{\r\n  //          subtask.tick = \"false\";\r\n  //     })\r\n  //     return maintask\r\n\r\n  //  }\r\n  // )\r\n\r\n  console.log(sort, 'push');\r\n  return (\r\n    <>\r\n      {sort.map((item, index) => (\r\n        <>\r\n          <div\r\n            className={\r\n              item.isActive && item.tick\r\n                ? 'tasklist_addtask isactive'\r\n                : 'tasklist_addtask'\r\n            }\r\n            key={index}\r\n            onClick={() => {\r\n              callback(item, task, index);\r\n            }}\r\n          >\r\n            {console.log(item.isActive, 'is')}\r\n            <div className=\"task_no_wing\">\r\n              <div className=\"taskno\">{item.taskid}</div>\r\n              <div className=\"wing\">{item.taskgroup}</div>\r\n            </div>\r\n            <div className=\"task_name_details\">\r\n              <div className=\"task_name\">{item.tasknm}</div>\r\n              <div className=\"task_details\">{item.taskdescription}</div>\r\n            </div>\r\n            <img\r\n              src={item.tick ? (item.isActive ? Tick : Tickonclick) : Tick}\r\n              className=\"tick\"\r\n            ></img>\r\n          </div>\r\n          <div className=\"bottomline_addtask\"></div>\r\n        </>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n{\r\n  /* <img src={item[index].tick ? Tick :Tickonclick } className='tick'   onClick={()=>{onclick(index,task)}}></img>   */\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Dependencytask.scss';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport Toggler, { TogglerUsingParent } from '../../../../Atoms/Toggler';\r\nimport SearchBox from '../../../../Atoms/SearchBox';\r\nimport { Taskdetails } from '../SelectTasks';\r\n\r\nclass Dependencytask extends Component {\r\n  state = {\r\n    searchdependencytask: '',\r\n    list: [],\r\n    selectedOrder: [],\r\n    // tick: false,\r\n  };\r\n  searchhandler = (e, list) => {\r\n    this.setState({ searchdependencytask: e.target.value, list });\r\n  };\r\n  orderDetails = data => {\r\n    let { selectedOrder } = this.state;\r\n    let newData = [];\r\n    if (selectedOrder.length === 0) {\r\n      newData.push(data);\r\n    } else {\r\n      let count = 0;\r\n      selectedOrder.map(order => {\r\n        if (!(order.taskid === data.taskid)) {\r\n          newData.push(order);\r\n        } else {\r\n          count = 1;\r\n        }\r\n      });\r\n      if (count === 0) {\r\n        newData.push(data);\r\n      }\r\n    }\r\n    selectedOrder = [...selectedOrder, data];\r\n    if (\r\n      this.props.selectedDependencytask &&\r\n      typeof this.props.selectedDependencytask == 'function'\r\n    ) {\r\n      this.props.selectedDependencytask([...newData]);\r\n    }\r\n    this.setState({\r\n      selectedOrder: newData,\r\n    });\r\n  };\r\n\r\n  showOrders = () => {\r\n    console.log(this.props.mainTaskCurrent, 'ordertask');\r\n    return (\r\n      this.props.mainTaskCurrent.dependencytaskid !== undefined &&\r\n      this.props.mainTaskCurrent.dependencytaskid.map(val => {\r\n        return <div>{val}</div>;\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    //let tofilter = this.props.dependencytask.data;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"dependencytask\">\r\n          {this.props.mainTask.map(val => {\r\n            if (val.taskid !== this.props.mainTaskCurrent.taskid) {\r\n              return null;\r\n            }\r\n            return (\r\n              <>\r\n                <div style={{ display: 'flex ' }}>\r\n                  <div className=\"taskdurationtext\">Task Duration Time</div>\r\n                  {/* <div className=\"mandatory-star\">&nbsp;*</div> */}\r\n                </div>\r\n                <div className=\"startendtime\">\r\n                  <div className=\"starttime\">\r\n                    {' '}\r\n                    <InputElement\r\n                      placeholder=\"Start\"\r\n                      value={val.taskstart}\r\n                      onChange={e => {\r\n                        // this.timehandler(e.target.value);\r\n                        this.props.durationHandler(\r\n                          this.props.mainTaskCurrent,\r\n                          e.target.value,\r\n                          'start'\r\n                        );\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"endtime\">\r\n                    <InputElement\r\n                      value={val.taskend}\r\n                      placeholder=\"End\"\r\n                      onChange={e => {\r\n                        this.props.durationHandler(\r\n                          this.props.mainTaskCurrent,\r\n                          e.target.value,\r\n                          'end'\r\n                        );\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"dcptext\">DCP Include</div>\r\n                <Toggler\r\n                  value={val.isDCPinclude}\r\n                  onoffstatus={() => {\r\n                    this.props.DCPHandler(this.props.mainTaskCurrent);\r\n                  }}\r\n                />\r\n\r\n                <div className=\"show-order\">{this.showOrders()}</div>\r\n                <div className=\"selectdeptasktext\">Select Dependency task</div>\r\n                <SearchBox\r\n                  placeholder=\"Search By Task Name\"\r\n                  className=\"dependencysearchbar\"\r\n                  //list = {tofilter}\r\n                  onChange={this.searchhandler}\r\n                  filterBy={['tasknm']}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n          <div style={{ marginBottom: '50px' }}>\r\n            <Taskdetails\r\n              task={'Subtask'}\r\n              // dependencytask={this.dependencytask}\r\n              callback={this.props.callback}\r\n              selectedtask={this.props.selectedtask}\r\n              searchselectedtask={this.state.searchdependencytask}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dependencytask;\r\n","import React, { Component } from 'react';\r\nimport SelectTasks from '../SelectTasks';\r\nimport Dependencytask from '../Dependencytask';\r\nimport './ViewTemplate_AddTask.scss';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { ViewTemplate } from '../../../../../Store/TurnManagement/Tep_View_Del_Task/action';\r\nimport alert from '../../../../../Utils/commonActivity/alert/alert';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\n\r\nclass ViewTemplate_AddTask extends Component {\r\n  state = {\r\n    TemplateDetails: '',\r\n    subtaskresponse: false,\r\n    Maintask: [],\r\n    selectedOrderForMainTask: [],\r\n    selectedDependency: [],\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.generateTurn(this.props.dependency.data);\r\n    //console.log(this.props.dependency.data, 'dataaaaaaa');\r\n  }\r\n  generateTurn = Maintask => {\r\n    let SubTask = [...this.props.dependency.data]; //41\r\n\r\n    let filteredMaintask = [];\r\n    let taskId = [];\r\n    this.props.Existingtask &&\r\n      this.props.Existingtask.map(existing => {\r\n        taskId.push(existing.taskid);\r\n      });\r\n    Maintask.map(task => {\r\n      if (!taskId.includes(task.taskid)) {\r\n        filteredMaintask.push({ ...task });\r\n      }\r\n    });\r\n\r\n    let task = filteredMaintask.map((maintask, index) => {\r\n      const temp = { ...maintask };\r\n      console.log(temp, 'crash temp');\r\n      temp.tick = false;\r\n      temp.isActive = false;\r\n      temp.dependencytaskid = [];\r\n      temp.cpminclind = false;\r\n      temp.taskstart = '';\r\n      temp.taskend = '';\r\n      let SubTasktemp = [];\r\n      SubTask.forEach((item, i) => {\r\n        const newItem = { ...item };\r\n        newItem.parent = temp.taskid;\r\n        newItem.tick = false;\r\n        if (newItem.taskid != temp.taskid) {\r\n          SubTasktemp.push(newItem);\r\n        }\r\n      });\r\n      temp.tasks = [...SubTasktemp];\r\n      return temp;\r\n    });\r\n    if (task.length >= 1) {\r\n      console.log(task, 'crash');\r\n      this.setState({ Maintask: task });\r\n    }\r\n  };\r\n\r\n  callback = (item, taskname, index) => {\r\n    console.log(item, taskname, index);\r\n    let temp = [...this.state.Maintask];\r\n    let { selectedOrderForMainTask = [], selectedDependency } = this.state;\r\n    if (taskname === 'Maintask') {\r\n      temp = temp.map(val => {\r\n        val.isActive = false;\r\n        if (val.taskid === item.taskid) {\r\n          item.tick = !item.tick;\r\n\r\n          if (item.tick) {\r\n            item.isActive = true;\r\n            selectedDependency = item.tasks;\r\n            let isAlreadySelected = false;\r\n            selectedOrderForMainTask.forEach(selected => {\r\n              if (selected.taskid == item.taskid) {\r\n                isAlreadySelected = true;\r\n              }\r\n            });\r\n            if (!isAlreadySelected) {\r\n              selectedOrderForMainTask.push(item);\r\n            }\r\n          } else {\r\n            selectedOrderForMainTask = selectedOrderForMainTask.filter(\r\n              selected => selected.taskid != item.taskid\r\n            );\r\n          }\r\n          return item;\r\n        }\r\n\r\n        return val;\r\n      });\r\n      this.setState({\r\n        Maintask: temp,\r\n        selectedDependency,\r\n        selectedOrderForMainTask,\r\n      });\r\n    } else {\r\n      console.log(temp, item, 'tempitem');\r\n      item.tick = !item.tick;\r\n      temp.forEach(main => {\r\n        if (main.taskid === item.parent) {\r\n          if (item.tick) {\r\n            main.dependencytaskid.push(item.taskid);\r\n          } else {\r\n            main.dependencytaskid = main.dependencytaskid.filter(\r\n              val => !(val === item.taskid)\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // selectedOrderForMainTask.dependencytaskid;\r\n\r\n    this.setState({});\r\n\r\n    // this.setState({ Maintask: task });\r\n  };\r\n\r\n  DCPHandler = currentparent => {\r\n    //   alert();\r\n    console.log(currentparent);\r\n    currentparent.cpminclind = !currentparent.cpminclind;\r\n    this.setState({});\r\n  };\r\n\r\n  durationHandler = (currentparent, value, condition) => {\r\n    //   alert();\r\n\r\n    if (condition === 'start') {\r\n      currentparent.taskstart = value;\r\n    } else {\r\n      currentparent.taskend = value;\r\n    }\r\n    this.setState({});\r\n  };\r\n\r\n  savetask = () => {\r\n    let currentdate =\r\n      moment(new Date())\r\n        .toISOString()\r\n        .split('.')[0] + 'Z';\r\n\r\n    let task = this.state.Maintask.filter(val => val.tick === true);\r\n\r\n    task = task.map((item, i) => {\r\n      let copyobject = { ...item };\r\n      if (copyobject.tick === true) {\r\n        if (copyobject.cpminclind === true) {\r\n          copyobject.cpminclind = 'Y';\r\n        } else {\r\n          copyobject.cpminclind = 'N';\r\n        }\r\n        // let taskorder = this.props.templateresponse[0].tasks.length;\r\n        copyobject.dependencytaskid = copyobject.dependencytaskid.map(\r\n          (item, index) => {\r\n            return { taskid: item, taskorder: index + 1 };\r\n          }\r\n        );\r\n        copyobject.lastmodifieddate = currentdate;\r\n\r\n        delete copyobject['tasks'];\r\n        delete copyobject['tick'];\r\n        delete copyobject['isActive'];\r\n        delete copyobject['id'];\r\n      }\r\n      return copyobject;\r\n    });\r\n    let previoustask =\r\n      this.props.templateresponse[0].tasks &&\r\n      this.props.templateresponse[0].tasks.length;\r\n    let copytemplate = {\r\n      ...(this.props.templateresponse[0] && this.props.templateresponse[0]),\r\n    };\r\n    task.map(\r\n      (item, i) =>\r\n        (item.taskorder =\r\n          copytemplate.tasks && copytemplate.tasks.length + i + 1)\r\n    );\r\n\r\n    task.map(item => {\r\n      if (item.dependencytaskid.length >= 1) {\r\n        let striged = item.dependencytaskid.map(string => {\r\n          return JSON.stringify(string).replace(/\"/g, \"'\");\r\n        });\r\n        item.dependencytaskid = striged;\r\n        return item;\r\n      }\r\n      return item;\r\n    });\r\n    console.log(copytemplate, 'inside if ');\r\n    let finalobj;\r\n    // if (copytemplate.tasks !== null) {\r\n    finalobj = {\r\n      ...copytemplate,\r\n      tasks: [...[...copytemplate.tasks], ...[...task]],\r\n    };\r\n    // }\r\n    delete finalobj['turntemplateid'];\r\n    delete finalobj['lastmodifieddate'];\r\n    finalobj.lastmodifieddate = currentdate;\r\n    console.log(finalobj, 'atleast');\r\n\r\n    // let taskslength = finalobj.tasks.length;\r\n\r\n    if (finalobj.tasks.length === previoustask) {\r\n      console.log('inside addtaskif');\r\n      commonAction.openAlert({\r\n        title: 'ALERT',\r\n        content: 'Atleast OneTask Should be Selected',\r\n      });\r\n      this.props.addtaskcall(false);\r\n      return false;\r\n    }\r\n    console.log(task, 'addtask');\r\n    console.log(finalobj, 'taskviewfromfinalobj');\r\n    this.props.AddtasktoExistingTemplate(finalobj);\r\n    this.props.addtaskcall(false);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.templateresponse, 'templateresponse');\r\n    if (this.props.postcallofaddtask === true) {\r\n      this.savetask();\r\n    }\r\n\r\n    let Maintask = this.props.dependency.data || []; //41\r\n    console.log(Maintask, 'maintask');\r\n    let { selectedOrderForMainTask } = this.state;\r\n    let currentparent = [];\r\n    if (selectedOrderForMainTask.length) {\r\n      currentparent =\r\n        selectedOrderForMainTask[selectedOrderForMainTask.length - 1];\r\n      currentparent.isActive = true;\r\n      selectedOrderForMainTask = currentparent.tasks;\r\n    }\r\n    // if (\r\n    //   // this.state.Maintask.length >= 1 &&\r\n    //   this.state.Maintask &&\r\n    //   this.state.Maintask.length !==\r\n    //     Maintask.length - this.props.Existingtask.length\r\n    // ) {\r\n    //   console.log(\r\n    //     this.props.Existingtask.length,\r\n    //     this.state.Maintask.length,\r\n    //     Maintask.length - this.props.Existingtask.length,\r\n    //     'length'\r\n    //   );\r\n    //   this.generateTurn(Maintask);\r\n    // }\r\n\r\n    console.log(this.state.Maintask, 'Maintask');\r\n    console.log(this.state.selectedDependency, 'selectedDependency');\r\n    console.log(\r\n      this.state.selectedOrderForMainTask,\r\n      'selectedOrderForMainTask'\r\n    );\r\n\r\n    ///FOR SHOWING HOLE TASK COUNT //\r\n    let counter = 0;\r\n    this.state.Maintask.map((item, index) => {\r\n      if (item.tick === true) {\r\n        counter = counter + 1;\r\n      }\r\n    });\r\n    console.log(this.props.dependency, 'Maintaskview');\r\n    return (\r\n      <div>\r\n        <div className=\"select_Task\">Selected Tasks - {counter}</div>\r\n        <div style={{ display: 'flex' }}>\r\n          <SelectTasks\r\n            selectedtask={this.state.Maintask}\r\n            callback={this.callback}\r\n            departmentresponse={this.props.departmentresponse}\r\n          />\r\n          <Dependencytask\r\n            selectedtask={selectedOrderForMainTask}\r\n            mainTask={this.state.Maintask}\r\n            mainTaskCurrent={currentparent}\r\n            callback={this.callback}\r\n            DCPHandler={this.DCPHandler}\r\n            durationHandler={this.durationHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  AddtasktoExistingTemplate: ViewTemplate.AddTask,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewTemplate_AddTask);\r\n","import React, { Component } from 'react';\r\nimport './TemplateView.scss';\r\nimport TurnEqupFleet from '../../../../Page/TurnManagement/Presentation/TurnEqupFleet';\r\nimport AddTask from '../../../../Molecules/AddTask';\r\nimport SearchBox from './../../../../Atoms/SearchBox';\r\nimport close from '../../../../Img/close.svg';\r\nimport { connect } from 'react-redux';\r\nimport { ViewTemplate } from '../../../../../Store/TurnManagement/Tep_View_Del_Task/action';\r\nimport ViewTemplate_AddTask from '../ViewTemplate_AddTask';\r\nimport moment from 'moment';\r\n\r\nclass TemplateView extends Component {\r\n  state = {\r\n    temp_task: '',\r\n    addtask: false,\r\n    list: [],\r\n  };\r\n  // obj = {\r\n  //   id: '',\r\n  //   taskid: '',\r\n  // };\r\n  addtaskresponse = () => {\r\n    this.setState({ addtask: true, temp_task: '' });\r\n    this.props.AddtaskConst(true);\r\n  };\r\n  cancelHandler = () => {\r\n    this.setState({ addtask: false });\r\n  };\r\n  searchhandler = (e, list) => {\r\n    this.setState({ temp_task: e.target.value, list });\r\n  };\r\n  TaskDelete = (entiretemplate, taskid) => {\r\n    let currentdate =\r\n      moment(new Date())\r\n        .toISOString()\r\n        .split('.')[0] + 'Z';\r\n    console.log(currentdate, 'Createddate');\r\n    console.log(entiretemplate[0], 'entiretemplate');\r\n    if (entiretemplate[0].tasks.length > 0) {\r\n      const deletedtask = entiretemplate[0].tasks.filter(\r\n        item => item.taskid !== taskid\r\n      );\r\n      delete entiretemplate[0]['tasks'];\r\n      entiretemplate[0].tasks = deletedtask;\r\n      delete entiretemplate[0]['lastmodifieddate'];\r\n      entiretemplate[0].lastmodifieddate = currentdate;\r\n      console.log(entiretemplate, 'entiretemplate');\r\n      this.props.deletedtask(entiretemplate[0], taskid);\r\n    }\r\n  };\r\n\r\n  sort = val => {\r\n    let iteration = val;\r\n    if (this.state.temp_task !== '') {\r\n      iteration = val.filter(item => {\r\n        console.log(item, 'view');\r\n        if (\r\n          item.tasknm.toLowerCase().match(this.state.temp_task.toLowerCase())\r\n        ) {\r\n          return item;\r\n        }\r\n      });\r\n    }\r\n    return iteration;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.dependency, 'inside template view');\r\n    console.log(this.state.list, 'view');\r\n    if (!this.props.isFooterEnabled && this.state.addtask) {\r\n      this.cancelHandler();\r\n    }\r\n    let entiretemplate = [];\r\n    this.props.templateresponse &&\r\n      this.props.templateresponse.data.map(template => {\r\n        if (this.props.templatedetails[0] === template.turntemplateid) {\r\n          entiretemplate.push(template);\r\n        }\r\n      });\r\n\r\n    const val = (this.props.task && this.props.task.tasks) || [];\r\n    const sort = this.sort(val);\r\n\r\n    let vi_temp_equp = [];\r\n    if (this.props.task && typeof this.props.task === 'object') {\r\n      vi_temp_equp.push(\r\n        this.props.task.turntype,\r\n        this.props.task.plannedtat,\r\n        this.props.task.airlineaircrafttype,\r\n        this.props.task.fleettype\r\n      );\r\n    }\r\n\r\n    // console.log(this.obj.id, 'obj of view template');\r\n    console.log(sort, 'taskfromviewaftersort');\r\n    return (\r\n      <>\r\n        <div className=\"TemplateTaskList\">\r\n          <TurnEqupFleet\r\n            TemplateDetails={vi_temp_equp}\r\n            turntype={this.props.turntypeinitialresponse}\r\n          />\r\n          {this.state.addtask ? (\r\n            <ViewTemplate_AddTask\r\n              departmentresponse={this.props.departmentresponse}\r\n              templatedetails={this.props.templatedetails}\r\n              templateresponse={entiretemplate}\r\n              dependency={this.props.dependency}\r\n              cancelHandler={this.cancelHandler}\r\n              Existingtask={this.props.task.tasks}\r\n              postcallofaddtask={this.props.postcallofaddtask}\r\n              addtaskcall={val => this.props.addtaskcall(val)}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <div className=\"TotalTask_addTask\">\r\n                <div className=\"TotalTask\">\r\n                  Total Number of Tasks - {val && val.length}\r\n                </div>\r\n                <div className=\"addTask\">\r\n                  <AddTask AddTaskHandler={this.addtaskresponse}>\r\n                    Add Task\r\n                  </AddTask>\r\n                </div>\r\n              </div>\r\n              <div className=\"searchcontainer\">\r\n                <SearchBox\r\n                  className=\"searchbar\"\r\n                  placeholder=\"Search by name\"\r\n                  list={val}\r\n                  onChange={this.searchhandler}\r\n                  filterBy={['tasknm']}\r\n                />\r\n              </div>\r\n              <div className=\"TaskHeading\">\r\n                <div className=\"Task_wing\">Task ID</div>\r\n                <div className=\"Taskname_Description\">Task Name</div>\r\n                <div className=\"Departmentname\">Dept Code</div>\r\n                <div className=\"Taskstart\">Start Time</div>\r\n                <div className=\"Taskend\">End Time</div>\r\n              </div>\r\n              {sort.map((temptask, i) => (\r\n                <>\r\n                  <div className=\"assignedTaskcontainer\" key={i}>\r\n                    <div className=\"Task_wing\">\r\n                      <div className=\"Taskno\">{temptask.taskid}</div>\r\n                      <div className=\"wing\">{temptask.taskgroup}</div>\r\n                    </div>\r\n                    <div className=\"Taskname_Description\">\r\n                      <div className=\"Taskname\">{temptask.tasknm}</div>\r\n                      <div className=\"TaskDescription\">\r\n                        {temptask.taskdescription}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"Departmentname\">\r\n                      {' '}\r\n                      {temptask.departmentcode}\r\n                    </div>\r\n                    <div className=\"Taskstart\"> {temptask.taskstart} </div>\r\n                    <div className=\"Taskend\"> {temptask.taskend}</div>\r\n                    <img\r\n                      className=\"Taskdelete\"\r\n                      alt=\"\"\r\n                      src={close}\r\n                      onClick={() =>\r\n                        this.TaskDelete(entiretemplate, temptask.taskid)\r\n                      }\r\n                    ></img>\r\n                  </div>\r\n                  <div className=\"line\" />\r\n                </>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport const ViewTemplateHeader = ({ templatedetails, navigateback }) => {\r\n  return (\r\n    <div className=\"TemplateViewHeader\">\r\n      <div className=\"HeaderText\">\r\n        <span style={{ cursor: 'pointer' }} onClick={() => navigateback()}>\r\n          Turn Management\r\n        </span>{' '}\r\n        > {templatedetails[0]} - {templatedetails[1]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = {\r\n  deletedtask: ViewTemplate.DeleteTask,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    turntypeinitialresponse: state.Manageturntypeinitialdatareducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplateView);\r\n","import React, { Component } from 'react';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport './CreateTemplateTemplateDetails.scss';\r\nimport { Dropdown } from '../../../../Atoms/DropdownComponent';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\n\r\nclass CreateTemplateTemplateDetails extends Component {\r\n  state = {\r\n    fleetcategory: null,\r\n  };\r\n  obj = {\r\n    turntemplatename: '',\r\n    stationcd: '',\r\n    turntype: '',\r\n    plannedtat: '',\r\n    airlineaircrafttype: '',\r\n    fleettype: '',\r\n  };\r\n  fleetcategory = (item, Equipfleetcatagory) => {\r\n    console.log(item, 'equip');\r\n    Equipfleetcatagory.map(Equipfleetcatagory => {\r\n      console.log(Equipfleetcatagory, 'fleet');\r\n      if (item.title === Equipfleetcatagory.equipmenttype) {\r\n        this.obj.fleettype = Equipfleetcatagory.fleetcategory;\r\n        this.setState({ fleetcategory: Equipfleetcatagory.fleetcategory });\r\n      }\r\n    });\r\n  };\r\n  numberOnly = e => {\r\n    const re = /^[0-9\\b]+$/;\r\n    if (e.target.value === '' || re.test(e.target.value)) {\r\n      this.obj.plannedtat = e.target.value;\r\n      this.props.CreateTemplatedetails(this.obj);\r\n    } else {\r\n      commonAction.openAlert({\r\n        title: 'Warning',\r\n        content: 'Planned TAT should be number',\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    // let equipmenttype = [];\r\n    // let equipmenttype_wo_duplicate = [];\r\n    // this.props.templatedata.data.map((item, index) =>\r\n    //   equipmenttype.push(item.airlineaircrafttype)\r\n    // );\r\n    // let toremoveduplicate = Array.from(new Set(equipmenttype));\r\n    // toremoveduplicate.map((item, index) => {\r\n    //   equipmenttype_wo_duplicate.push({ title: item, selected: false });\r\n    // });\r\n    // console.log(withoutduplicate,\"toremoveduplicate\")\r\n    //.push({title:item.airlineaircrafttype,selected:false})\r\n    console.log(this.props.Equipfleetcatagory, 'Equipfleetcatagory');\r\n    let equipmenttype = [];\r\n    this.props.Equipfleetcatagory.map(item => {\r\n      equipmenttype.push({ title: item.equipmenttype, selected: false });\r\n    });\r\n    let turntype = [];\r\n    this.props.turntype.data.map(item => {\r\n      turntype.push({ title: item.turntype, selected: false });\r\n    });\r\n\r\n    return (\r\n      <div className=\"headercreatetemplate\">\r\n        <div className=\"Temp-Station\">\r\n          <div className=\"Temp\">\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"color-createtemplate\">Template Name</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <div className=\"margin-top-createtemplate\">\r\n              <InputElement\r\n                placeholder=\"Enter\"\r\n                onChange={e => {\r\n                  this.obj.turntemplatename = e.target.value;\r\n                  this.props.CreateTemplatedetails(this.obj);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"station\">\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"color-createtemplate\">TurnType</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <div className=\"margin-top-createtemplate\">\r\n              <Dropdown\r\n                title=\"Select\"\r\n                list={turntype}\r\n                placeholder=\"Select\"\r\n                toggleItem={item => {\r\n                  this.obj.turntype = item.title;\r\n                  this.props.CreateTemplatedetails(this.obj);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"Turn-planned-equptype-fleetcat\">\r\n          <div className=\"Turn\">\r\n            <div className=\"color-createtemplate\">Station</div>\r\n            <div className=\"margin-top-createtemplate\">\r\n              <Dropdown\r\n                placeholder=\"Select\"\r\n                title=\"Select\"\r\n                list={this.props.stationscode}\r\n                toggleItem={item => {\r\n                  this.obj.stationcd = item.title;\r\n                  this.props.CreateTemplatedetails(this.obj);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"planned\">\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"color-createtemplate\">Planned TAT</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <div className=\"margin-top-createtemplate\">\r\n              <InputElement\r\n                placeholder=\"Enter\"\r\n                onChange={e => {\r\n                  this.numberOnly(e);\r\n                }}\r\n                value={this.obj.plannedtat}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"equptype\">\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"color-createtemplate\">Equipment Type</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <div className=\"margin-top-createtemplate\">\r\n              <Dropdown\r\n                title=\"Select\"\r\n                list={equipmenttype}\r\n                placeholder=\"Select\"\r\n                toggleItem={item => {\r\n                  this.fleetcategory(item, this.props.Equipfleetcatagory);\r\n                  this.obj.airlineaircrafttype = item.title;\r\n                  this.props.CreateTemplatedetails(this.obj);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"fleetcat\">\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"color-createtemplate\">Fleet Category</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <div className=\"margin-top-createtemplate\">\r\n              <InputElement\r\n                placeholder=\"Enter\"\r\n                disabled\r\n                defaultValue={this.state.fleetcategory}\r\n                // onChange={e => {\r\n                //   this.obj.fleettype = this.state.fleet;\r\n                //   this.props.CreateTemplatedetails(this.obj);\r\n                // }}\r\n              />\r\n              {console.log(this.state.fleetcategory, 'state')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTemplateTemplateDetails;\r\n\r\nexport const CreateTurnTemplateHeader = ({ navigateback }) => {\r\n  return (\r\n    <>\r\n      <div className=\"CreateTurnTemplateHeader\">\r\n        <div className=\"CreateTurnTemplateHeaderText\">\r\n          <span style={{ cursor: 'pointer' }} onClick={navigateback}>\r\n            Turn Management\r\n          </span>{' '}\r\n          > Create TurnTemplate{' '}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport './SaveCancelButton.scss';\r\nimport Button from '../Button';\r\n\r\nclass SaveCancelButton extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"savecancelbutton\">\r\n          <div className=\"wrapbuttons\">\r\n            <Button\r\n              ButtonHandler={() => {\r\n                this.props.CancelButtonHandler();\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              className=\"save-btn\"\r\n              ButtonHandler={() => {\r\n                this.props.DoneButtonHandler();\r\n              }}\r\n            >\r\n              Done\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveCancelButton;\r\n","import React, { Component } from 'react';\r\nimport CreateTemplateTemplateDetails from '../CreateTemplateTemplateDetails';\r\nimport SelectTasks from '../SelectTasks';\r\nimport Dependencytask from '../Dependencytask';\r\nimport './CreateTurnTemplate.scss';\r\nimport SaveCancelButton from '../../../../Atoms/SaveCancelButton';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { ManageCreateTurnTemplate } from '../../../../../Store/TurnManagement/CreateTurnTemplate/action';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\n\r\nclass CreateTurnTemplate extends Component {\r\n  state = {\r\n    TemplateDetails: {},\r\n    subtaskresponse: false,\r\n    Maintask: [],\r\n    selectedOrderForMainTask: [],\r\n    selectedDependency: [],\r\n  };\r\n\r\n  generateTurn = Maintask => {\r\n    let SubTask = [...this.props.dependency.data]; //41\r\n\r\n    let task = Maintask.map((maintask, index) => {\r\n      const temp = {\r\n        ...maintask,\r\n      };\r\n      temp.tick = false;\r\n      temp.isActive = false;\r\n      // temp.dependencyOrder = [];\r\n      temp.dependencytaskid = [];\r\n      temp.cpminclind = false;\r\n      temp.taskstart = '';\r\n      temp.taskend = '';\r\n      let SubTasktemp = [];\r\n      SubTask.forEach((item, i) => {\r\n        const newItem = {\r\n          ...item,\r\n        };\r\n\r\n        newItem.parent = temp.taskid;\r\n        newItem.tick = false;\r\n        if (newItem.taskid !== temp.taskid) {\r\n          SubTasktemp.push(newItem);\r\n        }\r\n      });\r\n      temp.tasks = [...SubTasktemp];\r\n      return temp;\r\n    });\r\n    this.setState({\r\n      Maintask: task,\r\n    });\r\n  };\r\n\r\n  callback = (item, taskname, index) => {\r\n    console.log(item, taskname, index);\r\n    let temp = [...this.state.Maintask];\r\n    let { selectedOrderForMainTask = [], selectedDependency } = this.state;\r\n    if (taskname === 'Maintask') {\r\n      temp = temp.map(val => {\r\n        val.isActive = false;\r\n        if (val.taskid === item.taskid) {\r\n          item.tick = !item.tick;\r\n\r\n          if (item.tick) {\r\n            item.isActive = true;\r\n            selectedDependency = item.tasks;\r\n            let isAlreadySelected = false;\r\n            selectedOrderForMainTask.forEach(selected => {\r\n              if (selected.taskid == item.taskid) {\r\n                isAlreadySelected = true;\r\n              }\r\n            });\r\n            if (!isAlreadySelected) {\r\n              selectedOrderForMainTask.push(item);\r\n            }\r\n          } else {\r\n            selectedOrderForMainTask = selectedOrderForMainTask.filter(\r\n              selected => selected.taskid != item.taskid\r\n            );\r\n          }\r\n          return item;\r\n        }\r\n\r\n        return val;\r\n      });\r\n      this.setState({\r\n        Maintask: temp,\r\n        selectedDependency,\r\n        selectedOrderForMainTask,\r\n      });\r\n    } else {\r\n      console.log(temp, item, 'tempitem');\r\n      item.tick = !item.tick;\r\n      temp.forEach(main => {\r\n        if (main.taskid === item.parent) {\r\n          if (item.tick) {\r\n            main.dependencytaskid.push(item.taskid);\r\n            // main.dependencyOrder.push(item.taskid);\r\n          } else {\r\n            main.dependencytaskid = main.dependencytaskid.filter(\r\n              val => !(val === item.taskid)\r\n            );\r\n            // main.dependencyOrder = main.dependencyOrder.filter(\r\n            //   val => !(val === item.taskid)\r\n            // );\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // selectedOrderForMainTask.dependencytaskid;\r\n\r\n    this.setState({});\r\n\r\n    // this.setState({ Maintask: task });\r\n  };\r\n\r\n  CreateTemplatedetails = obj => {\r\n    this.setState({\r\n      TemplateDetails: obj,\r\n    });\r\n  };\r\n\r\n  DCPHandler = currentparent => {\r\n    //   alert();\r\n    console.log(currentparent.cpminclind, 'currentparent');\r\n    currentparent.isDCPinclude = !currentparent.isDCPinclude;\r\n    currentparent.cpminclind = currentparent.isDCPinclude;\r\n    console.log(currentparent.cpminclind, 'currentparentAFTER');\r\n    this.setState({});\r\n  };\r\n\r\n  durationHandler = (currentparent, value, condition) => {\r\n    //   alert();\r\n\r\n    if (condition === 'start') {\r\n      currentparent.taskstart = value;\r\n    } else {\r\n      currentparent.taskend = value;\r\n    }\r\n    this.setState({});\r\n  };\r\n\r\n  ////for making post call\r\n  DoneButtonHandler = () => {\r\n    let currentdate =\r\n      moment(new Date())\r\n        .toISOString()\r\n        .split('.')[0] + 'Z';\r\n    console.log(currentdate, 'Createddate');\r\n\r\n    // copyobject = this.state.TemplateDetails;\r\n\r\n    let task = this.state.Maintask.filter(val => val.tick === true);\r\n    task = task.map((item, i) => {\r\n      let copyobject = {\r\n        ...item,\r\n      };\r\n      if (copyobject.tick === true) {\r\n        copyobject.taskorder = i + 1;\r\n        if (copyobject.cpminclind === true) {\r\n          copyobject.cpminclind = 'Y';\r\n        } else {\r\n          copyobject.cpminclind = 'N';\r\n        }\r\n        copyobject.dependencytaskid = copyobject.dependencytaskid.map(\r\n          (item, index) => {\r\n            return {\r\n              taskid: item,\r\n              taskorder: index + 1,\r\n            };\r\n          }\r\n        );\r\n        copyobject.createddate = currentdate;\r\n        copyobject.lastmodifieddate = currentdate;\r\n        delete copyobject['tasks'];\r\n        delete copyobject['tick'];\r\n        delete copyobject['isActive'];\r\n        delete copyobject['isDCPinclude'];\r\n        delete copyobject['id'];\r\n      }\r\n      console.log(copyobject, 'copyobject');\r\n      return copyobject;\r\n    });\r\n\r\n    let finalobj = this.state.TemplateDetails;\r\n\r\n    this.props.turntype.data.map((item, i) => {\r\n      if (finalobj.turntype === item.turntype) {\r\n        finalobj.turntypeid = item.id;\r\n      }\r\n    });\r\n\r\n    console.log(finalobj, 'finaltask');\r\n    finalobj.createddate = currentdate;\r\n    finalobj.lastmodifieddate = currentdate;\r\n    finalobj.tasks = task;\r\n    finalobj.tasks.map(item => {\r\n      let striged = item.dependencytaskid.map(string => {\r\n        return JSON.stringify(string).replace(/\"/g, \"'\");\r\n      });\r\n      item.dependencytaskid = striged;\r\n      return item;\r\n    });\r\n\r\n    if (finalobj.turntemplatename === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Template',\r\n        content: 'Template Name is Mandatory',\r\n      });\r\n      return false;\r\n    } else if (finalobj.turntype === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Template',\r\n        content: 'TurnType is Mandatory',\r\n      });\r\n      return false;\r\n    } else if (finalobj.plannedtat === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Template',\r\n        content: 'PlannedTaT is Mandatory',\r\n      });\r\n      return false;\r\n    } else if (finalobj.airlineaircrafttype === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Template',\r\n        content: 'Equipment Type is Mandatory',\r\n      });\r\n      return false;\r\n    } else if (finalobj.tasks.length < 1) {\r\n      commonAction.openAlert({\r\n        title: 'Create Template',\r\n        content: 'Atleast One Task Should be Selected',\r\n      });\r\n      return false;\r\n    }\r\n    this.props.CreateTurnTemplate(finalobj);\r\n    this.props.CancelButtonHandler();\r\n    console.log(finalobj, 'finalone');\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.Maintask, 'maintask');\r\n    console.log(this.props.turntype, 'turntypeid');\r\n    let Maintask = this.props.dependency.data || []; //41\r\n    let { selectedOrderForMainTask } = this.state;\r\n    let currentparent = [];\r\n    if (selectedOrderForMainTask.length) {\r\n      currentparent =\r\n        selectedOrderForMainTask[selectedOrderForMainTask.length - 1];\r\n      currentparent.isActive = true;\r\n      selectedOrderForMainTask = currentparent.tasks;\r\n    }\r\n    console.log(currentparent, 'current parent');\r\n    if (this.state.Maintask.length !== Maintask.length) {\r\n      this.generateTurn(Maintask);\r\n    }\r\n\r\n    let station = [];\r\n    this.props.stationscode.map((item, index) => {\r\n      station.push({\r\n        title: item.station,\r\n        selected: false,\r\n      });\r\n    });\r\n\r\n    console.log(this.state.Maintask, 'Maintask');\r\n    console.log(this.state.selectedDependency, 'selectedDependency');\r\n    console.log(\r\n      this.state.selectedOrderForMainTask,\r\n      'selectedOrderForMainTask'\r\n    );\r\n\r\n    ///FOR SHOWING HOLE TASK COUNT //\r\n    let counter = 0;\r\n    this.state.Maintask.map((item, index) => {\r\n      if (item.tick === true) {\r\n        counter = counter + 1;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Create-Turn-Template\">\r\n          <CreateTemplateTemplateDetails\r\n            turntype={this.props.turntype}\r\n            // templatedata={this.props.templatedata}\r\n            stationscode={station}\r\n            CreateTemplatedetails={obj => {\r\n              this.CreateTemplatedetails(obj);\r\n            }}\r\n            Equipfleetcatagory={this.props.Equipfleetcatagory}\r\n          />\r\n          <div className=\"Selecttasktext\"> Selected Tasks - {counter} </div>{' '}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <SelectTasks\r\n              selectedtask={this.state.Maintask}\r\n              callback={this.callback}\r\n              departmentresponse={this.props.departmentresponse}\r\n            />{' '}\r\n            <Dependencytask\r\n              selectedtask={selectedOrderForMainTask}\r\n              mainTask={this.state.Maintask}\r\n              mainTaskCurrent={currentparent}\r\n              callback={this.callback}\r\n              DCPHandler={this.DCPHandler}\r\n              durationHandler={this.durationHandler}\r\n            />{' '}\r\n          </div>{' '}\r\n        </div>\r\n        <SaveCancelButton\r\n          CancelButtonHandler={() => this.props.CancelButtonHandler()}\r\n          DoneButtonHandler={() => {\r\n            this.DoneButtonHandler();\r\n          }}\r\n        />{' '}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  CreateTurnTemplate: ManageCreateTurnTemplate.postNewTemplate,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTurnTemplate);\r\n","import React from 'react';\r\nimport Accordion from './../../../../Atoms/Accordion';\r\nimport './FlightTurnManagement.scss';\r\nimport Header from './../Header';\r\nimport { connect } from 'react-redux';\r\nimport { TemplateListActions } from '../../../../../Store/TemplateList/action';\r\nimport ManageTask from '../ManageTask';\r\nimport ManageDepartment from '../ManageDepartment';\r\nimport ManageTurnType from '../ManageTurnType';\r\nimport TurnTemplates from './../TurnTemplates';\r\nimport { ManageDepartmentActions } from '../../../../../Store/ManageDepartment/action';\r\nimport { ManageTurnTypeActions } from '../../../../../Store/ManageTurnType/action';\r\nimport { ManageTaskActions } from '../../../../../Store/ManageTask/action';\r\nimport TemplateView from '../TemplateView';\r\nimport { ViewTemplateHeader } from './../TemplateView';\r\nimport CreateTurnTemplate from '../CreateTurnTemplate';\r\nimport { CreateTurnTemplateHeader } from '../CreateTemplateTemplateDetails';\r\nimport SaveCancelButton from '../../../../Atoms/SaveCancelButton';\r\nimport { StationActions } from '../../../../../Store/Station/action';\r\nimport { AircraftTypeActions } from '../../../../../Store/AircraftType/action';\r\n\r\nclass FlightTurnManagement extends React.Component {\r\n  state = {\r\n    TemplateSearch: '',\r\n    currentTemplateID: null,\r\n    pageToNavigate: 'turnTemplate',\r\n    Addtaskfooter: false,\r\n    postcallofaddtask: '',\r\n  };\r\n\r\n  childTaskDetails: {\r\n    tasks: [],\r\n  };\r\n  componentDidMount() {\r\n    this.props.templateinitialdata();\r\n    this.props.departmentinitialdata();\r\n    this.props.TurnTypeInitialdata();\r\n    this.props.taskinitialdata();\r\n    this.props.stationinitialdata();\r\n    this.props.initialactypedata();\r\n  }\r\n\r\n  TemplateSearch = e => {\r\n    this.setState({\r\n      TemplateSearch: e,\r\n    });\r\n  };\r\n  handleback = () => {\r\n    this.setState({\r\n      pageToNavigate: 'turnTemplate',\r\n      Addtaskfooter: false,\r\n    });\r\n  };\r\n  sort = val => {\r\n    let iteration = val;\r\n    if (this.state.TemplateSearch !== '') {\r\n      iteration = val.filter(item => {\r\n        console.log(item.turntemplatename, 'search crash');\r\n        if (\r\n          (item &&\r\n            item.turntemplateid\r\n              .toLowerCase()\r\n              .match(this.state.TemplateSearch.toLowerCase())) ||\r\n          (item.turntemplatename !== null &&\r\n            item.turntemplatename\r\n              .toLowerCase()\r\n              .match(this.state.TemplateSearch.toLowerCase()))\r\n        ) {\r\n          return item;\r\n        }\r\n      });\r\n    }\r\n    return iteration;\r\n  };\r\n  Equipfleetcatagory = val => {\r\n    let equipfleet = [];\r\n    val.map(item => {\r\n      equipfleet.push({\r\n        equipmenttype: item.internalaircrafttype,\r\n        fleetcategory: item.fleetcategory,\r\n      });\r\n    });\r\n    return equipfleet;\r\n  };\r\n  addtaskcall = val => {\r\n    this.setState({\r\n      postcallofaddtask: val,\r\n    });\r\n    this.setState({\r\n      Addtaskfooter: false,\r\n    });\r\n  };\r\n  pageToNavigate = (templateidname, sort) => {\r\n    console.log(this.childTaskDetails, 'childTaskDetails');\r\n    if (this.state.pageToNavigate === 'turnTemplate') {\r\n      return (\r\n        <div>\r\n          <Header\r\n            TemplateSearch={this.TemplateSearch}\r\n            Createturntemplate={() => {\r\n              this.setState({\r\n                pageToNavigate: 'CreateTurntemplate',\r\n                TemplateSearch: '',\r\n              });\r\n            }}\r\n          />{' '}\r\n          <div className=\"TurnManagement\">\r\n            <div className=\"Template\">\r\n              <TurnTemplates\r\n                sort={sort}\r\n                templateclick={val => {\r\n                  console.log(val, '-->value click');\r\n                  // this.childTaskDetails = val;\r\n                  this.setState({\r\n                    currentTemplateID: val.id,\r\n                    pageToNavigate: 'ViewTemplate',\r\n                  });\r\n                }}\r\n              />{' '}\r\n            </div>{' '}\r\n            <div className=\"Manage\">\r\n              <span key={'manage'}>\r\n                <Accordion menuList={Menu} />{' '}\r\n              </span>{' '}\r\n            </div>{' '}\r\n          </div>{' '}\r\n        </div>\r\n      );\r\n    } else if (this.state.pageToNavigate === 'ViewTemplate') {\r\n      console.log(this.state.Addtaskfooter, 'state');\r\n      return (\r\n        <div>\r\n          <ViewTemplateHeader\r\n            templatedetails={templateidname}\r\n            navigateback={this.handleback}\r\n          />{' '}\r\n          <div className=\"TurnManagement\">\r\n            <TemplateView\r\n              templatedetails={templateidname}\r\n              templateresponse={this.props.templateresponse}\r\n              task={this.childTaskDetails}\r\n              isFooterEnabled={this.state.Addtaskfooter}\r\n              dependency={this.props.taskinitialresponse}\r\n              AddtaskConst={state =>\r\n                this.setState({\r\n                  Addtaskfooter: true,\r\n                })\r\n              }\r\n              // departmentinitialresponse={this.props.departmentinitialresponse}\r\n              departmentresponse={this.props.departmentinitialresponse}\r\n              postcallofaddtask={this.state.postcallofaddtask}\r\n              addtaskcall={this.addtaskcall}\r\n            />{' '}\r\n            <div className=\"Manage\">\r\n              <span key={'view'}>\r\n                <Accordion menuList={Menu} />{' '}\r\n              </span>{' '}\r\n            </div>{' '}\r\n            {this.state.Addtaskfooter ? (\r\n              <SaveCancelButton\r\n                CancelButtonHandler={() =>\r\n                  this.setState({\r\n                    Addtaskfooter: false,\r\n                  })\r\n                }\r\n                DoneButtonHandler={() => {\r\n                  this.setState({\r\n                    postcallofaddtask: true,\r\n                  });\r\n                  // this.setState({ Addtaskfooter: false })\r\n                }}\r\n              />\r\n            ) : (\r\n              ''\r\n            )}{' '}\r\n          </div>{' '}\r\n        </div>\r\n      );\r\n    } else if (this.state.pageToNavigate === 'CreateTurntemplate') {\r\n      return (\r\n        <div>\r\n          <CreateTurnTemplateHeader navigateback={this.handleback} />{' '}\r\n          <div className=\"TurnManagement\">\r\n            <CreateTurnTemplate\r\n              departmentresponse={this.props.departmentinitialresponse}\r\n              stationscode={this.props.stationinitialresponse}\r\n              dependency={this.props.taskinitialresponse}\r\n              // templatedata={this.props.templateresponse}\r\n              Equipfleetcatagory={this.Equipfleetcatagory(\r\n                this.props.AircraftTypeList\r\n              )}\r\n              turntype={this.props.turntypeinitialresponse}\r\n              CancelButtonHandler={() =>\r\n                this.setState({\r\n                  pageToNavigate: 'turnTemplate',\r\n                })\r\n              }\r\n            />{' '}\r\n            <div className=\"Manage\">\r\n              <span key={'create'}>\r\n                <Accordion menuList={Menu} />{' '}\r\n              </span>{' '}\r\n            </div>{' '}\r\n          </div>{' '}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    console.log(this.props.templateresponse, 'templatetemplate');\r\n    console.log(\r\n      this.props.departmentinitialresponse,\r\n      'departmentinitialresponse'\r\n    );\r\n    console.log(\r\n      this.props.templateresponse,\r\n      this.state.currentTemplateID,\r\n      'templateresponsefli'\r\n    );\r\n\r\n    const val = this.props.templateresponse && this.props.templateresponse.data;\r\n    if (this.state.currentTemplateID && val) {\r\n      console.log(val, this.state.currentTemplateID, '-->currenttemplate');\r\n      val.forEach(template => {\r\n        if (template.id == this.state.currentTemplateID) {\r\n          this.childTaskDetails = template;\r\n        }\r\n      });\r\n    }\r\n    const sort = this.sort(val);\r\n    let templateidname = [];\r\n    if (typeof this.childTaskDetails === 'object' && this.childTaskDetails) {\r\n      templateidname.push(\r\n        this.childTaskDetails.turntemplateid,\r\n        this.childTaskDetails.turntemplatename\r\n      );\r\n    }\r\n\r\n    return <div> {this.pageToNavigate(templateidname, sort)} </div>;\r\n  }\r\n}\r\nexport const Menu = [\r\n  {\r\n    title: 'Manage Department',\r\n    data: ManageDepartment,\r\n  },\r\n  {\r\n    title: 'Manage TurnType',\r\n    data: ManageTurnType,\r\n  },\r\n  {\r\n    title: 'Manage Task',\r\n    data: ManageTask,\r\n  },\r\n];\r\nconst mapDispatchToProps = {\r\n  templateinitialdata: TemplateListActions.getTemplateData,\r\n  departmentinitialdata: ManageDepartmentActions.getDepartmentDetails,\r\n  TurnTypeInitialdata: ManageTurnTypeActions.getTurnTypeDetails,\r\n  taskinitialdata: ManageTaskActions.getTaskDetails,\r\n  stationinitialdata: StationActions.getStationDetails,\r\n  initialactypedata: AircraftTypeActions.getAircraftTypeDetails,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    templateresponse: state.TurnTemplateInitialDatareducer,\r\n    taskinitialresponse: state.Managetaskinitialdatareducer,\r\n    turntypeinitialresponse: state.Manageturntypeinitialdatareducer,\r\n    stationinitialresponse: state.Stationinitialdata,\r\n    departmentinitialresponse: state.Managedepartmentinitialdatareducer,\r\n    AircraftTypeList: state.Aircrafttypeinitialdata,\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FlightTurnManagement);\r\n","import React, { Component } from 'react';\r\n\r\nimport FlightTurnManagement from './Presentation/FlightTurnManagement';\r\n\r\nclass TurnManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    console.log(\r\n      'https://14.142.107.168/Spring/departmentdetails/department?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsicmVzb3VyY2Utc2VydmVyLXJlc3QtYXBpIl0sInVzZXJfbmFtZSI6IjEwMTQzMTEiLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU3NzY4OTQwOSwidXNlcklkIjoiMTAxNDMxMSIsImF1dGhvcml0aWVzIjpbIkVuZ2luZWVyIl0sImp0aSI6IjRiODg2YTM2LWY3NjItNDdjMS1hZTVlLWFjZDJiMGZiYTEwZCIsImNsaWVudF9pZCI6InNwcmluZy1zZWN1cml0eS1vYXV0aDItcmVhZC1jbGllbnQifQ.72iRr82d9C7EKLHasrc1YILzonVwb1YGt8IdrI-n3Qs'\r\n    );\r\n    console.log(\r\n      'https://14.142.107.168/Spring/taskdetails/task?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsicmVzb3VyY2Utc2VydmVyLXJlc3QtYXBpIl0sInVzZXJfbmFtZSI6IjEwMTQzMTEiLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU3NzY4OTQwOSwidXNlcklkIjoiMTAxNDMxMSIsImF1dGhvcml0aWVzIjpbIkVuZ2luZWVyIl0sImp0aSI6IjRiODg2YTM2LWY3NjItNDdjMS1hZTVlLWFjZDJiMGZiYTEwZCIsImNsaWVudF9pZCI6InNwcmluZy1zZWN1cml0eS1vYXV0aDItcmVhZC1jbGllbnQifQ.72iRr82d9C7EKLHasrc1YILzonVwb1YGt8IdrI-n3Qs'\r\n    );\r\n    // localStorage.setItem(\r\n    //   'token',\r\n    //   'token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsicmVzb3VyY2Utc2VydmVyLXJlc3QtYXBpIl0sInVzZXJfbmFtZSI6IlZlZGFtIiwic2NvcGUiOlsicmVhZCJdLCJleHAiOjE1Nzk1MTAzODQsInVzZXJJZCI6MTAxNDMxMSwiYXV0aG9yaXRpZXMiOlsiRW5naW5lZXIiXSwianRpIjoiMjdhODg2MGMtMjliYy00NDU4LWIyZDItNjBhYWVjZTlmYjdhIiwiY2xpZW50X2lkIjoic3ByaW5nLXNlY3VyaXR5LW9hdXRoMi1yZWFkLWNsaWVudCJ9.aHxnW-vAb53vqc6wkLwVImzh8S1wuq3bC6ZV08F0csg'\r\n    // );\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <FlightTurnManagement />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnManagement;\r\n"],"sourceRoot":""}