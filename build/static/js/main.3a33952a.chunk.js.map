{"version":3,"sources":["store/file/file.constant.js","environments/base.js","environments/production.js","auth/auth.js","services/refreshToken.js","utils/utils.js","services/service.js","store/file/file.action.js","polyfill.js","App.js","serviceWorker.js","index.js","store/sagas.js","store/file/file.reducer.js","store/rootReducer.js","store/store.js"],"names":["fileConstant","DOWNLOAD_ANDROID_FAILURE","DOWNLOAD_ANDROID_SUCCESS","DOWNLOAD_ANDROID_REQUEST","ASYNC_DOWNLOAD_ANDROID","DOWNLOAD_IOS_FAILURE","DOWNLOAD_IOS_SUCCESS","DOWNLOAD_IOS_REQUEST","ASYNC_DOWNLOAD_IOS","UPLOAD_ANDROID_FAILURE","UPLOAD_ANDROID_SUCCESS","UPLOAD_ANDROID_REQUEST","ASYNC_UPLOAD_ANDROID","UPLOAD_IOS_FAILURE","UPLOAD_IOS_SUCCESS","UPLOAD_IOS_REQUEST","ASYNC_UPLOAD_IOS","RESET_DOCUMENT","obj","env","basePath","login","files","getAndroid","getIOS","uploadAndroid","uploadIOS","intervals","logout","isProduction","isDevelopment","setAuthorization","user","localStorage","setItem","JSON","stringify","getAuth","parse","getItem","setAccessToken","isAlreadyFetchingAccessToken","subscribers","error","a","errorResponse","response","refresh_token","token","console","log","history","push","Promise","reject","retryOriginalRequest","resolve","addSubscriber","access_token","config","headers","Authorization","axios","scope","query","grant_type","client_id","client_secret","queryString","Object","keys","map","key","join","method","url","environment","data","decodedValue","JwtDecode","credential","userId","user_name","expires_in","Date","getTime","authdata","onAccessTokenFetched","forEach","callback","buildErrFromResponse","message","errors","errorMsg","Array","isArray","msg","val","param","undefined","status","statusText","service","isTokenExpiredError","handleError","resetTokenAndReattemptRequest","redirectTo","document","path","location","get","options","then","patch","payload","header","request","responseType","post","put","delete","create","interceptors","use","this","handleSuccess","downloadAndroid","downloadIOS","documentsSaga","documentActions","type","reset","success","failure","call","output","window","URL","createObjectURL","createElement","href","download","click","takeLatest","CustomEvent","event","params","bubbles","cancelable","detail","evt","createEvent","initCustomEvent","prototype","Event","Download","React","lazy","Upload","App","Suspense","fallback","className","exact","name","render","props","Component","Boolean","hostname","match","ReactDOM","StrictMode","store","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","rootSaga","all","initialState","uploadFileAndroidError","uploadFileAndroidSuccess","uploadFileAndroidLoading","uploadFileIOSError","uploadFileIOSSuccess","uploadFileIOSLoading","downloadAndroidError","downloadAndroidLoading","downloadAndroidSuccess","downloadIOSError","downloadIOSLoading","downloadIOSSuccess","combineReducers","fileReducer","state","action","newState","appReducer","routing","routerReducer","file","documentReducer","rootReducer","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","browserHistory","createBrowserHistory","basename","process","REACT_APP_ROUTER_BASE","syncHistoryWithStore"],"mappings":"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","file":"static/js/main.3a33952a.chunk.js","sourcesContent":["const fileConstant = {\n  DOWNLOAD_ANDROID_FAILURE: \"DOWNLOAD_ANDROID_FAILURE\",\n  DOWNLOAD_ANDROID_SUCCESS: \"DOWNLOAD_ANDROID_SUCCESS\",\n  DOWNLOAD_ANDROID_REQUEST: \"DOWNLOAD_ANDROID_REQUEST\",\n  ASYNC_DOWNLOAD_ANDROID: \"ASYNC_DOWNLOAD_ANDROID\",\n\n  DOWNLOAD_IOS_FAILURE: \"DOWNLOAD_IOS_FAILURE\",\n  DOWNLOAD_IOS_SUCCESS: \"DOWNLOAD_IOS_SUCCESS\",\n  DOWNLOAD_IOS_REQUEST: \"DOWNLOAD_IOS_REQUEST\",\n  ASYNC_DOWNLOAD_IOS: \"ASYNC_DOWNLOAD_IOS\",\n\n  UPLOAD_ANDROID_FAILURE: \"UPLOAD_ANDROID_FAILURE\",\n  UPLOAD_ANDROID_SUCCESS: \"UPLOAD_ANDROID_SUCCESS\",\n  UPLOAD_ANDROID_REQUEST: \"UPLOAD_ANDROID_REQUEST\",\n  ASYNC_UPLOAD_ANDROID: \"ASYNC_UPLOAD_ANDROID\",\n\n  UPLOAD_IOS_FAILURE: \"UPLOAD_IOS_FAILURE\",\n  UPLOAD_IOS_SUCCESS: \"UPLOAD_IOS_SUCCESS\",\n  UPLOAD_IOS_REQUEST: \"UPLOAD_IOS_REQUEST\",\n  ASYNC_UPLOAD_IOS: \"ASYNC_UPLOAD_IOS\",\n\n  RESET_DOCUMENT: \"RESET_DOCUMENT\",\n};\n\nexport default fileConstant;\n","// default environment setup\r\nexport default function(obj) {\r\n  //const { misconnection,performance} = obj;\r\n  return {\r\n    intervals: {\r\n      logout: 3600 // 1 hour in seconds\r\n    },\r\n\r\n    isProduction: true,\r\n    isDevelopment: false,\r\n    ...obj\r\n  };\r\n}\r\n","import environment from \"./base\";\r\n\r\n// production backend url\r\n\r\nexport const obj = {\r\n  basePath: \"internal-app\",\r\n  login: \"http://localhost:9000/login\",\r\n\r\n  files: {\r\n    getAndroid: \"internal/download/android.apk\",\r\n    getIOS: \"internal/download/manifest\",\r\n    uploadAndroid: \"internal/upload/android.apk\",\r\n    uploadIOS: \"internal/upload/android.apk\",\r\n  },\r\n};\r\nconst env = environment(obj);\r\nexport default {\r\n  ...env,\r\n  isProduction: true,\r\n  isDevelopment: false,\r\n};\r\n","export function authHeader() {\r\n  // return authorization header with basic auth credentials\r\n  const user = getAuth();\r\n\r\n  if (user && user.authdata) {\r\n    return { Authorization: user.authdata };\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n\r\nexport function isTokenExpired() {\r\n  var currentTime = new Date();\r\n  const { expires_in } = getAuth();\r\n  if (new Date(expires_in) < currentTime) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function setAuthorization(user) {\r\n  localStorage.setItem(\"TCS-user\", JSON.stringify(user));\r\n}\r\n\r\nexport function getAuth() {\r\n  return JSON.parse(localStorage.getItem(\"TCS-user\") || \"{}\");\r\n}\r\n\r\nexport function setAvatar(avatar) {\r\n  localStorage.setItem(\"TCS-avatar\", avatar);\r\n}\r\n\r\nexport function getAvatar() {\r\n  return localStorage.getItem(\"TCS-avatar\");\r\n}\r\n\r\nexport function removeAuthorization() {\r\n  localStorage.setItem(\"TCS-user\", JSON.stringify({}));\r\n}\r\nexport function setAccessToken(user) {\r\n  localStorage.setItem(\"token\", user);\r\n}\r\n\r\nexport function removeAccessToken() {\r\n  localStorage.removeItem(\"token\");\r\n}\r\n\r\nexport function getToken() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n","import { setAuthorization, getAuth, setAccessToken } from \"../auth/auth\";\nimport axios from \"axios\";\nimport environment from \"..\";\nimport JwtDecode from \"jwt-decode\";\nimport { history } from \"../store/store\";\n\nlet isAlreadyFetchingAccessToken = false;\n\n// This is the list of waiting requests that will retry after the JWT refresh complete\nlet subscribers = [];\n\nexport default async function resetTokenAndReattemptRequest(error) {\n  try {\n    const { response: errorResponse } = error;\n    const { token: refresh_token } = getAuth(); // Your own mechanism to get the refresh token to refresh the JWT token\n    console.log(getAuth(), refresh_token);\n    if (!refresh_token) {\n      // We can't refresh, throw the error anyway\n      history.push(\"/login\");\n      return Promise.reject(error);\n    }\n    /* Proceed to the token refresh procedure\n    We create a new Promise that will retry the request,\n    clone all the request configuration from the failed\n    request in the error object. */\n    const retryOriginalRequest = new Promise((resolve) => {\n      /* We need to add the request retry to the queue\n    since there another request that already attempt to\n    refresh the token */\n      addSubscriber((access_token) => {\n        errorResponse.config.headers.Authorization = \"Bearer \" + access_token;\n        resolve(axios(errorResponse.config));\n      });\n    });\n    if (!isAlreadyFetchingAccessToken) {\n      isAlreadyFetchingAccessToken = true;\n\n      const headers = {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization:\n          \"Basic c3ByaW5nLXNlY3VyaXR5LW9hdXRoMi1yZWFkLWNsaWVudDpzcHJpbmctc2VjdXJpdHktb2F1dGgyLXJlYWQtY2xpZW50LXBhc3N3b3JkMTIzNA==\",\n        scope: \"read\",\n      };\n      const query = {\n        grant_type: \"refresh_token\",\n        refresh_token,\n        client_id: \"spring-security-oauth2-read-client\",\n        client_secret: \"spring-security-oauth2-read-client-password1234\",\n      };\n\n      var queryString = Object.keys(query)\n        .map((key) => key + \"=\" + query[key])\n        .join(\"&\");\n\n      const response = await axios({\n        method: \"post\",\n        url: environment.login,\n        headers: headers,\n        data: queryString,\n      });\n      if (!response.data) {\n        history.push(\"/login\");\n        return Promise.reject(error);\n      }\n      const decodedValue = JwtDecode(response.data.access_token);\n      let credential = {\n        userId: decodedValue.userId,\n        access_token: response.data.access_token,\n        user_name: decodedValue.user_name,\n        expires_in: new Date(new Date().getTime() + response.expires_in * 1000),\n        authdata: headers.Authorization,\n        refresh_token: response.data.refresh_token,\n      };\n      setAuthorization(credential);\n      setAccessToken(\"token=\" + credential.access_token);\n\n      isAlreadyFetchingAccessToken = false;\n      onAccessTokenFetched(credential.access_token);\n    }\n    return retryOriginalRequest;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction onAccessTokenFetched(access_token) {\n  // When the refresh is successful, we start retrying the requests one by one and empty the queue\n  subscribers.forEach((callback) => callback(access_token));\n  subscribers = [];\n}\n\nfunction addSubscriber(callback) {\n  subscribers.push(callback);\n}\n","export const buildErrFromResponse = async (response) => {\n  return new Promise((resolve, reject) => {\n    if (!response) reject({ message: \"Something went wrong\" });\n    if (response.data && response.data.errors) {\n      const errorMsg = response.data.errors;\n      let errors = \"\";\n      if (Array.isArray(errorMsg.msg)) {\n        errorMsg.msg.forEach((val) => {\n          const param = val.param ? val.param + \":\" : \"\";\n          errors += `${param} ${val.msg}, \\n`;\n        });\n      } else {\n        const param = errorMsg.param ? errorMsg.param + \":\" : \"\";\n        errors = param + errorMsg.msg;\n      }\n      reject({ message: errors });\n    }\n    if (response.data) resolve(response.data);\n    if (response === null || response === undefined)\n      reject({ message: \"Something went wrong\" });\n    console.log(response);\n    if (response.status > 399)\n      reject({ message: response.statusText || \"Something went wrong\" });\n    resolve({});\n  });\n};\n","import axios from \"axios\";\r\nimport resetTokenAndReattemptRequest from \"./refreshToken\";\r\nimport { buildErrFromResponse } from \"../utils/utils\";\r\nimport { getAuth } from \"../auth/auth\";\r\nclass Service {\r\n  service;\r\n  constructor() {\r\n    const service = axios.create({\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    service.interceptors.request.use(\r\n      (config) => {\r\n        if (!config.headers.Authorization) {\r\n          const token = getAuth().token;\r\n\r\n          if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n          }\r\n        }\r\n\r\n        return config;\r\n      },\r\n      (error) => Promise.reject(error)\r\n    );\r\n    service.interceptors.response.use(this.handleSuccess, this.handleError);\r\n    this.service = service;\r\n  }\r\n\r\n  handleSuccess(response) {\r\n    console.log(response);\r\n    return response;\r\n  }\r\n  isTokenExpiredError = (errorResponse) => {\r\n    // Your own logic to determine if the error is due to JWT token expired returns a boolean value\r\n    if (errorResponse && errorResponse.status && errorResponse.status === 401) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  handleError = (error) => {\r\n    const errorResponse = error.response;\r\n    if (this.isTokenExpiredError(errorResponse)) {\r\n      return resetTokenAndReattemptRequest(error);\r\n    }\r\n\r\n    return buildErrFromResponse(errorResponse);\r\n  };\r\n\r\n  redirectTo = (document, path) => {\r\n    document.location = path;\r\n  };\r\n\r\n  get = (path, options = { headers: {} }) => {\r\n    return this.service.get(path, options).then((response) => response);\r\n  };\r\n\r\n  patch = (path, payload, header) => {\r\n    return this.service\r\n      .request({\r\n        method: \"PATCH\",\r\n        url: path,\r\n        responseType: \"json\",\r\n        data: payload,\r\n        headers: header,\r\n      })\r\n      .then((response) => {\r\n        return response;\r\n      });\r\n  };\r\n\r\n  post = (path, payload, header) => {\r\n    return this.service\r\n      .request({\r\n        method: \"POST\",\r\n        url: path,\r\n        responseType: \"json\",\r\n        data: payload,\r\n        headers: header,\r\n      })\r\n      .then((response) => {\r\n        return response;\r\n      });\r\n  };\r\n\r\n  put = (path, payload, header) => {\r\n    return this.service\r\n      .request({\r\n        method: \"PUT\",\r\n        url: path,\r\n        responseType: \"json\",\r\n        data: payload,\r\n        headers: header,\r\n      })\r\n      .then((response) => response);\r\n  };\r\n\r\n  delete = (path, payload, header) => {\r\n    return this.service\r\n      .request({\r\n        method: \"DELETE\",\r\n        url: path,\r\n        responseType: \"json\",\r\n        data: payload,\r\n        headers: header,\r\n      })\r\n      .then((response) => response);\r\n  };\r\n}\r\n\r\nconst service = new Service();\r\n\r\nexport default service;\r\n","import { put, takeLatest, call } from \"redux-saga/effects\";\nimport service from \"../../services/service\";\nimport environment from \"../../index\";\nimport fileConstant from \"./file.constant\";\nimport { buildErrFromResponse } from \"../../utils/utils\";\n\nexport const documentActions = {\n  downloadAndroid: () => {\n    return { type: fileConstant.ASYNC_DOWNLOAD_ANDROID };\n  },\n  downloadIOS: () => {\n    return { type: fileConstant.ASYNC_DOWNLOAD_IOS };\n  },\n\n  uploadAndroid: (obj) => {\n    return { type: fileConstant.ASYNC_UPLOAD_ANDROID, obj };\n  },\n  uploadIOS: (obj) => {\n    return { type: fileConstant.ASYNC_UPLOAD_IOS, obj };\n  },\n  reset: () => {\n    return { type: fileConstant.RESET_DOCUMENT };\n  },\n};\n\nfunction* uploadIOS({ obj }) {\n  function request() {\n    return { type: fileConstant.UPLOAD_IOS_REQUEST };\n  }\n  function success(user) {\n    return { type: fileConstant.UPLOAD_IOS_SUCCESS, payload: user };\n  }\n  function failure(error) {\n    return { type: fileConstant.UPLOAD_IOS_FAILURE, error };\n  }\n  yield put(request());\n  try {\n    const headers = {\n      \"Content-Type\": \"multipart/form-data\",\n    };\n\n    const response = yield call(\n      service.post,\n      environment.files.uploadIOS,\n      obj.data,\n      headers\n    );\n\n    const output = yield call(buildErrFromResponse, response);\n    yield put(success({ data: output }));\n  } catch (e) {\n    yield put(failure(e.message));\n  }\n}\n\nfunction* uploadAndroid({ obj }) {\n  function request() {\n    return { type: fileConstant.UPLOAD_ANDROID_REQUEST };\n  }\n  function success(user) {\n    return { type: fileConstant.UPLOAD_ANDROID_SUCCESS, payload: user };\n  }\n  function failure(error) {\n    return { type: fileConstant.UPLOAD_ANDROID_FAILURE, error };\n  }\n  yield put(request());\n  try {\n    const headers = {\n      \"Content-Type\": \"multipart/form-data\",\n    };\n\n    const response = yield call(\n      service.post,\n      environment.files.uploadIOS,\n      obj.data,\n      headers\n    );\n\n    const output = yield call(buildErrFromResponse, response);\n    yield put(success({ data: output }));\n  } catch (e) {\n    yield put(failure(e.message));\n  }\n}\n\nfunction* downloadAndroid() {\n  function request() {\n    return { type: fileConstant.DOWNLOAD_ANDROID_REQUEST };\n  }\n  function success(data) {\n    return { type: fileConstant.DOWNLOAD_ANDROID_SUCCESS, payload: data };\n  }\n  function failure(error) {\n    return { type: fileConstant.DOWNLOAD_ANDROID_FAILURE, error };\n  }\n\n  try {\n    yield put(request());\n    const response = yield call(service.get, environment.files.getAndroid, {\n      responseType: \"blob\",\n    });\n    const output = yield call(buildErrFromResponse, response);\n\n    let url = window.URL.createObjectURL(output);\n    let a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"airasia.apk\";\n    a.click();\n    yield put(success(\"success\"));\n  } catch (err) {\n    yield put(failure(err.message));\n  }\n}\n\nfunction* downloadIOS() {\n  function request() {\n    return { type: fileConstant.DOWNLOAD_IOS_REQUEST };\n  }\n  function success(data) {\n    return { type: fileConstant.DOWNLOAD_IOS_SUCCESS, payload: data };\n  }\n  function failure(error) {\n    return { type: fileConstant.DOWNLOAD_IOS_FAILURE, error };\n  }\n\n  try {\n    yield put(request());\n    const response = yield call(service.get, environment.files.getIOS, {\n      responseType: \"blob\",\n    });\n\n    const output = yield call(buildErrFromResponse, response);\n\n    let url = window.URL.createObjectURL(output);\n    let a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"manifest.plist\";\n    a.click();\n    yield put(success(\"success\"));\n  } catch (err) {\n    yield put(failure(err.message));\n  }\n}\n\nexport function* documentsSaga() {\n  yield takeLatest(fileConstant.ASYNC_DOWNLOAD_ANDROID, downloadAndroid);\n  yield takeLatest(fileConstant.ASYNC_DOWNLOAD_IOS, downloadIOS);\n  yield takeLatest(fileConstant.ASYNC_UPLOAD_IOS, uploadIOS);\n  yield takeLatest(fileConstant.ASYNC_UPLOAD_ANDROID, uploadIOS);\n}\n","/*\n* required polyfills\n*/\nimport \"core-js\";\nimport 'core-js/features/set/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n// import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n// import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n// import 'core-js/es6/set'\n// import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React, { Component } from \"react\";\nimport { Route, Switch, Router } from \"react-router-dom\";\n\n// import { renderRoutes } from 'react-router-config';\nimport \"./App.scss\";\nimport { history } from \"./store/store\";\n\nconst loading = () => (\n  <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>\n);\n\n// Pages\n//const Login = React.lazy(() => import(\"./views/Pages/Login\"));\nconst Download = React.lazy(() => import(\"./views/download/index\"));\nconst Upload = React.lazy(() => import(\"./views/upload/index\"));\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <React.Suspense fallback={loading()}>\n          <Switch>\n            <Route\n              exact\n              path=\"/upload\"\n              name=\"upload\"\n              render={(props) => <Upload {...props} />}\n            />\n            <Route\n              exact\n              path=\"/download\"\n              name=\"Register Page\"\n              render={(props) => <Download {...props} />}\n            />\n            <Route name=\"Page 404\" render={(props) => <h1>Not Found...</h1>} />\n          </Switch>\n        </React.Suspense>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"react-app-polyfill/ie9\"; // For IE 9-11 support\nimport \"react-app-polyfill/stable\";\n// import 'react-app-polyfill/ie11'; // For IE 11 support\nimport \"./polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/store\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport environment from \"environment\";\nexport default environment;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { all } from \"redux-saga/effects\";\nimport { documentsSaga } from \"./file/file.action\";\n\nexport default function* rootSaga() {\n  yield all([documentsSaga()]);\n}\n","import fileConstant from \"./file.constant\";\nimport { combineReducers } from \"redux\";\n\nconst initialState = {\n  uploadFileAndroidError: false,\n  uploadFileAndroidSuccess: false,\n  uploadFileAndroidLoading: false,\n\n  uploadFileIOSError: false,\n  uploadFileIOSSuccess: false,\n  uploadFileIOSLoading: false,\n\n  downloadAndroidError: false,\n  downloadAndroidLoading: false,\n  downloadAndroidSuccess: false,\n\n  downloadIOSError: false,\n  downloadIOSLoading: false,\n  downloadIOSSuccess: false,\n};\n\nexport function fileReducer(state = initialState, action) {\n  const newState = { ...state };\n\n  //upload file document action reducer\n  if (action.type === fileConstant.UPLOAD_ANDROID_SUCCESS) {\n    newState.uploadFileAndroidError = false;\n    newState.uploadFileAndroidLoading = false;\n    newState.uploadFileAndroidSuccess = true;\n  }\n  if (action.type === fileConstant.UPLOAD_IOS_FAILURE) {\n    newState.uploadFileAndroidError = action.error;\n    newState.uploadFileAndroidLoading = false;\n  }\n  if (action.type === fileConstant.UPLOAD_ANDROID_REQUEST) {\n    newState.uploadFileAndroidError = false;\n    newState.uploadFileAndroidLoading = true;\n    newState.uploadFileAndroidSuccess = false;\n  }\n\n  //upload file document action reducer\n  if (action.type === fileConstant.UPLOAD_IOS_SUCCESS) {\n    newState.uploadFileIOSError = false;\n    newState.uploadFileIOSLoading = false;\n    newState.uploadFileIOSSuccess = true;\n  }\n  if (action.type === fileConstant.UPLOAD_IOS_FAILURE) {\n    newState.uploadFileIOSError = action.error;\n    newState.uploadFileIOSLoading = false;\n  }\n  if (action.type === fileConstant.UPLOAD_IOS_REQUEST) {\n    newState.uploadFileIOSError = false;\n    newState.uploadFileIOSLoading = true;\n    newState.uploadFileIOSSuccess = false;\n  }\n\n  //download android action reducer\n  if (action.type === fileConstant.DOWNLOAD_ANDROID_SUCCESS) {\n    newState.downloadAndroidError = false;\n    newState.downloadAndroidLoading = false;\n    newState.downloadAndroidSuccess = true;\n  }\n  if (action.type === fileConstant.DOWNLOAD_ANDROID_FAILURE) {\n    newState.downloadAndroidError = action.error;\n    newState.downloadAndroidLoading = false;\n  }\n  if (action.type === fileConstant.DOWNLOAD_ANDROID_REQUEST) {\n    newState.downloadAndroidError = false;\n    newState.downloadAndroidLoading = true;\n  }\n\n  //download android action reducer\n  if (action.type === fileConstant.DOWNLOAD_IOS_SUCCESS) {\n    newState.downloadIOSError = false;\n    newState.downloadIOSLoading = false;\n    newState.downloadIOSSuccess = true;\n  }\n  if (action.type === fileConstant.DOWNLOAD_IOS_FAILURE) {\n    newState.downloadIOSError = action.error;\n    newState.downloadIOSLoading = false;\n  }\n  if (action.type === fileConstant.DOWNLOAD_IOS_REQUEST) {\n    newState.downloadIOSError = false;\n    newState.downloadIOSLoading = true;\n  }\n\n  if (action.type === fileConstant.RESET_DOCUMENT) {\n    newState.uploadFileAndroidError = false;\n    newState.uploadFileAndroidLoading = false;\n    newState.uploadFileAndroidSuccess = false;\n    newState.downloadIOSError = false;\n    newState.downloadIOSLoading = false;\n    newState.downloadIOSSuccess = false;\n    newState.downloadAndroidError = false;\n    newState.downloadAndroidLoading = false;\n    newState.downloadAndroidSuccess = false;\n\n    newState.uploadFileIOSError = false;\n    newState.uploadFileIOSLoading = false;\n    newState.uploadFileIOSSuccess = false;\n  }\n\n  return newState;\n}\n\nexport default combineReducers({ fileReducer });\n","import { combineReducers } from \"redux\";\nimport { routerReducer } from \"react-router-redux\";\nimport documentReducer from \"./file/file.reducer\";\n\nconst appReducer = combineReducers({\n  routing: routerReducer,\n  file: documentReducer,\n});\n\nconst rootReducer = (state, action) => {\n  // if (action.type === userConstant.LOGOUT) {\n  //   state = undefined;\n  // }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { createBrowserHistory } from \"history\";\nimport { syncHistoryWithStore } from \"react-router-redux\";\nimport rootSaga from \"./sagas\";\nimport rootReducer from \"./rootReducer\";\nimport environment from \"environment\";\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nsagaMiddleware.run(rootSaga);\n\nconst browserHistory = createBrowserHistory({\n  basename: process.env.REACT_APP_ROUTER_BASE || environment.basePath || \"\"\n});\n\nexport const history = syncHistoryWithStore(browserHistory, store);\n\nexport default store;\n"],"sourceRoot":""}