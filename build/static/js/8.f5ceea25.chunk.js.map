{"version":3,"sources":["components/Atoms/Accordion/index.js","components/Atoms/tab-with-border/tab.js","components/Atoms/DropdownComponent/dropdown-multiple.js","components/Atoms/DropdownComponent/index.js","components/Atoms/tab/tab.js","components/Atoms/tab/index.js","components/Molecules/multi-tabs/index.js","components/Page/BusinessEvents1/Domain/flight.js","components/Page/BusinessEvents1/Domain/Pax.js","components/Page/BusinessEvents1/Domain/Crew.js","components/Page/BusinessEvents1/Domain/Engg.js","components/Page/BusinessEvents1/Domain/Scheduling/schedulling.js","components/Page/BusinessEvents1/Domain/Rule/rule.js","components/Page/BusinessEvents1/Domain/mapping.js","components/Page/BusinessEvents1/Signal-list/index.js","components/Page/BusinessEvents1/Criteria/index.js","components/Page/BusinessEvents1/View-Instance/active-instance.js","components/Page/BusinessEvents1/View-Instance/edit-instance.js","components/Page/BusinessEvents1/View-Instance/event-list.js","components/Page/BusinessEvents1/Add-Instance/addInstance.js","components/Page/BusinessEvents1/index.js"],"names":["Accordion","state","callback","value","status","setState","props","onClick","headerComponent","header","className","contentComponent","Content","this","menuList","map","i","key","isSingleOpen","Math","random","sliderStatus","open","isOpen","title","content","data","React","Component","defaultProps","transitionStyle","TabsWithBorder","sizes","els","getSizes","prevProps","children","active","rootBounds","root","getBoundingClientRect","Object","keys","forEach","bounds","left","right","console","log","JSON","stringify","ref","el","Children","child","onChange","style","getUnderlineStyle","length","size","transition","Tab","label","activeTab","Tabs","onClickTabItem","tab","MultiTabs","tabData","Outer","index","val","childtab","innerTitle","_props","AddAttribute","attribute","attr","useState","attributename","setAttributeName","attributevalue","setAttributeValue","InputElement","e","target","placeholder","Button","old","new","commonAction","openAlert","text","Flight","Criteria","isEditPage","CriteriaName","InteractionComponent","InteractionComponentData","eventType","isAddpageOpened","setAddSignalpageOpen","isAddAttributeOpened","setAddAtrributeOpen","isNewSignal","setNewSignal","currentSignal","setAddSignal","AttrList","setAttrList","currentAttr","setcurrentAttr","isAttrEnabled","setAttrEnable","isNewAttribute","setNewAttribute","count","mapData","toLowerCase","Map","set","editSignal","signal","UI","entryData","domain","selected","disableHover","editHandler","stopPropagation","deleteHandler","preventDefault","newCriteria","filter","iaoSignalName","deleteSignal","editAttribute","AttributeList","metadata","newAttribute","deleteAttribute","signalname","setSignalName","condition","nameAlreadyExist","newData","push","Pax","Crew","Engg","Scheduling","isNewScheduling","schedulingCondition","addschedule","changeHandler","event","list","input","test","scheduleKey","snoozesTimeValueMins","snoozesTimeIncrementValueMins","operator","type","width","toggleItem","currentlist","Rule","newRuleMapping","ruleId","ruleConstruct","tempMapping","editRule","parse","deleteRule","ruleMapping","rule","addRule","isNew","MappingSignal","mappingList","generateList","newObj","temp","path","currentListPath","toggleCreation","mapping","criteria","selectedSignal","currentAttribute","contentData","isActive","includes","isopen","customToggler","close","ComponentData","mappingData","eventstore","mappings","properties","UpdateSignal","instanceData","ChooseTemplate","closeEdit","parentData","businessEvent","eventDescription","updateInstance","selectedData","updateState","entryCriteria","exitCriteria","reinitiateCriteria","subscription","templateProps","actionCreator","businesseventConfiguration","updateBusiness_Template","getEvent_Template","getBusiness_Event_Template","connect","updateValue","listComponent","tabList","saveCriteria","page","AddEventInputFields","item","EventListViewDescription","businessEventTemplateId","influencers","businessTargetedDomains","Creteria","Subscribers","subscribe","subscriptionDetails","subscriberGroup","CorrelatdDomain","InfluencedEnterpriseEvents","influencer","DeterminantRules","display","EventListView","currentView","handleEdit","cancelEdit","EventList","currentToggler","selectedInstance","searchBoxValue","createNewEvent","businesseventTemplateData","activeEvent","getInstance","instances","instance","searchHandler","selectInstance","getBusinessEvent","Fragment","SearchBox","filterBy","sampleObjectAddEvent","NoEvent","src","upArrow","actionCreators","businesseventConfigReducer","addInstance","activeInstance","BusinessEvents","ActiveEventInstanceHeader","headerName","buttonName","navigateTo","Icon","GoPlus","AddInstanceHeader","AddInstance","GoListUnordered","currentPage","navigate","innerText"],"mappings":"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","file":"static/js/8.f5ceea25.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../Accordion/Accordion.scss';\r\nimport { FaAngleDown, FaAngleUp } from 'react-icons/fa';\r\nimport Slide from '../slidedown';\r\n\r\nclass Accordion extends React.Component {\r\n  state = {};\r\n\r\n  callback = (value, status) => {\r\n    this.setState({});\r\n    this.props.onClick(value, status);\r\n  };\r\n\r\n  headerComponent = header => {\r\n    return (\r\n      <div className=\"heading\">\r\n        <label className=\"tab-label\">\r\n          {header}\r\n          <span>\r\n            {' '}\r\n            <span className=\"minus\">\r\n              <FaAngleUp />\r\n            </span>\r\n            <span className=\"add\">\r\n              <FaAngleDown />\r\n            </span>\r\n          </span>\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  contentComponent = Content => {\r\n    return <div className=\"tab-content\">{Content}</div>;\r\n  };\r\n\r\n  render() {\r\n    return this.props.menuList.map((value, i) => (\r\n      <div\r\n        className=\"row\"\r\n        key={this.props.isSingleOpen ? Math.random() * i : i}\r\n      >\r\n        <div className=\"tabs\">\r\n          <div className=\"tab\">\r\n            <Slide\r\n              sliderStatus={status => this.callback(value, status)}\r\n              open={value.isOpen ? true : false}\r\n              header={this.headerComponent(value.title)}\r\n              content={this.contentComponent(<value.data />)}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nAccordion.defaultProps = {\r\n  onClick: () => {},\r\n  isSingleOpen: false,\r\n};\r\n\r\nexport default Accordion;\r\n","import React from 'react';\n// import {findDOMNode} from 'react-dom';\n\nimport './tab.scss';\n\nconst transitionTime = 200;\nconst transitionStyle = `left ${transitionTime}ms, right ${transitionTime}ms`;\n\nclass TabsWithBorder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sizes: {},\n    };\n    this.els = {};\n  }\n  componentDidMount() {\n    this.getSizes();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.children !== this.props.children &&\n      prevProps.active !== this.props.active\n    ) {\n      this.getSizes();\n    }\n  }\n\n  getSizes() {\n    const rootBounds = this.root.getBoundingClientRect();\n\n    const sizes = {};\n\n    Object.keys(this.els).forEach(key => {\n      const el = this.els[key];\n      const bounds = el.getBoundingClientRect();\n\n      const left = bounds.left - rootBounds.left;\n      const right = rootBounds.right - bounds.right;\n\n      sizes[key] = { left, right };\n    });\n\n    this.setState({ sizes });\n    return sizes;\n  }\n\n  render() {\n    console.log(JSON.stringify(this.state, null, 2));\n    return (\n      <div className=\"Tabs\" ref={el => (this.root = el)}>\n        {React.Children.map(this.props.children, (child, i) => {\n          let className = `Tabs__Tab `;\n          if (child.key === this.props.active) {\n            className = `${className} Tabs__Tab--active`;\n          }\n          return (\n            <div\n              className={className}\n              onClick={() => {\n                this.props.onChange(child.key);\n              }}\n              ref={el => (this.els[child.key] = el)}\n            >\n              {child}\n            </div>\n          );\n        })}\n        <div className=\"Tabs__Underline\" style={this.getUnderlineStyle()} />\n      </div>\n    );\n  }\n\n  getUnderlineStyle() {\n    if (\n      this.props.active == null ||\n      Object.keys(this.state.sizes).length === 0\n    ) {\n      return { left: '0', right: '100%' };\n    }\n\n    const size = this.state.sizes[this.props.active];\n\n    return {\n      left: `${size.left}px`,\n      right: `${size.right}px`,\n      transition: transitionStyle,\n    };\n  }\n}\n\nexport default TabsWithBorder;\n","import React, { Component } from 'react';\nimport { ReactComponent as ChevronUp } from '../../../assets/Icon/chevronup.svg';\nimport { ReactComponent as ChevronDown } from '../../../assets/Icon/chevrondown.svg';\nimport { TiTick } from 'react-icons/ti';\nimport './DropDown.scss';\n\nclass DropdownMultiple extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title,\n      timeOut: null,\n    };\n    this.close = this.close.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { listOpen } = this.state;\n    setTimeout(() => {\n      if (listOpen) {\n        window.addEventListener('click', this.close);\n      } else {\n        window.removeEventListener('click', this.close);\n      }\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.close);\n  }\n\n  close(timeOut) {\n    this.setState({\n      listOpen: false,\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const count = nextProps.list.filter(function(a) {\n      return a.selected;\n    }).length;\n    if (count === 0) {\n      return { headerTitle: nextProps.title };\n    } else if (count === 1) {\n      return { headerTitle: `${count} ${nextProps.titleHelper}` };\n    } else if (count > 1) {\n      return { headerTitle: `${count} ${nextProps.titleHelper}s` };\n    }\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen,\n    }));\n  }\n\n  render() {\n    const { list, toggleItem } = this.props;\n    const { listOpen, headerTitle } = this.state;\n    return (\n      <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n          <div className=\"dd-header-title\">{headerTitle}</div>\n          <span>{listOpen ? <ChevronUp /> : <ChevronDown />}</span>\n        </div>\n        {listOpen && (\n          <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\n            {list.map(item => (\n              <li\n                className=\"dd-list-item\"\n                key={item.title}\n                onClick={() => toggleItem(item.id, item.key)}\n              >\n                {item.title} {item.selected && <TiTick />}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DropdownMultiple;\n","import Dropdown from './dropdown';\r\nimport DropdownMultiple from './dropdown-multiple';\r\n\r\nexport { Dropdown, DropdownMultiple };\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './tab.scss';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label },\n    } = this;\n\n    let className = 'tab-list-item ' + this.props.className;\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './tab.scss';\n\nimport Tab from './tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.state = {\n      activeTab: this.props.children[0] && this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab },\n    } = this;\n    console.log(this.props.children, 'children');\n    return (\n      <div className=\"tabs\">\n        <ul className=\"tab-list\">\n          {children.map(child => {\n            const { label, className } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n                className={className}\n              />\n            );\n          })}\n        </ul>\n        <div>\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\nimport Tabs from '../../Atoms/tab/index';\nimport TabsWithBorder from '../../Atoms/tab-with-border/tab';\n\nclass MultiTabs extends Component {\n  state = { tab: this.props.tabData };\n  render() {\n    return (\n      <Tabs>\n        {this.state.tab.map((Outer, index) => {\n          return (\n            <div\n              key={index}\n              label={Outer.label}\n              className={this.props.className}\n            >\n              <TabsWithBorder\n                active={Outer.active}\n                className={this.props.className}\n                onChange={active => {\n                  const data = [...this.state.tab];\n                  this.state.tab.forEach((val, index) => {\n                    if (val.label === Outer.label) {\n                      data[index].active = active;\n                    }\n                  });\n                  this.setState({ tab: data });\n                }}\n              >\n                {Outer.childtab.map(innerTitle => {\n                  return <div key={innerTitle}>{innerTitle}</div>;\n                })}\n              </TabsWithBorder>\n\n              {\n                <Outer.Component\n                  key={Math.random()}\n                  tabData={Outer}\n                  _props={this.props}\n                />\n              }\n            </div>\n          );\n        })}\n      </Tabs>\n    );\n  }\n}\nMultiTabs.defaultProps = {\n  className: '',\n  tabData: [],\n};\n\nexport default MultiTabs;\n","import React, { useState } from 'react';\r\nimport Accordion from '../../../Atoms/Accordion';\r\nimport Button from '../../../Atoms/Button';\r\nimport { GoPlus, GoListUnordered } from 'react-icons/go';\r\nimport InputElement from '../../../Atoms/InputElement';\r\nimport HoverContainer from '../../../Atoms/hoverContainer';\r\nimport commonAction from '../../../../Store/commonActivity/action';\r\n\r\nconst Flight = props => {\r\n  const {\r\n    Criteria = [],\r\n    callback = () => {},\r\n    CriteriaName = '',\r\n    isEditPage,\r\n    InteractionComponent = () => null,\r\n    InteractionComponentData = '',\r\n    label = '',\r\n    eventType = '',\r\n  } = props;\r\n  const [isAddpageOpened, setAddSignalpageOpen] = useState(false);\r\n  const [isAddAttributeOpened, setAddAtrributeOpen] = useState(false);\r\n  const [isNewSignal, setNewSignal] = useState(true);\r\n  const [currentSignal, setAddSignal] = useState({});\r\n  const [AttrList, setAttrList] = useState(null);\r\n  const [currentAttr, setcurrentAttr] = useState({});\r\n  const [isAttrEnabled, setAttrEnable] = useState(false);\r\n\r\n  const [isNewAttribute, setNewAttribute] = useState(true);\r\n  let count = 0;\r\n  const currentType = eventType.toLowerCase();\r\n  const mapData = new Map();\r\n  mapData.set('transactional', ['scheduling', 'reinitiate']);\r\n  mapData.set('stateless', ['exitcriteria']);\r\n  mapData.set('temporal', []);\r\n  mapData.set('passthrough', ['exitcriteria']);\r\n  mapData.set('stateful', []);\r\n  let isSelected = false;\r\n\r\n  const editSignal = signal => {\r\n    if (signal === null) {\r\n      setAddSignal({});\r\n      setNewSignal(true);\r\n    } else {\r\n      setNewSignal(false);\r\n      setAddSignal(signal);\r\n    }\r\n\r\n    setAddSignalpageOpen(true);\r\n  };\r\n\r\n  const deleteSignal = signal => {\r\n    const newCriteria = Criteria.filter(val => {\r\n      if (val.iaoSignalName === signal.iaoSignalName) return false;\r\n      return true;\r\n    });\r\n    if (!newCriteria.length) {\r\n      setAttrEnable(false);\r\n    }\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  const selectSignal = signal => {\r\n    Criteria.forEach(val => {\r\n      delete val.selected;\r\n    });\r\n\r\n    if (signal.selected) {\r\n      signal.selected = false;\r\n      setAttrList(null);\r\n    } else {\r\n      signal.selected = true;\r\n      signal.domain = 'Flight';\r\n      setAttrList(signal);\r\n      setAttrEnable(true);\r\n      setAddSignal(signal);\r\n    }\r\n  };\r\n\r\n  const AddSignal = ({ callback, signal }) => {\r\n    if (!signal) {\r\n      signal = { iaoSignalName: '' };\r\n    }\r\n    const [signalname, setSignalName] = useState(signal.iaoSignalName);\r\n\r\n    return (\r\n      <div className=\"add-signal-container\">\r\n        <div>\r\n          <div className=\"signal-name\">Signal name</div>\r\n          <InputElement\r\n            className=\"signal-input\"\r\n            value={signalname}\r\n            onChange={e => setSignalName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"signal-controller\">\r\n          <Button\r\n            className=\"cancel-signal\"\r\n            onClick={() => {\r\n              callback('cancel');\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            className=\"add-signal-button\"\r\n            onClick={() => {\r\n              if (!signalname) {\r\n                commonAction.openAlert({\r\n                  title: 'Warning',\r\n                  text: 'Signal name should not be empty',\r\n                });\r\n                return;\r\n              }\r\n              callback('add', { old: signal.iaoSignalName, new: signalname });\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const UI = Criteria.map((entryData, index) => {\r\n    const domain = (entryData.domain && entryData.domain.toLowerCase()) || '';\r\n\r\n    if (domain === 'flight') {\r\n      count++;\r\n    }\r\n    return (\r\n      domain === 'flight' && (\r\n        <div\r\n          className={`criteria-body ${\r\n            entryData.selected ? 'active-signal' : ''\r\n          }`}\r\n          onClick={() => {\r\n            selectSignal(entryData);\r\n          }}\r\n        >\r\n          {count && (\r\n            <HoverContainer\r\n              disableHover={isEditPage ? false : true}\r\n              editHandler={e => {\r\n                e.stopPropagation();\r\n                editSignal(entryData);\r\n              }}\r\n              deleteHandler={e => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                deleteSignal(entryData);\r\n              }}\r\n            >\r\n              <div className=\"criteria-list\">\r\n                {entryData.iaoSignalName}\r\n                <div className=\"hover-container\"></div>\r\n              </div>\r\n            </HoverContainer>\r\n          )}\r\n        </div>\r\n      )\r\n    );\r\n  });\r\n\r\n  const closeAddSignal = (condition, signal) => {\r\n    if (condition === 'cancel') {\r\n      setAddSignalpageOpen(false);\r\n      return;\r\n    }\r\n    let newCriteria = Criteria;\r\n    if (condition === 'add') {\r\n      if (isNewSignal) {\r\n        let nameAlreadyExist = false;\r\n        Criteria.forEach(val => {\r\n          if (val.iaoSignalName === signal.new) {\r\n            nameAlreadyExist = true;\r\n          }\r\n        });\r\n\r\n        if (nameAlreadyExist) {\r\n          commonAction.openAlert({\r\n            text: 'Warning',\r\n            text: 'Signal Already Exists',\r\n          });\r\n          return;\r\n        }\r\n\r\n        const newData = {\r\n          metadata: {},\r\n          iaoSignalName: signal.new,\r\n          domain: 'Flight',\r\n        };\r\n        newCriteria.push(newData);\r\n      } else {\r\n        newCriteria = Criteria.map(val => {\r\n          if (val.iaoSignalName === signal.old) {\r\n            val.iaoSignalName = signal.new;\r\n          }\r\n          return val;\r\n        });\r\n      }\r\n    }\r\n\r\n    setAddSignalpageOpen(false);\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  // attribute starts\r\n\r\n  const editAttribute = (attr, val) => {\r\n    if (attr === null) attr = '';\r\n    if (val === null) val = '';\r\n    setcurrentAttr({ attr, val });\r\n    setAddAtrributeOpen(true);\r\n  };\r\n\r\n  const deleteAttribute = attr => {\r\n    let newAttribute = currentSignal.metadata || {};\r\n\r\n    newAttribute &&\r\n      Object.keys(newAttribute).map(val => {\r\n        if (val === attr) {\r\n          delete newAttribute[val];\r\n        }\r\n      });\r\n\r\n    let newCriteria = Criteria;\r\n\r\n    newCriteria = Criteria.map(val => {\r\n      if (val.iaoSignalName === currentSignal.iaoSignalName) {\r\n        val.metadata = newAttribute;\r\n      }\r\n      return val;\r\n    });\r\n    setAddSignal({ ...currentSignal, metadata: newAttribute });\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  const AttributeList =\r\n    AttrList &&\r\n    Object.keys(AttrList.metadata).map((attr, index) => {\r\n      return (\r\n        <div className={`criteria-body`}>\r\n          {count && (\r\n            <HoverContainer\r\n              disableHover={isEditPage ? false : true}\r\n              deleteHandler={e => {\r\n                e.stopPropagation();\r\n                deleteAttribute(attr);\r\n              }}\r\n              editHandler={e => {\r\n                e.stopPropagation();\r\n\r\n                setNewAttribute(false);\r\n\r\n                editAttribute(attr, AttrList.metadata[attr]);\r\n              }}\r\n            >\r\n              <div className=\"criteria-list\">{attr}</div>\r\n            </HoverContainer>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n\r\n  const closeAddAttribute = (condition, data) => {\r\n    if (condition === 'cancel') {\r\n      setAddAtrributeOpen(false);\r\n      return;\r\n    }\r\n    let newAttribute = currentSignal.metadata || {};\r\n    if (condition === 'add') {\r\n      newAttribute &&\r\n        Object.keys(newAttribute).map(val => {\r\n          if (val === data.old.attr) {\r\n            newAttribute[data.new.attr] = data.new.value;\r\n            if (!(data.old.attr === data.new.attr)) {\r\n              delete newAttribute[val];\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (isNewAttribute) {\r\n      if (data.new.val) {\r\n        newAttribute[data.new.attr] = data.new.val;\r\n      } else {\r\n        newAttribute[data.new.attr] = '';\r\n      }\r\n    }\r\n\r\n    setAddAtrributeOpen(false);\r\n\r\n    let newCriteria = Criteria;\r\n\r\n    newCriteria = Criteria.map(val => {\r\n      if (val.iaoSignalName === currentSignal.iaoSignalName) {\r\n        val.metadata = newAttribute;\r\n      }\r\n      return val;\r\n    });\r\n    setAddSignal({ ...currentSignal, metadata: newAttribute });\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  return (\r\n    <div className=\"scroll signal-container\">\r\n      <div className=\"signals\">\r\n        <div className=\"criteria-header\">\r\n          {isEditPage && (\r\n            <>\r\n              <div className=\"header\">Signals</div>\r\n              <div className=\"add-signal\">\r\n                <GoPlus className=\"add-button-icon\" />\r\n                <Button\r\n                  className=\"add-signal-button\"\r\n                  onClick={() => {\r\n                    setAddSignal({});\r\n                    editSignal(null);\r\n                  }}\r\n                >\r\n                  Add Signal\r\n                </Button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {isAddpageOpened ? (\r\n          <AddSignal callback={closeAddSignal} signal={currentSignal} />\r\n        ) : (\r\n          <div className=\"criteria-list-container\">{UI}</div>\r\n        )}\r\n      </div>\r\n      {isAttrEnabled && (\r\n        <div className=\"signals attribute-container\">\r\n          <div className=\"criteria-header\">\r\n            {isEditPage && (\r\n              <>\r\n                <div className=\"header\">Attributes</div>\r\n                <div className=\"add-attribute-button-container\">\r\n                  <GoPlus className=\"add-button-icon\" />\r\n                  <Button\r\n                    className=\"add-attribute-button\"\r\n                    onClick={() => {\r\n                      setNewAttribute(true);\r\n                      editAttribute(null, '');\r\n                    }}\r\n                  >\r\n                    Add Attributes\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          {isAddAttributeOpened ? (\r\n            <AddAttribute\r\n              callback={closeAddAttribute}\r\n              attribute={currentAttr}\r\n            />\r\n          ) : (\r\n            <div className=\"criteria-list-container attribute-list-container scroll\">\r\n              {AttributeList}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddAttribute = ({ callback, attribute = { attr: '', val: '' } }) => {\r\n  const [attributename, setAttributeName] = useState(attribute.attr);\r\n  const [attributevalue, setAttributeValue] = useState(attribute.val);\r\n  if (attributevalue === null) {\r\n    setAttributeValue('');\r\n  }\r\n  return (\r\n    <div className=\"add-attribute-container\">\r\n      <div>\r\n        <div className=\"attribute-name\">Attribute Name</div>\r\n        <InputElement\r\n          className=\"attribute-input\"\r\n          value={attributename}\r\n          onChange={e => setAttributeName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div className=\"attribute-name\">Attribute Value</div>\r\n        <InputElement\r\n          className=\"attribute-input\"\r\n          placeholder={'Expression (OR) URL'}\r\n          value={attributevalue}\r\n          onChange={e => setAttributeValue(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"attribute-controller\">\r\n        <Button\r\n          className=\"cancel-attribute\"\r\n          onClick={() => {\r\n            callback('cancel');\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"add-attribute-button\"\r\n          onClick={() => {\r\n            if (!attributename) {\r\n              commonAction.openAlert({\r\n                title: 'Warning',\r\n                text: 'Attribute name should not be empty',\r\n              });\r\n              return;\r\n            }\r\n            callback('add', {\r\n              old: attribute,\r\n              new: { attr: attributename, val: attributevalue },\r\n            });\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flight;\r\n","import React, { useState } from 'react';\r\nimport Accordion from '../../../Atoms/Accordion';\r\nimport Button from '../../../Atoms/Button';\r\nimport { GoPlus, GoListUnordered } from 'react-icons/go';\r\nimport InputElement from '../../../Atoms/InputElement';\r\nimport HoverContainer from '../../../Atoms/hoverContainer';\r\nimport commonAction from '../../../../Store/commonActivity/action';\r\n\r\nconst Pax = props => {\r\n  const {\r\n    Criteria = [],\r\n    callback = () => {},\r\n    CriteriaName = '',\r\n    isEditPage,\r\n    InteractionComponent = () => null,\r\n    InteractionComponentData = '',\r\n    label = '',\r\n    eventType = '',\r\n  } = props;\r\n  const [isAddpageOpened, setAddSignalpageOpen] = useState(false);\r\n  const [isAddAttributeOpened, setAddAtrributeOpen] = useState(false);\r\n  const [isNewSignal, setNewSignal] = useState(true);\r\n  const [currentSignal, setAddSignal] = useState({});\r\n  const [AttrList, setAttrList] = useState(null);\r\n  const [currentAttr, setcurrentAttr] = useState({});\r\n  const [isAttrEnabled, setAttrEnable] = useState(false);\r\n\r\n  const [isNewAttribute, setNewAttribute] = useState(true);\r\n  let count = 0;\r\n  const currentType = eventType.toLowerCase();\r\n  const mapData = new Map();\r\n  mapData.set('transactional', ['scheduling', 'reinitiate']);\r\n  mapData.set('stateless', ['exitcriteria']);\r\n  mapData.set('temporal', []);\r\n  mapData.set('passthrough', ['exitcriteria']);\r\n  mapData.set('stateful', []);\r\n  let isSelected = false;\r\n\r\n  const editSignal = signal => {\r\n    if (signal === null) {\r\n      setAddSignal({});\r\n      setNewSignal(true);\r\n    } else {\r\n      setNewSignal(false);\r\n      setAddSignal(signal);\r\n    }\r\n\r\n    setAddSignalpageOpen(true);\r\n  };\r\n\r\n  const deleteSignal = signal => {\r\n    const newCriteria = Criteria.filter(val => {\r\n      if (val.iaoSignalName === signal.iaoSignalName) return false;\r\n      return true;\r\n    });\r\n    if (!newCriteria.length) {\r\n      setAttrEnable(false);\r\n    }\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  const selectSignal = signal => {\r\n    Criteria.forEach(val => {\r\n      delete val.selected;\r\n    });\r\n\r\n    if (signal.selected) {\r\n      signal.selected = false;\r\n      setAttrList(null);\r\n    } else {\r\n      signal.selected = true;\r\n      signal.domain = 'Pax';\r\n      setAttrList(signal);\r\n      setAttrEnable(true);\r\n      setAddSignal(signal);\r\n    }\r\n  };\r\n\r\n  const AddSignal = ({ callback, signal }) => {\r\n    if (!signal) {\r\n      signal = { iaoSignalName: '' };\r\n    }\r\n    const [signalname, setSignalName] = useState(signal.iaoSignalName);\r\n\r\n    return (\r\n      <div className=\"add-signal-container\">\r\n        <div>\r\n          <div className=\"signal-name\">Signal name</div>\r\n          <InputElement\r\n            className=\"signal-input\"\r\n            value={signalname}\r\n            onChange={e => setSignalName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"signal-controller\">\r\n          <Button\r\n            className=\"cancel-signal\"\r\n            onClick={() => {\r\n              callback('cancel');\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            className=\"add-signal-button\"\r\n            onClick={() => {\r\n              if (!signalname) {\r\n                commonAction.openAlert({\r\n                  title: 'Warning',\r\n                  text: 'Signal name should not be empty',\r\n                });\r\n                return;\r\n              }\r\n              callback('add', { old: signal.iaoSignalName, new: signalname });\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const UI = Criteria.map((entryData, index) => {\r\n    const domain = (entryData.domain && entryData.domain.toLowerCase()) || '';\r\n\r\n    if (domain === 'pax') {\r\n      count++;\r\n    }\r\n    return (\r\n      domain === 'pax' && (\r\n        <div\r\n          className={`criteria-body ${\r\n            entryData.selected ? 'active-signal' : ''\r\n          }`}\r\n          onClick={() => {\r\n            selectSignal(entryData);\r\n          }}\r\n        >\r\n          {count && (\r\n            <HoverContainer\r\n              disableHover={isEditPage ? false : true}\r\n              editHandler={e => {\r\n                e.stopPropagation();\r\n                editSignal(entryData);\r\n              }}\r\n              deleteHandler={e => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                deleteSignal(entryData);\r\n              }}\r\n            >\r\n              <div className=\"criteria-list\">\r\n                {entryData.iaoSignalName}\r\n                <div className=\"hover-container\"></div>\r\n              </div>\r\n            </HoverContainer>\r\n          )}\r\n        </div>\r\n      )\r\n    );\r\n  });\r\n\r\n  const closeAddSignal = (condition, signal) => {\r\n    if (condition === 'cancel') {\r\n      setAddSignalpageOpen(false);\r\n      return;\r\n    }\r\n    let newCriteria = Criteria;\r\n    if (condition === 'add') {\r\n      if (isNewSignal) {\r\n        let nameAlreadyExist = false;\r\n        Criteria.forEach(val => {\r\n          if (val.iaoSignalName === signal.new) {\r\n            nameAlreadyExist = true;\r\n          }\r\n        });\r\n\r\n        if (nameAlreadyExist) {\r\n          commonAction.openAlert({\r\n            text: 'Warning',\r\n            text: 'Signal Already Exists',\r\n          });\r\n          return;\r\n        }\r\n\r\n        const newData = {\r\n          metadata: {},\r\n          iaoSignalName: signal.new,\r\n          domain: 'Pax',\r\n        };\r\n        newCriteria.push(newData);\r\n      } else {\r\n        newCriteria = Criteria.map(val => {\r\n          if (val.iaoSignalName === signal.old) {\r\n            val.iaoSignalName = signal.new;\r\n          }\r\n          return val;\r\n        });\r\n      }\r\n    }\r\n\r\n    setAddSignalpageOpen(false);\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  // attribute starts\r\n\r\n  const editAttribute = (attr, val) => {\r\n    if (attr === null) attr = '';\r\n    if (val === null) val = '';\r\n    setcurrentAttr({ attr, val });\r\n    setAddAtrributeOpen(true);\r\n  };\r\n\r\n  const deleteAttribute = attr => {\r\n    let newAttribute = currentSignal.metadata || {};\r\n\r\n    newAttribute &&\r\n      Object.keys(newAttribute).map(val => {\r\n        if (val === attr) {\r\n          delete newAttribute[val];\r\n        }\r\n      });\r\n\r\n    let newCriteria = Criteria;\r\n\r\n    newCriteria = Criteria.map(val => {\r\n      if (val.iaoSignalName === currentSignal.iaoSignalName) {\r\n        val.metadata = newAttribute;\r\n      }\r\n      return val;\r\n    });\r\n    setAddSignal({ ...currentSignal, metadata: newAttribute });\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  const AttributeList =\r\n    AttrList &&\r\n    Object.keys(AttrList.metadata).map((attr, index) => {\r\n      return (\r\n        <div className={`criteria-body`}>\r\n          {count && (\r\n            <HoverContainer\r\n              disableHover={isEditPage ? false : true}\r\n              deleteHandler={e => {\r\n                e.stopPropagation();\r\n                deleteAttribute(attr);\r\n              }}\r\n              editHandler={e => {\r\n                e.stopPropagation();\r\n\r\n                setNewAttribute(false);\r\n\r\n                editAttribute(attr, AttrList.metadata[attr]);\r\n              }}\r\n            >\r\n              <div className=\"criteria-list\">{attr}</div>\r\n            </HoverContainer>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n\r\n  const closeAddAttribute = (condition, data) => {\r\n    if (condition === 'cancel') {\r\n      setAddAtrributeOpen(false);\r\n      return;\r\n    }\r\n    let newAttribute = currentSignal.metadata || {};\r\n    if (condition === 'add') {\r\n      newAttribute &&\r\n        Object.keys(newAttribute).map(val => {\r\n          if (val === data.old.attr) {\r\n            newAttribute[data.new.attr] = data.new.value;\r\n            if (!(data.old.attr === data.new.attr)) {\r\n              delete newAttribute[val];\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (isNewAttribute) {\r\n      if (data.new.val) {\r\n        newAttribute[data.new.attr] = data.new.val;\r\n      } else {\r\n        newAttribute[data.new.attr] = '';\r\n      }\r\n    }\r\n\r\n    setAddAtrributeOpen(false);\r\n\r\n    let newCriteria = Criteria;\r\n\r\n    newCriteria = Criteria.map(val => {\r\n      if (val.iaoSignalName === currentSignal.iaoSignalName) {\r\n        val.metadata = newAttribute;\r\n      }\r\n      return val;\r\n    });\r\n    setAddSignal({ ...currentSignal, metadata: newAttribute });\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  return (\r\n    <div className=\"scroll signal-container\">\r\n      <div className=\"signals\">\r\n        <div className=\"criteria-header\">\r\n          {isEditPage && (\r\n            <>\r\n              <div className=\"header\">Signals</div>\r\n              <div className=\"add-signal\">\r\n                <GoPlus className=\"add-button-icon\" />\r\n                <Button\r\n                  className=\"add-signal-button\"\r\n                  onClick={() => {\r\n                    setAddSignal({});\r\n                    editSignal(null);\r\n                  }}\r\n                >\r\n                  Add Signal\r\n                </Button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {isAddpageOpened ? (\r\n          <AddSignal callback={closeAddSignal} signal={currentSignal} />\r\n        ) : (\r\n          <div className=\"criteria-list-container\">{UI}</div>\r\n        )}\r\n      </div>\r\n      {isAttrEnabled && (\r\n        <div className=\"signals attribute-container\">\r\n          <div className=\"criteria-header\">\r\n            {isEditPage && (\r\n              <>\r\n                <div className=\"header\">Attributes</div>\r\n                <div className=\"add-attribute-button-container\">\r\n                  <GoPlus className=\"add-button-icon\" />\r\n                  <Button\r\n                    className=\"add-attribute-button\"\r\n                    onClick={() => {\r\n                      setNewAttribute(true);\r\n                      editAttribute(null, '');\r\n                    }}\r\n                  >\r\n                    Add Attributes\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          {isAddAttributeOpened ? (\r\n            <AddAttribute\r\n              callback={closeAddAttribute}\r\n              attribute={currentAttr}\r\n            />\r\n          ) : (\r\n            <div className=\"criteria-list-container attribute-list-container scroll\">\r\n              {AttributeList}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddAttribute = ({ callback, attribute = { attr: '', val: '' } }) => {\r\n  const [attributename, setAttributeName] = useState(attribute.attr);\r\n  const [attributevalue, setAttributeValue] = useState(attribute.val);\r\n  if (attributevalue === null) {\r\n    setAttributeValue('');\r\n  }\r\n  return (\r\n    <div className=\"add-attribute-container\">\r\n      <div>\r\n        <div className=\"attribute-name\">Attribute Name</div>\r\n        <InputElement\r\n          className=\"attribute-input\"\r\n          value={attributename}\r\n          onChange={e => setAttributeName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div className=\"attribute-name\">Attribute Value</div>\r\n        <InputElement\r\n          className=\"attribute-input\"\r\n          placeholder={'Expression (OR) URL'}\r\n          value={attributevalue}\r\n          onChange={e => setAttributeValue(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"attribute-controller\">\r\n        <Button\r\n          className=\"cancel-attribute\"\r\n          onClick={() => {\r\n            callback('cancel');\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"add-attribute-button\"\r\n          onClick={() => {\r\n            if (!attributename) {\r\n              commonAction.openAlert({\r\n                title: 'Warning',\r\n                text: 'Attribute name should not be empty',\r\n              });\r\n              return;\r\n            }\r\n            callback('add', {\r\n              old: attribute,\r\n              new: { attr: attributename, val: attributevalue },\r\n            });\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pax;\r\n","import React, { useState } from 'react';\r\nimport Accordion from '../../../Atoms/Accordion';\r\nimport Button from '../../../Atoms/Button';\r\nimport { GoPlus, GoListUnordered } from 'react-icons/go';\r\nimport InputElement from '../../../Atoms/InputElement';\r\nimport HoverContainer from '../../../Atoms/hoverContainer';\r\nimport commonAction from '../../../../Store/commonActivity/action';\r\n\r\nconst Crew = props => {\r\n  const {\r\n    Criteria = [],\r\n    callback = () => {},\r\n    CriteriaName = '',\r\n    isEditPage,\r\n    InteractionComponent = () => null,\r\n    InteractionComponentData = '',\r\n    label = '',\r\n    eventType = '',\r\n  } = props;\r\n  const [isAddpageOpened, setAddSignalpageOpen] = useState(false);\r\n  const [isAddAttributeOpened, setAddAtrributeOpen] = useState(false);\r\n  const [isNewSignal, setNewSignal] = useState(true);\r\n  const [currentSignal, setAddSignal] = useState({});\r\n  const [AttrList, setAttrList] = useState(null);\r\n  const [currentAttr, setcurrentAttr] = useState({});\r\n  const [isAttrEnabled, setAttrEnable] = useState(false);\r\n\r\n  const [isNewAttribute, setNewAttribute] = useState(true);\r\n  let count = 0;\r\n  const currentType = eventType.toLowerCase();\r\n  const mapData = new Map();\r\n  mapData.set('transactional', ['scheduling', 'reinitiate']);\r\n  mapData.set('stateless', ['exitcriteria']);\r\n  mapData.set('temporal', []);\r\n  mapData.set('passthrough', ['exitcriteria']);\r\n  mapData.set('stateful', []);\r\n  let isSelected = false;\r\n\r\n  const editSignal = signal => {\r\n    if (signal === null) {\r\n      setAddSignal({});\r\n      setNewSignal(true);\r\n    } else {\r\n      setNewSignal(false);\r\n      setAddSignal(signal);\r\n    }\r\n\r\n    setAddSignalpageOpen(true);\r\n  };\r\n\r\n  const deleteSignal = signal => {\r\n    const newCriteria = Criteria.filter(val => {\r\n      if (val.iaoSignalName === signal.iaoSignalName) return false;\r\n      return true;\r\n    });\r\n    if (!newCriteria.length) {\r\n      setAttrEnable(false);\r\n    }\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  const selectSignal = signal => {\r\n    Criteria.forEach(val => {\r\n      delete val.selected;\r\n    });\r\n\r\n    if (signal.selected) {\r\n      signal.selected = false;\r\n      setAttrList(null);\r\n    } else {\r\n      signal.selected = true;\r\n      signal.domain = 'Crew';\r\n      setAttrList(signal);\r\n      setAttrEnable(true);\r\n      setAddSignal(signal);\r\n    }\r\n  };\r\n\r\n  const AddSignal = ({ callback, signal }) => {\r\n    if (!signal) {\r\n      signal = { iaoSignalName: '' };\r\n    }\r\n    const [signalname, setSignalName] = useState(signal.iaoSignalName);\r\n\r\n    return (\r\n      <div className=\"add-signal-container\">\r\n        <div>\r\n          <div className=\"signal-name\">Signal name</div>\r\n          <InputElement\r\n            className=\"signal-input\"\r\n            value={signalname}\r\n            onChange={e => setSignalName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"signal-controller\">\r\n          <Button\r\n            className=\"cancel-signal\"\r\n            onClick={() => {\r\n              callback('cancel');\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            className=\"add-signal-button\"\r\n            onClick={() => {\r\n              if (!signalname) {\r\n                commonAction.openAlert({\r\n                  title: 'Warning',\r\n                  text: 'Signal name should not be empty',\r\n                });\r\n                return;\r\n              }\r\n              callback('add', { old: signal.iaoSignalName, new: signalname });\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const UI = Criteria.map((entryData, index) => {\r\n    const domain = (entryData.domain && entryData.domain.toLowerCase()) || '';\r\n\r\n    if (domain === 'crew') {\r\n      count++;\r\n    }\r\n    return (\r\n      domain === 'crew' && (\r\n        <div\r\n          className={`criteria-body ${\r\n            entryData.selected ? 'active-signal' : ''\r\n          }`}\r\n          onClick={() => {\r\n            selectSignal(entryData);\r\n          }}\r\n        >\r\n          {count && (\r\n            <HoverContainer\r\n              disableHover={isEditPage ? false : true}\r\n              editHandler={e => {\r\n                e.stopPropagation();\r\n                editSignal(entryData);\r\n              }}\r\n              deleteHandler={e => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                deleteSignal(entryData);\r\n              }}\r\n            >\r\n              <div className=\"criteria-list\">\r\n                {entryData.iaoSignalName}\r\n                <div className=\"hover-container\"></div>\r\n              </div>\r\n            </HoverContainer>\r\n          )}\r\n        </div>\r\n      )\r\n    );\r\n  });\r\n\r\n  const closeAddSignal = (condition, signal) => {\r\n    if (condition === 'cancel') {\r\n      setAddSignalpageOpen(false);\r\n      return;\r\n    }\r\n    let newCriteria = Criteria;\r\n    if (condition === 'add') {\r\n      if (isNewSignal) {\r\n        let nameAlreadyExist = false;\r\n        Criteria.forEach(val => {\r\n          if (val.iaoSignalName === signal.new) {\r\n            nameAlreadyExist = true;\r\n          }\r\n        });\r\n\r\n        if (nameAlreadyExist) {\r\n          commonAction.openAlert({\r\n            text: 'Warning',\r\n            text: 'Signal Already Exists',\r\n          });\r\n          return;\r\n        }\r\n\r\n        const newData = {\r\n          metadata: {},\r\n          iaoSignalName: signal.new,\r\n          domain: 'Crew',\r\n        };\r\n        newCriteria.push(newData);\r\n      } else {\r\n        newCriteria = Criteria.map(val => {\r\n          if (val.iaoSignalName === signal.old) {\r\n            val.iaoSignalName = signal.new;\r\n          }\r\n          return val;\r\n        });\r\n      }\r\n    }\r\n\r\n    setAddSignalpageOpen(false);\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  // attribute starts\r\n\r\n  const editAttribute = (attr, val) => {\r\n    if (attr === null) attr = '';\r\n    if (val === null) val = '';\r\n    setcurrentAttr({ attr, val });\r\n    setAddAtrributeOpen(true);\r\n  };\r\n\r\n  const deleteAttribute = attr => {\r\n    let newAttribute = currentSignal.metadata || {};\r\n\r\n    newAttribute &&\r\n      Object.keys(newAttribute).map(val => {\r\n        if (val === attr) {\r\n          delete newAttribute[val];\r\n        }\r\n      });\r\n\r\n    let newCriteria = Criteria;\r\n\r\n    newCriteria = Criteria.map(val => {\r\n      if (val.iaoSignalName === currentSignal.iaoSignalName) {\r\n        val.metadata = newAttribute;\r\n      }\r\n      return val;\r\n    });\r\n    setAddSignal({ ...currentSignal, metadata: newAttribute });\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  const AttributeList =\r\n    AttrList &&\r\n    Object.keys(AttrList.metadata).map((attr, index) => {\r\n      return (\r\n        <div className={`criteria-body`}>\r\n          {count && (\r\n            <HoverContainer\r\n              disableHover={isEditPage ? false : true}\r\n              deleteHandler={e => {\r\n                e.stopPropagation();\r\n                deleteAttribute(attr);\r\n              }}\r\n              editHandler={e => {\r\n                e.stopPropagation();\r\n\r\n                setNewAttribute(false);\r\n\r\n                editAttribute(attr, AttrList.metadata[attr]);\r\n              }}\r\n            >\r\n              <div className=\"criteria-list\">{attr}</div>\r\n            </HoverContainer>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n\r\n  const closeAddAttribute = (condition, data) => {\r\n    if (condition === 'cancel') {\r\n      setAddAtrributeOpen(false);\r\n      return;\r\n    }\r\n    let newAttribute = currentSignal.metadata || {};\r\n    if (condition === 'add') {\r\n      newAttribute &&\r\n        Object.keys(newAttribute).map(val => {\r\n          if (val === data.old.attr) {\r\n            newAttribute[data.new.attr] = data.new.value;\r\n            if (!(data.old.attr === data.new.attr)) {\r\n              delete newAttribute[val];\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (isNewAttribute) {\r\n      if (data.new.val) {\r\n        newAttribute[data.new.attr] = data.new.val;\r\n      } else {\r\n        newAttribute[data.new.attr] = '';\r\n      }\r\n    }\r\n\r\n    setAddAtrributeOpen(false);\r\n\r\n    let newCriteria = Criteria;\r\n\r\n    newCriteria = Criteria.map(val => {\r\n      if (val.iaoSignalName === currentSignal.iaoSignalName) {\r\n        val.metadata = newAttribute;\r\n      }\r\n      return val;\r\n    });\r\n    setAddSignal({ ...currentSignal, metadata: newAttribute });\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  return (\r\n    <div className=\"scroll signal-container\">\r\n      <div className=\"signals\">\r\n        <div className=\"criteria-header\">\r\n          {isEditPage && (\r\n            <>\r\n              <div className=\"header\">Signals</div>\r\n              <div className=\"add-signal\">\r\n                <GoPlus className=\"add-button-icon\" />\r\n                <Button\r\n                  className=\"add-signal-button\"\r\n                  onClick={() => {\r\n                    setAddSignal({});\r\n                    editSignal(null);\r\n                  }}\r\n                >\r\n                  Add Signal\r\n                </Button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {isAddpageOpened ? (\r\n          <AddSignal callback={closeAddSignal} signal={currentSignal} />\r\n        ) : (\r\n          <div className=\"criteria-list-container\">{UI}</div>\r\n        )}\r\n      </div>\r\n      {isAttrEnabled && (\r\n        <div className=\"signals attribute-container\">\r\n          <div className=\"criteria-header\">\r\n            {isEditPage && (\r\n              <>\r\n                <div className=\"header\">Attributes</div>\r\n                <div className=\"add-attribute-button-container\">\r\n                  <GoPlus className=\"add-button-icon\" />\r\n                  <Button\r\n                    className=\"add-attribute-button\"\r\n                    onClick={() => {\r\n                      setNewAttribute(true);\r\n                      editAttribute(null, '');\r\n                    }}\r\n                  >\r\n                    Add Attributes\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          {isAddAttributeOpened ? (\r\n            <AddAttribute\r\n              callback={closeAddAttribute}\r\n              attribute={currentAttr}\r\n            />\r\n          ) : (\r\n            <div className=\"criteria-list-container attribute-list-container scroll\">\r\n              {AttributeList}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddAttribute = ({ callback, attribute = { attr: '', val: '' } }) => {\r\n  const [attributename, setAttributeName] = useState(attribute.attr);\r\n  const [attributevalue, setAttributeValue] = useState(attribute.val);\r\n  if (attributevalue === null) {\r\n    setAttributeValue('');\r\n  }\r\n  return (\r\n    <div className=\"add-attribute-container\">\r\n      <div>\r\n        <div className=\"attribute-name\">Attribute Name</div>\r\n        <InputElement\r\n          className=\"attribute-input\"\r\n          value={attributename}\r\n          onChange={e => setAttributeName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div className=\"attribute-name\">Attribute Value</div>\r\n        <InputElement\r\n          className=\"attribute-input\"\r\n          placeholder={'Expression (OR) URL'}\r\n          value={attributevalue}\r\n          onChange={e => setAttributeValue(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"attribute-controller\">\r\n        <Button\r\n          className=\"cancel-attribute\"\r\n          onClick={() => {\r\n            callback('cancel');\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"add-attribute-button\"\r\n          onClick={() => {\r\n            if (!attributename) {\r\n              commonAction.openAlert({\r\n                title: 'Warning',\r\n                text: 'Attribute name should not be empty',\r\n              });\r\n              return;\r\n            }\r\n            callback('add', {\r\n              old: attribute,\r\n              new: { attr: attributename, val: attributevalue },\r\n            });\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Crew;\r\n","import React, { useState } from 'react';\r\nimport Accordion from '../../../Atoms/Accordion';\r\nimport Button from '../../../Atoms/Button';\r\nimport { GoPlus, GoListUnordered } from 'react-icons/go';\r\nimport InputElement from '../../../Atoms/InputElement';\r\nimport HoverContainer from '../../../Atoms/hoverContainer';\r\nimport commonAction from '../../../../Store/commonActivity/action';\r\n\r\nconst Engg = props => {\r\n  const {\r\n    Criteria = [],\r\n    callback = () => {},\r\n    CriteriaName = '',\r\n    isEditPage,\r\n    InteractionComponent = () => null,\r\n    InteractionComponentData = '',\r\n    label = '',\r\n    eventType = '',\r\n  } = props;\r\n  const [isAddpageOpened, setAddSignalpageOpen] = useState(false);\r\n  const [isAddAttributeOpened, setAddAtrributeOpen] = useState(false);\r\n  const [isNewSignal, setNewSignal] = useState(true);\r\n  const [currentSignal, setAddSignal] = useState({});\r\n  const [AttrList, setAttrList] = useState(null);\r\n  const [currentAttr, setcurrentAttr] = useState({});\r\n  const [isAttrEnabled, setAttrEnable] = useState(false);\r\n\r\n  const [isNewAttribute, setNewAttribute] = useState(true);\r\n  let count = 0;\r\n  const currentType = eventType.toLowerCase();\r\n  const mapData = new Map();\r\n  mapData.set('transactional', ['scheduling', 'reinitiate']);\r\n  mapData.set('stateless', ['exitcriteria']);\r\n  mapData.set('temporal', []);\r\n  mapData.set('passthrough', ['exitcriteria']);\r\n  mapData.set('stateful', []);\r\n  let isSelected = false;\r\n\r\n  const editSignal = signal => {\r\n    if (signal === null) {\r\n      setAddSignal({});\r\n      setNewSignal(true);\r\n    } else {\r\n      setNewSignal(false);\r\n      setAddSignal(signal);\r\n    }\r\n\r\n    setAddSignalpageOpen(true);\r\n  };\r\n\r\n  const deleteSignal = signal => {\r\n    const newCriteria = Criteria.filter(val => {\r\n      if (val.iaoSignalName === signal.iaoSignalName) return false;\r\n      return true;\r\n    });\r\n    if (!newCriteria.length) {\r\n      setAttrEnable(false);\r\n    }\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  const selectSignal = signal => {\r\n    Criteria.forEach(val => {\r\n      delete val.selected;\r\n    });\r\n\r\n    if (signal.selected) {\r\n      signal.selected = false;\r\n      setAttrList(null);\r\n    } else {\r\n      signal.selected = true;\r\n      signal.domain = 'Engg';\r\n      setAttrList(signal);\r\n      setAttrEnable(true);\r\n      setAddSignal(signal);\r\n    }\r\n  };\r\n\r\n  const AddSignal = ({ callback, signal }) => {\r\n    if (!signal) {\r\n      signal = { iaoSignalName: '' };\r\n    }\r\n    const [signalname, setSignalName] = useState(signal.iaoSignalName);\r\n\r\n    return (\r\n      <div className=\"add-signal-container\">\r\n        <div>\r\n          <div className=\"signal-name\">Signal name</div>\r\n          <InputElement\r\n            className=\"signal-input\"\r\n            value={signalname}\r\n            onChange={e => setSignalName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"signal-controller\">\r\n          <Button\r\n            className=\"cancel-signal\"\r\n            onClick={() => {\r\n              callback('cancel');\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            className=\"add-signal-button\"\r\n            onClick={() => {\r\n              if (!signalname) {\r\n                commonAction.openAlert({\r\n                  title: 'Warning',\r\n                  text: 'Signal name should not be empty',\r\n                });\r\n                return;\r\n              }\r\n              callback('add', { old: signal.iaoSignalName, new: signalname });\r\n            }}\r\n          >\r\n            Add\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const UI = Criteria.map((entryData, index) => {\r\n    const domain = (entryData.domain && entryData.domain.toLowerCase()) || '';\r\n\r\n    if (domain === 'engg') {\r\n      count++;\r\n    }\r\n    return (\r\n      domain === 'engg' && (\r\n        <div\r\n          className={`criteria-body ${\r\n            entryData.selected ? 'active-signal' : ''\r\n          }`}\r\n          onClick={() => {\r\n            selectSignal(entryData);\r\n          }}\r\n        >\r\n          {count && (\r\n            <HoverContainer\r\n              disableHover={isEditPage ? false : true}\r\n              editHandler={e => {\r\n                e.stopPropagation();\r\n                editSignal(entryData);\r\n              }}\r\n              deleteHandler={e => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                deleteSignal(entryData);\r\n              }}\r\n            >\r\n              <div className=\"criteria-list\">\r\n                {entryData.iaoSignalName}\r\n                <div className=\"hover-container\"></div>\r\n              </div>\r\n            </HoverContainer>\r\n          )}\r\n        </div>\r\n      )\r\n    );\r\n  });\r\n\r\n  const closeAddSignal = (condition, signal) => {\r\n    if (condition === 'cancel') {\r\n      setAddSignalpageOpen(false);\r\n      return;\r\n    }\r\n    let newCriteria = Criteria;\r\n    if (condition === 'add') {\r\n      if (isNewSignal) {\r\n        let nameAlreadyExist = false;\r\n        Criteria.forEach(val => {\r\n          if (val.iaoSignalName === signal.new) {\r\n            nameAlreadyExist = true;\r\n          }\r\n        });\r\n\r\n        if (nameAlreadyExist) {\r\n          commonAction.openAlert({\r\n            text: 'Warning',\r\n            text: 'Signal Already Exists',\r\n          });\r\n          return;\r\n        }\r\n\r\n        const newData = {\r\n          metadata: {},\r\n          iaoSignalName: signal.new,\r\n          domain: 'Engg',\r\n        };\r\n        newCriteria.push(newData);\r\n      } else {\r\n        newCriteria = Criteria.map(val => {\r\n          if (val.iaoSignalName === signal.old) {\r\n            val.iaoSignalName = signal.new;\r\n          }\r\n          return val;\r\n        });\r\n      }\r\n    }\r\n\r\n    setAddSignalpageOpen(false);\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  // attribute starts\r\n\r\n  const editAttribute = (attr, val) => {\r\n    if (attr === null) attr = '';\r\n    if (val === null) val = '';\r\n    setcurrentAttr({ attr, val });\r\n    setAddAtrributeOpen(true);\r\n  };\r\n\r\n  const deleteAttribute = attr => {\r\n    let newAttribute = currentSignal.metadata || {};\r\n\r\n    newAttribute &&\r\n      Object.keys(newAttribute).map(val => {\r\n        if (val === attr) {\r\n          delete newAttribute[val];\r\n        }\r\n      });\r\n\r\n    let newCriteria = Criteria;\r\n\r\n    newCriteria = Criteria.map(val => {\r\n      if (val.iaoSignalName === currentSignal.iaoSignalName) {\r\n        val.metadata = newAttribute;\r\n      }\r\n      return val;\r\n    });\r\n    setAddSignal({ ...currentSignal, metadata: newAttribute });\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  const AttributeList =\r\n    AttrList &&\r\n    Object.keys(AttrList.metadata).map((attr, index) => {\r\n      return (\r\n        <div className={`criteria-body`}>\r\n          {count && (\r\n            <HoverContainer\r\n              disableHover={isEditPage ? false : true}\r\n              deleteHandler={e => {\r\n                e.stopPropagation();\r\n                deleteAttribute(attr);\r\n              }}\r\n              editHandler={e => {\r\n                e.stopPropagation();\r\n\r\n                setNewAttribute(false);\r\n\r\n                editAttribute(attr, AttrList.metadata[attr]);\r\n              }}\r\n            >\r\n              <div className=\"criteria-list\">{attr}</div>\r\n            </HoverContainer>\r\n          )}\r\n        </div>\r\n      );\r\n    });\r\n\r\n  const closeAddAttribute = (condition, data) => {\r\n    if (condition === 'cancel') {\r\n      setAddAtrributeOpen(false);\r\n      return;\r\n    }\r\n    let newAttribute = currentSignal.metadata || {};\r\n    if (condition === 'add') {\r\n      newAttribute &&\r\n        Object.keys(newAttribute).map(val => {\r\n          if (val === data.old.attr) {\r\n            newAttribute[data.new.attr] = data.new.value;\r\n            if (!(data.old.attr === data.new.attr)) {\r\n              delete newAttribute[val];\r\n            }\r\n          }\r\n        });\r\n    }\r\n\r\n    if (isNewAttribute) {\r\n      if (data.new.val) {\r\n        newAttribute[data.new.attr] = data.new.val;\r\n      } else {\r\n        newAttribute[data.new.attr] = '';\r\n      }\r\n    }\r\n\r\n    setAddAtrributeOpen(false);\r\n\r\n    let newCriteria = Criteria;\r\n\r\n    newCriteria = Criteria.map(val => {\r\n      if (val.iaoSignalName === currentSignal.iaoSignalName) {\r\n        val.metadata = newAttribute;\r\n      }\r\n      return val;\r\n    });\r\n    setAddSignal({ ...currentSignal, metadata: newAttribute });\r\n    callback({ ...props, InteractionComponentData: newCriteria });\r\n  };\r\n\r\n  return (\r\n    <div className=\"scroll signal-container\">\r\n      <div className=\"signals\">\r\n        <div className=\"criteria-header\">\r\n          {isEditPage && (\r\n            <>\r\n              <div className=\"header\">Signals</div>\r\n              <div className=\"add-signal\">\r\n                <GoPlus className=\"add-button-icon\" />\r\n                <Button\r\n                  className=\"add-signal-button\"\r\n                  onClick={() => {\r\n                    setAddSignal({});\r\n                    editSignal(null);\r\n                  }}\r\n                >\r\n                  Add Signal\r\n                </Button>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {isAddpageOpened ? (\r\n          <AddSignal callback={closeAddSignal} signal={currentSignal} />\r\n        ) : (\r\n          <div className=\"criteria-list-container\">{UI}</div>\r\n        )}\r\n      </div>\r\n      {isAttrEnabled && (\r\n        <div className=\"signals attribute-container\">\r\n          <div className=\"criteria-header\">\r\n            {isEditPage && (\r\n              <>\r\n                <div className=\"header\">Attributes</div>\r\n                <div className=\"add-attribute-button-container\">\r\n                  <GoPlus className=\"add-button-icon\" />\r\n                  <Button\r\n                    className=\"add-attribute-button\"\r\n                    onClick={() => {\r\n                      setNewAttribute(true);\r\n                      editAttribute(null, '');\r\n                    }}\r\n                  >\r\n                    Add Attributes\r\n                  </Button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          {isAddAttributeOpened ? (\r\n            <AddAttribute\r\n              callback={closeAddAttribute}\r\n              attribute={currentAttr}\r\n            />\r\n          ) : (\r\n            <div className=\"criteria-list-container attribute-list-container scroll\">\r\n              {AttributeList}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddAttribute = ({ callback, attribute = { attr: '', val: '' } }) => {\r\n  const [attributename, setAttributeName] = useState(attribute.attr);\r\n  const [attributevalue, setAttributeValue] = useState(attribute.val);\r\n  if (attributevalue === null) {\r\n    setAttributeValue('');\r\n  }\r\n  return (\r\n    <div className=\"add-attribute-container\">\r\n      <div>\r\n        <div className=\"attribute-name\">Attribute Name</div>\r\n        <InputElement\r\n          className=\"attribute-input\"\r\n          value={attributename}\r\n          onChange={e => setAttributeName(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <div className=\"attribute-name\">Attribute Value</div>\r\n        <InputElement\r\n          className=\"attribute-input\"\r\n          placeholder={'Expression (OR) URL'}\r\n          value={attributevalue}\r\n          onChange={e => setAttributeValue(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"attribute-controller\">\r\n        <Button\r\n          className=\"cancel-attribute\"\r\n          onClick={() => {\r\n            callback('cancel');\r\n          }}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          className=\"add-attribute-button\"\r\n          onClick={() => {\r\n            if (!attributename) {\r\n              commonAction.openAlert({\r\n                title: 'Warning',\r\n                text: 'Attribute name should not be empty',\r\n              });\r\n              return;\r\n            }\r\n            callback('add', {\r\n              old: attribute,\r\n              new: { attr: attributename, val: attributevalue },\r\n            });\r\n          }}\r\n        >\r\n          Add\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Engg;\r\n","import React, { Component } from 'react';\nimport './Schedulling.scss';\nimport InputElement from '../../../../Atoms/InputElement';\nimport { Dropdown } from '../../../../Atoms/DropdownComponent';\nclass Scheduling extends Component {\n  state = {\n    isNewScheduling: true,\n    schedulingCondition: this.props.InteractionComponentData,\n    addschedule: false,\n  };\n\n  changeHandler = (event, condition) => {\n    const { InteractionComponentData = {} } = this.props;\n    if (condition === 'operator') {\n      InteractionComponentData[condition] = event.title;\n      this.list.forEach(val => {\n        val.selected = false;\n        if (val.title === event.title) val.selected = true;\n      });\n    } else if (condition === 'scheduleKey') {\n      InteractionComponentData[condition] = event.target.value;\n    } else {\n      const input = event.target.value;\n      if (/^\\d*$/.test(input)) {\n        InteractionComponentData[condition] = event.target.value;\n      }\n    }\n    this.props.callback({\n      label: this.props.label,\n      InteractionComponentData,\n    });\n  };\n\n  list = [\n    { title: 'ADD', selected: false },\n    { title: 'SUBTRACT', selected: false },\n  ];\n\n  render() {\n    const {\n      scheduleKey = '',\n      snoozesTimeValueMins = 1,\n      snoozesTimeIncrementValueMins = 0,\n      operator = 'ADD',\n    } = this.props.InteractionComponentData || {};\n    return (\n      <>\n        <div className=\"Schedulling-attributes \">\n          <div className=\"Schedulling-attributes \">\n            <div className=\"Schedulling-heading\">Attribute Name</div>\n            <div className=\"Schedulling-inputfields\">\n              <InputElement\n                value={scheduleKey}\n                type=\"text\"\n                onChange={e => this.changeHandler(e, 'scheduleKey')}\n              />\n            </div>\n\n            <div className=\"Schedulling-Dropdown-box\">\n              <div className=\"Schedulling-Snooze-time-heading\">Operator</div>\n              <div\n                className=\"Schedulling-Snooze-time-inputfields\"\n                style={{ width: '40%' }}\n              >\n                <Dropdown\n                  list={this.list}\n                  toggleItem={currentlist =>\n                    this.changeHandler(currentlist, 'operator')\n                  }\n                  title={operator}\n                />\n              </div>\n            </div>\n\n            <div className=\"Schedulling-Snooze-and-IncrementalValue-box\">\n              <div className=\"Schedulling-Snooze-box\">\n                <div className=\"Schedulling-Snooze-time-heading\">\n                  Snooze time\n                </div>\n                <div className=\"Schedulling-Snooze-time-inputfields\">\n                  <InputElement\n                    value={snoozesTimeValueMins}\n                    type={'text'}\n                    onChange={e =>\n                      this.changeHandler(e, 'snoozesTimeValueMins')\n                    }\n                  />\n                  <span className=\"minute\">Min</span>\n                </div>\n              </div>\n\n              <div className=\"Schedulling-Snooze-time-box\">\n                <div className=\"Schedulling-Snooze-time-heading\">\n                  Incremental Value\n                </div>\n                <div className=\"Schedulling-Snooze-time-inputfields\">\n                  <InputElement\n                    value={snoozesTimeIncrementValueMins}\n                    type={'text'}\n                    onChange={e =>\n                      this.changeHandler(e, 'snoozesTimeIncrementValueMins')\n                    }\n                  />\n                  <span className=\"minute\">Min</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Scheduling;\n","import React, { Component } from 'react';\nimport './rule.scss';\nimport { GoPlus } from 'react-icons/go';\nimport commonAction from '../../../../../Store/commonActivity/action';\nimport { Allimages } from '../../../../../Utils/imageRetriver';\nimport InputElement from '../../../../Atoms/InputElement';\nimport Button from '../../../../Atoms/Button';\nimport HoverContainer from '../../../../Atoms/hoverContainer';\n\nexport default class Rule extends Component {\n  state = {\n    newRuleMapping: {\n      ruleId: '',\n      ruleConstruct: '',\n    },\n    tempMapping: {},\n  };\n  changeHandler = (e, condition) => {\n    const { newRuleMapping } = this.state;\n    newRuleMapping[condition] = e.target.value;\n    this.setState({ newRuleMapping });\n  };\n  editRule = value => {\n    this.setState({\n      newRuleMapping: value,\n      tempMapping: JSON.parse(JSON.stringify(value)),\n    });\n  };\n  deleteRule = value => {\n    // this.setState({ newRuleMapping: false });\n    let ruleMapping = this.props.InteractionComponentData || [];\n    ruleMapping = ruleMapping.filter(rule => rule.ruleId !== value.ruleId);\n    this.props.callback({\n      label: this.props.label,\n      InteractionComponentData: ruleMapping,\n    });\n  };\n\n  addRule = () => {\n    const { newRuleMapping } = this.state;\n    let ruleMapping = this.props.InteractionComponentData || [];\n    if (!newRuleMapping.ruleId) {\n      commonAction.openAlert({\n        title: 'warning',\n        text: 'Rule Id must be filled',\n      });\n      return;\n    }\n    if (!newRuleMapping.ruleConstruct) {\n      commonAction.openAlert({\n        title: 'warning',\n        text: 'RuleConstruct must be filled',\n      });\n      return;\n    }\n    // check whether id already available\n    console.log(this.state.tempMapping, 'fdasf');\n    let isNew = true;\n    ruleMapping = ruleMapping.map(val => {\n      console.log(val, this.state.tempMapping, 'fdasf');\n      if (\n        this.state.tempMapping.ruleId &&\n        val.ruleId === this.state.tempMapping.ruleId\n      ) {\n        isNew = false;\n        return this.state.newRuleMapping;\n      }\n      return val;\n    });\n    if (isNew) {\n      ruleMapping.push(this.state.newRuleMapping);\n    }\n    this.setState(\n      {\n        ruleMapping: ruleMapping,\n        newRuleMapping: { ruleId: '', ruleConstruct: '' },\n        tempMapping: {},\n      },\n      () => {\n        this.props.callback({\n          label: this.props.label,\n          InteractionComponentData: ruleMapping,\n        });\n      }\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"width-50\">\n          <div className=\"RuleBox\">\n            {/* {this.state.currentView === 'EDIT' ? (\n          <Rule\n            instanceData={this.props.instanceData}\n            page={'EDIT'}\n          />\n        ) : (<RuleDisplay/>)} */}\n            <div className=\"Rule\">\n              <div className=\"RuleID\">\n                Rule ID\n                <div className=\"RuleID-inputfields\">\n                  <InputElement\n                    placeholder=\"XD0428\"\n                    onChange={e => {\n                      this.changeHandler(e, 'ruleId');\n                    }}\n                    value={this.state.newRuleMapping.ruleId}\n                  />\n                </div>\n              </div>\n              <div className=\"RuleName\">\n                Rule Name\n                <div className=\"RuleName-inputfields\">\n                  <InputElement\n                    placeholder=\"Rule Name\"\n                    onChange={e => {\n                      this.changeHandler(e, 'ruleConstruct');\n                    }}\n                    value={this.state.newRuleMapping.ruleConstruct}\n                  />\n                </div>\n              </div>\n              <div className=\"AddRuleBox\" onClick={this.addRule}>\n                <Button className=\"AddRuleName\">\n                  Add\n                  <GoPlus className=\"AddRuleIcon\" />\n                </Button>\n              </div>\n            </div>\n            {/* {this.props.businesseventTemplateData.map((value, key) => ( */}\n\n            {this.props.InteractionComponentData &&\n              this.props.InteractionComponentData.map((val, index) => {\n                if (!val.ruleId) return null;\n                return (\n                  <div\n                    key={index}\n                    // onClick={() =>\n                    //   this.editRule(JSON.parse(JSON.stringify(val)))\n                    // }\n                    className=\"RuleDisplay\"\n                  >\n                    <HoverContainer\n                      disableHover={this.props.isEditPage ? false : true}\n                      editHandler={() =>\n                        this.editRule(JSON.parse(JSON.stringify(val)))\n                      }\n                      deleteHandler={() => {\n                        this.deleteRule(JSON.parse(JSON.stringify(val)));\n                      }}\n                    >\n                      <div className=\"RuleIDDisplay\">{val.ruleId}</div>\n                      <div className=\"RuleNameDisplay\">{val.ruleConstruct}</div>\n                    </HoverContainer>\n                  </div>\n                );\n              })}\n\n            {/* ))} */}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Slide from '../../../Atoms/slidedown';\nimport './mapping.scss';\nimport { FaChevronUp, FaChevronDown } from 'react-icons/fa';\nimport { MdCheck } from 'react-icons/md';\nconst style = {};\n\nclass MappingSignal extends Component {\n  state = {};\n  mappingList = {};\n  generateList = (data, newObj) => {\n    if (typeof data === 'object')\n      Object.keys(data).forEach(val => {\n        if (typeof data[val] === 'object') {\n          if (data[val]['properties']) {\n            const temp = JSON.parse(JSON.stringify(data[val]['properties']));\n            newObj[val] = temp;\n            const path = data.currentListPath\n              ? data.currentListPath + '.' + val\n              : val;\n            newObj[val].currentListPath = path;\n            this.generateList(temp, newObj[val]);\n          } else if (typeof data === 'object' && data[val]) {\n            newObj[val] = data[val];\n            const path = data.currentListPath\n              ? data.currentListPath + '.' + val\n              : val;\n            newObj[val].currentListPath = path;\n            this.generateList(data[val], newObj[val]);\n          }\n        }\n      });\n  };\n\n  toggleCreation = mapping => {\n    const criteria = this.props.data.Criteria[0];\n    const selectedSignal = criteria['selected'][0];\n    const currentAttribute = criteria.metadata[selectedSignal];\n    if (typeof mapping === 'object') {\n      return Object.keys(mapping).map((data, i) => {\n        if (typeof mapping[data] === 'object') {\n          const contentData = this.toggleCreation(mapping[data]);\n\n          const path = mapping.currentListPath\n            ? mapping.currentListPath + '.' + data\n            : data;\n\n          if (!contentData[0]) {\n            const isActive = currentAttribute.includes(path) ? true : false;\n            return (\n              <div\n                key={i}\n                className={`last-child-mapper`}\n                onClick={e => {\n                  criteria.metadata[selectedSignal] = path;\n\n                  if (this.props.callback) {\n                    this.props.callback(this.props.data);\n                  }\n                }}\n              >\n                <div>\n                  {data}\n                  {isActive && (\n                    <div className=\"mapping-tick\">\n                      <MdCheck />\n                    </div>\n                  )}\n                </div>\n              </div>\n            );\n          }\n          const isopen = currentAttribute.includes(path) ? true : false;\n          return (\n            <div className=\"mappingslider\">\n              <Slide\n                key={isopen ? i : Math.random()}\n                open={isopen}\n                header={data}\n                content={contentData}\n                customToggler={{\n                  open: <FaChevronUp />,\n                  close: <FaChevronDown />,\n                }}\n              />\n            </div>\n          );\n        } else {\n          return null;\n        }\n      });\n    }\n  };\n\n  render() {\n    console.log(this.props, 'data');\n    const ComponentData = this.props.data.InteractionComponentData;\n    const mappingData =\n      (ComponentData &&\n        ComponentData.eventstore &&\n        ComponentData.eventstore.mappings &&\n        ComponentData.eventstore.mappings.properties) ||\n      {};\n    this.generateList(mappingData, this.mappingList);\n    return (\n      <div className=\"mapping-parent\">\n        {this.toggleCreation(this.mappingList)}\n      </div>\n    );\n  }\n}\n\nexport default MappingSignal;\n","import React, { Component } from 'react';\r\n\r\nimport Flight from '../Domain/flight';\r\nimport Pax from '../Domain/Pax';\r\nimport Crew from '../Domain/Crew';\r\nimport Bag from '../Domain/Crew';\r\nimport Engg from '../Domain/Engg';\r\nimport Ground from '../Domain/Engg';\r\nimport Button from '../../../Atoms/Button';\r\nimport { connect } from 'react-redux';\r\nimport { eventConfiguration } from '../../../../Store/EventConfigurationPage/eventConfig.action';\r\nimport Scheduling from '../Domain/Scheduling/schedulling';\r\nimport Rule from '../Domain/Rule/rule';\r\nimport MappingSignal from '../Domain/mapping';\r\nimport commonAction from '../../../../Store/commonActivity/action';\r\nimport { businesseventConfiguration } from '../../../../Store/BusinessEventsPage/businessConfig.action';\r\n\r\nclass UpdateSignal extends Component {\r\n  state = {\r\n    instanceData: this.props.instanceData,\r\n  };\r\n\r\n  ChooseTemplate = props => {\r\n    const { active } = props;\r\n    let Component = null;\r\n    if (active.toLowerCase() === 'flight') {\r\n      Component = <Flight {...props} />;\r\n    }\r\n    if (active.toLowerCase() === 'pax') {\r\n      Component = <Pax {...props} />;\r\n    }\r\n    if (active.toLowerCase() === 'crew') {\r\n      Component = <Crew {...props} />;\r\n    }\r\n    if (active.toLowerCase() === 'bag') {\r\n      Component = <Bag {...props} />;\r\n    }\r\n    if (active.toLowerCase() === 'engg') {\r\n      Component = <Engg {...props} />;\r\n    }\r\n    if (active.toLowerCase() === 'ground') {\r\n      Component = <Ground {...props} />;\r\n    }\r\n\r\n    if (props.label === 'Rule') {\r\n      Component = <Rule {...props} />;\r\n    }\r\n\r\n    if (props.label === 'Schedule') {\r\n      Component = <Scheduling {...props} />;\r\n    }\r\n    if (Component) {\r\n      return (\r\n        <>\r\n          {Component}\r\n          {props.isEditPage && (\r\n            <div className=\"save-container\">\r\n              <Button\r\n                onClick={() => {\r\n                  //    this.props.getEvent_Template();\r\n                  this.props.closeEdit();\r\n                }}\r\n              >\r\n                cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  const criteria = [\r\n                    'entryCriteria',\r\n                    'exitCriteria',\r\n                    'reinitiateCriteria',\r\n                  ];\r\n                  const instanceData = JSON.parse(\r\n                    JSON.stringify(this.state.instanceData)\r\n                  );\r\n                  criteria.forEach(val => {\r\n                    if (!instanceData[val]) return;\r\n                    let temp = [...instanceData[val]];\r\n                    temp = temp.map(data => {\r\n                      if (data.selected) {\r\n                        delete data.selected;\r\n                      }\r\n                      return data;\r\n                    });\r\n                    instanceData[val] = temp;\r\n                  });\r\n                  const parentData = this.props.instanceData;\r\n\r\n                  if (!parentData.businessEvent) {\r\n                    commonAction.openAlert({\r\n                      title: 'warning',\r\n                      text: 'Please Enter Event Name',\r\n                    });\r\n                    return;\r\n                  }\r\n                  if (!parentData.eventDescription) {\r\n                    commonAction.openAlert({\r\n                      title: 'warning',\r\n                      text: 'Please Enter Event Description',\r\n                    });\r\n                    return;\r\n                  }\r\n                  if (!parentData.eventType) {\r\n                    commonAction.openAlert({\r\n                      title: 'warning',\r\n                      text: 'Please Select type',\r\n                    });\r\n                    return;\r\n                  }\r\n\r\n                  instanceData.eventType = parentData.eventType;\r\n                  instanceData.businessEvent = parentData.businessEvent;\r\n                  instanceData.eventDescription = parentData.eventDescription;\r\n\r\n                  this.props.updateInstance(instanceData);\r\n                  this.props.closeEdit();\r\n                }}\r\n              >\r\n                save\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  selectedData = data => {\r\n    //,, this.setState({})\r\n    const instanceData = { ...this.state.instanceData };\r\n\r\n    if (\r\n      data.label === 'Schedule' &&\r\n      Object.keys(data.InteractionComponentData).length\r\n    ) {\r\n      instanceData['schedulingCondition'] = data.InteractionComponentData;\r\n    }\r\n\r\n    if (data.label === 'Rule') {\r\n      instanceData['ruleMapping'] = data.InteractionComponentData;\r\n    }\r\n    if (data.label !== 'Rule' && data.label !== 'Schedule') {\r\n      instanceData[data.CriteriaName] = data.InteractionComponentData;\r\n    }\r\n    //instanceData[data.CriteriaName].forEach((val)=>{val.meta})\r\n\r\n    if (data.label === 'Rule') {\r\n      this.props.updateState(instanceData);\r\n    } else {\r\n      this.setState({ instanceData });\r\n    }\r\n    //  this.setState({ instanceData });\r\n\r\n    //  this.props.callback(data);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      entryCriteria = [],\r\n      exitCriteria = [],\r\n      reinitiateCriteria = [],\r\n      schedulingCondition = {},\r\n      ruleMapping = [],\r\n      subscription = [],\r\n      eventType = '',\r\n    } = this.state.instanceData;\r\n    const { label, active = '' } = this.props.tabData;\r\n    const isEditPage = this.props._props.isEditPage;\r\n    const callback = this.props._props.isEditPage\r\n      ? this.selectedData\r\n      : () => {};\r\n\r\n    const templateProps = { eventType, active, callback, isEditPage, label };\r\n\r\n    if (label === 'Entry') {\r\n      return this.ChooseTemplate({\r\n        ...templateProps,\r\n        Criteria: entryCriteria,\r\n        InteractionComponent: MappingSignal,\r\n        InteractionComponentData: entryCriteria,\r\n        CriteriaName: 'entryCriteria',\r\n      });\r\n    }\r\n\r\n    if (label === 'Exit') {\r\n      return this.ChooseTemplate({\r\n        ...templateProps,\r\n        InteractionComponent: MappingSignal,\r\n        InteractionComponentData: {},\r\n        Criteria: exitCriteria,\r\n        CriteriaName: 'exitCriteria',\r\n      });\r\n    }\r\n\r\n    if (label === 'Reinstate') {\r\n      return this.ChooseTemplate({\r\n        ...templateProps,\r\n        InteractionComponent: MappingSignal,\r\n        InteractionComponentData: {},\r\n        Criteria: reinitiateCriteria,\r\n\r\n        CriteriaName: 'reinitiateCriteria',\r\n      });\r\n    }\r\n\r\n    if (label === 'Schedule') {\r\n      return this.ChooseTemplate({\r\n        ...templateProps,\r\n        Criteria: entryCriteria,\r\n        InteractionComponent: Scheduling,\r\n        InteractionComponentData: schedulingCondition,\r\n        CriteriaName: 'scheduling',\r\n      });\r\n    }\r\n    if (label === 'Rule') {\r\n      return this.ChooseTemplate({\r\n        ...templateProps,\r\n        Criteria: subscription,\r\n        InteractionComponent: Rule,\r\n        InteractionComponentData: ruleMapping,\r\n        CriteriaName: 'rule',\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\nconst mapStateToProps = state => {};\r\nconst actionCreator = {\r\n  updateInstance: businesseventConfiguration.updateBusiness_Template,\r\n  getEvent_Template: businesseventConfiguration.getBusiness_Event_Template,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreator)(UpdateSignal);\r\n","import React, { Component } from 'react';\r\nimport UpdateSignal from '../Signal-list/index';\r\nimport MultiTabs from '../../../Molecules/multi-tabs';\r\nimport InputElement from '../../../Atoms/InputElement';\r\nimport { Dropdown } from '../../../Atoms/DropdownComponent';\r\nimport './criteria.scss';\r\nimport BusinessEvents from '..';\r\n\r\nclass Criteria extends Component {\r\n  state = { instanceData: JSON.parse(JSON.stringify(this.props.instanceData)) };\r\n\r\n  updateValue = instanceData => {\r\n    this.setState({ instanceData }, () => {\r\n      console.log(this.state.instanceData, 'criteriastate');\r\n    });\r\n  };\r\n\r\n  updateState = instanceData => this.setState({ instanceData }, () => {});\r\n\r\n  listComponent = props => {\r\n    return (\r\n      <UpdateSignal\r\n        {...this.props}\r\n        {...props}\r\n        instanceData={this.state.instanceData}\r\n        updateState={this.updateState}\r\n        callback={this.selectedData}\r\n      />\r\n    );\r\n  };\r\n\r\n  tabList = [\r\n    {\r\n      label: 'Entry',\r\n      childtab: ['FLIGHT', 'PAX', 'CREW', 'BAG', 'ENGG', 'GROUND'],\r\n      active: 'FLIGHT',\r\n      Component: this.listComponent,\r\n    },\r\n    {\r\n      label: 'Exit',\r\n      childtab: ['FLIGHT', 'PAX', 'CREW', 'BAG', 'ENGG', 'GROUND'],\r\n      active: 'FLIGHT',\r\n      Component: this.listComponent,\r\n    },\r\n    {\r\n      label: 'Reinstate',\r\n      childtab: ['FLIGHT', 'PAX', 'CREW', 'BAG', 'ENGG', 'GROUND'],\r\n      active: 'FLIGHT',\r\n      Component: this.listComponent,\r\n    },\r\n    {\r\n      label: 'Schedule',\r\n      childtab: [],\r\n      active: 'FLIGHT',\r\n      Component: this.listComponent,\r\n    },\r\n    {\r\n      label: 'Rule',\r\n      childtab: [],\r\n      active: 'FLIGHT',\r\n      Component: this.listComponent,\r\n    },\r\n  ];\r\n\r\n  saveCriteria = () => {};\r\n\r\n  render() {\r\n    if (!this.state.instanceData['schedulingCondition']) {\r\n      const instanceData = this.state.instanceData;\r\n      instanceData['schedulingCondition'] = {\r\n        scheduleKey: '',\r\n        snoozesTimeValueMins: 1,\r\n        snoozesTimeIncrementValueMins: 0,\r\n        operator: 'ADD',\r\n      };\r\n      this.setState({ instanceData });\r\n    }\r\n\r\n    const isEditPage = this.props.page === 'EDIT' ? true : false;\r\n\r\n    return (\r\n      <div className=\"businessevent-criteria\">\r\n        {isEditPage && (\r\n          <AddEventInputFields\r\n            instanceData={this.state.instanceData}\r\n            callback={this.updateValue}\r\n          />\r\n        )}\r\n        <div className=\"criteria-list\">\r\n          <MultiTabs\r\n            className=\"event-edit\"\r\n            tabData={this.tabList}\r\n            isEditPage={isEditPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Criteria;\r\n\r\nexport const AddEventInputFields = ({ instanceData, callback }) => {\r\n  const {\r\n    businessEvent = '',\r\n    eventDescription = '',\r\n    eventType = 'Stateful',\r\n  } = instanceData;\r\n  let list = [\r\n    { title: 'Transactional', selected: false },\r\n    { title: 'Temporal', selected: false },\r\n    { title: 'Stateless', selected: false },\r\n    { title: 'Passthrough', selected: false },\r\n    { title: 'Stateful', selected: false },\r\n  ];\r\n  list = list.map(val => {\r\n    if (val.title === eventType) val.selected = true;\r\n    return val;\r\n  });\r\n  const updateValue = (value, key) => {\r\n    const data = instanceData;\r\n    data[key] = value;\r\n    callback(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"addEvent\">\r\n        <div className=\"addEventText\">Add Event</div>\r\n        <div className=\"bottomline\"></div>\r\n\r\n        <div className=\"eventDetails\">\r\n          <div className=\"Name\">Event Name</div>\r\n          <div className=\"eventinput\">\r\n            <InputElement\r\n              value={businessEvent}\r\n              onChange={e => updateValue(e.target.value, 'businessEvent')}\r\n              placeholder=\"Enter\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"eventDetails\">\r\n          <div className=\"Name\">Description</div>\r\n          <div className=\"eventinput\">\r\n            <textarea\r\n              value={eventDescription}\r\n              onChange={e => updateValue(e.target.value, 'eventDescription')}\r\n              placeholder=\"Enter\"\r\n              type=\"text\"\r\n              className=\"description\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"eventDetails\">\r\n          <div className=\"Name\">Type</div>\r\n          <div className=\"eventinput\" style={{ width: '40%' }}>\r\n            <Dropdown\r\n              title={eventType}\r\n              list={list}\r\n              toggleItem={item => {\r\n                updateValue(item.title, 'eventType');\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport './edit-instance.scss';\r\nimport Criteria from '../Criteria';\r\n\r\nclass EventListViewDescription extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const {\r\n      businessEventTemplateId,\r\n      businessEvent,\r\n      eventDescription,\r\n      influencers = [],\r\n      businessTargetedDomains = [],\r\n      ruleMapping = [],\r\n      subscription = [],\r\n    } = this.props.instanceData;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"eventListViewDescription\">\r\n          <div className=\"businesseventname\">\r\n            <div className=\"businesseventdetails\">\r\n              <div className=\"eventNo\">{businessEventTemplateId}</div>\r\n              <div className=\"eventName\">{businessEvent}</div>\r\n            </div>\r\n            <div className=\"businesseventdescription\">{eventDescription}</div>\r\n          </div>\r\n          <Subscribers subscription={subscription} />\r\n          <CorrelatdDomain businessTargetedDomains={businessTargetedDomains} />\r\n          <InfluencedEnterpriseEvents influencers={influencers} />\r\n          <DeterminantRules ruleMapping={ruleMapping} />\r\n          <Creteria instanceData={this.props.instanceData} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventListViewDescription;\r\n\r\nconst Creteria = ({ instanceData = [] }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"Domain\">\r\n        <div className=\"header\">Conditions</div>\r\n        <Criteria instanceData={instanceData} page={'VIEW'} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Subscribers = ({ subscription }) => {\r\n  if (!subscription.length) return null;\r\n  return (\r\n    <>\r\n      <div className=\"Domain\">\r\n        <div className=\"header\">Subscribers</div>\r\n        <div className=\"domainDetails\">\r\n          {subscription.map((subscribe, index) => {\r\n            return (\r\n              <div key={index} className=\"domainNames\">\r\n                {subscribe.subscriptionDetails.subscriberGroup}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport const CorrelatdDomain = ({ businessTargetedDomains }) => {\r\n  return (\r\n    <>\r\n      <div className=\"Domain\">\r\n        <div className=\"header\">Correlated Domain</div>\r\n        <div className=\"domainDetails\">\r\n          {businessTargetedDomains.map((val, index) => (\r\n            <div key={index} className=\"domainNames\">\r\n              {val}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const InfluencedEnterpriseEvents = ({ influencers }) => {\r\n  return (\r\n    <>\r\n      <div className=\"Domain\">\r\n        <div className=\"header\">Influenced Enterprise Events</div>\r\n        <div className=\"domainDetails\">\r\n          {influencers.map((influencer, index) => {\r\n            return (\r\n              <div key={index} className=\"domainNames\">\r\n                {influencer}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const DeterminantRules = ({ ruleMapping }) => {\r\n  return (\r\n    <>\r\n      <div className=\"Domain\">\r\n        <div className=\"header\">Determinant Rules</div>\r\n        <div className=\"domainDetails\">\r\n          {ruleMapping.map((val, index) => {\r\n            return (\r\n              <div key={index} style={{ display: 'flex' }}>\r\n                <div className=\"domainNames\" style={{ width: '20%' }}>\r\n                  {val.ruleId}\r\n                </div>\r\n                <div className=\"domainNames\" style={{ width: '80%' }}>\r\n                  {val.ruleConstruct}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport './edit-instance.scss';\r\nimport EventListViewDescription from './active-instance';\r\nimport './update-signal.scss';\r\nimport Criteria from '../Criteria';\r\n\r\nclass EventListView extends Component {\r\n  state = { currentView: 'LIST' };\r\n\r\n  handleEdit = currentView => {\r\n    this.setState({ currentView });\r\n  };\r\n\r\n  cancelEdit = () => {\r\n    this.setState({ currentView: 'LIST' });\r\n    if (this.props.closeEdit) {\r\n      this.props.closeEdit();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const instanceData = JSON.parse(JSON.stringify(this.props.instanceData));\r\n    if (instanceData && !instanceData['schedulingCondition']) {\r\n      instanceData['schedulingCondition'] = {\r\n        scheduleKey: '',\r\n        snoozesTimeValueMins: 0,\r\n        snoozesTimeIncrementValueMins: 0,\r\n        operator: 'ADD',\r\n      };\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {this.state.currentView === 'EDIT' ? (\r\n          <Criteria\r\n            instanceData={instanceData}\r\n            page={'EDIT'}\r\n            closeEdit={this.cancelEdit}\r\n          />\r\n        ) : (\r\n          <div className=\"eventListView\">\r\n            <div className=\"userCreateMain\">\r\n              <div className=\"userCreateName\">User Created Name</div>\r\n              <div className=\"edit\" onClick={() => this.handleEdit('EDIT')}>\r\n                Edit\r\n              </div>\r\n            </div>\r\n            <div className=\"bottomline\"></div>\r\n\r\n            <EventListViewDescription instanceData={this.props.instanceData} />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventListView;\r\n","import React from 'react';\r\nimport './event-list.scss';\r\nimport SearchBox from '../../../Atoms/SearchBox';\r\nimport { businesseventConfiguration } from '../../../../Store/BusinessEventsPage/businessConfig.action';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../Atoms/Button';\r\nimport upArrow from '../../../../../src/components/Img/upArrow.png';\r\nimport EventListView from './edit-instance';\r\nimport Criteria from '../Criteria';\r\nimport { Icon } from 'semantic-ui-react';\r\nimport { GoPlus } from 'react-icons/go';\r\n\r\nclass EventList extends React.Component {\r\n  state = {\r\n    currentToggler: 'activeEvent',\r\n    selectedInstance: {},\r\n    searchBoxValue: '',\r\n    createNewEvent: null,\r\n  };\r\n  businesseventTemplateData = [];\r\n  activeEvent = [];\r\n\r\n  componentDidMount() {\r\n    this.props.getBusinessEvent();\r\n  }\r\n\r\n  getInstance = instances => {\r\n    this.activeEvent = [];\r\n    instances.forEach(instance => {\r\n      this.activeEvent.push(instance);\r\n    });\r\n  };\r\n\r\n  searchHandler = (e, list) => {\r\n    this.setState({ searchBoxValue: e.target.value, list });\r\n  };\r\n\r\n  selectInstance = instance => {\r\n    if (\r\n      this.state.selectedInstance.businessEventTemplateId ===\r\n      instance.businessEventTemplateId\r\n    ) {\r\n      this.setState({ selectedInstance: {} });\r\n    } else {\r\n      const selectedInstance = JSON.parse(JSON.stringify(instance));\r\n      this.setState({ selectedInstance, createNewEvent: null });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.props.businesseventTemplateData) {\r\n      this.getInstance(this.props.businesseventTemplateData);\r\n    }\r\n\r\n    const content = {\r\n      activeEvent: this.activeEvent,\r\n    };\r\n    let list = this.state.searchBoxValue.length\r\n      ? this.state.list\r\n      : content[this.state.currentToggler];\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"BusinessEventInstances\">\r\n          <div className=\"BusinessEvents\">\r\n            <div className=\"BusinessEvent-left-box\">\r\n              <div className=\"BusinessEvent_Box\">\r\n                <div className=\"Business-searchContainer\">\r\n                  <div className=\"Business-Event-search-header\">\r\n                    <SearchBox\r\n                      placeholder=\"Search by name\"\r\n                      onChange={this.searchHandler}\r\n                      list={content[this.state.currentToggler]}\r\n                      value={this.state.searchBoxValue}\r\n                      className=\"Business-EventListSearchBar\"\r\n                      filterBy={['businessEventTemplateId', 'businessEvent']}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"create-event-button-container\">\r\n                <Button\r\n                  className=\"create-event-button\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      createNewEvent: true,\r\n                      selectedInstance: {},\r\n                    })\r\n                  }\r\n                >\r\n                  Add Event\r\n                </Button>\r\n                <GoPlus className=\"create-event-icon\" />\r\n              </div>\r\n              <div className=\"Business-EventListBox scroll\">\r\n                {list &&\r\n                  list.map((instance, index) => {\r\n                    return (\r\n                      <div\r\n                        key={index}\r\n                        className={\r\n                          'Business-EventListDetails ' +\r\n                          `${\r\n                            this.state.selectedInstance\r\n                              .businessEventTemplateId ===\r\n                            instance.businessEventTemplateId\r\n                              ? 'activeInstance'\r\n                              : ''\r\n                          }`\r\n                        }\r\n                        onClick={e => this.selectInstance(instance)}\r\n                      >\r\n                        <div className=\"BusinessListName-Area\">\r\n                          <div className=\"BusinessListID\">\r\n                            {instance.businessEventTemplateId}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"BusinessListNameandBaseBody\">\r\n                          <div className=\"BusinessListName\">\r\n                            <div>{instance.businessEvent}</div>\r\n                            <div className=\"BusinessListBaseBody\">\r\n                              {instance.eventDescription}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"Business-Event-Transactional-button-Container\">\r\n                          <div className=\"Business-Event-Transactional-button-Area\">\r\n                            <Button className=\"Business-Event-Transactional-button\">\r\n                              {instance.eventType}\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Selection-panel scroll\">\r\n            {this.state.createNewEvent ? (\r\n              <Criteria\r\n                instanceData={JSON.parse(\r\n                  JSON.stringify(this.props.sampleObjectAddEvent)\r\n                )}\r\n                page={'EDIT'}\r\n                closeEdit={() => {\r\n                  this.setState({ createNewEvent: null, selectedInstance: {} });\r\n                }}\r\n              />\r\n            ) : this.state.selectedInstance.businessEventTemplateId ? (\r\n              <EventListView\r\n                key={Math.random()}\r\n                instanceData={this.state.selectedInstance}\r\n                closeEdit={() => {\r\n                  this.setState({ createNewEvent: null, selectedInstance: {} });\r\n                }}\r\n              />\r\n            ) : (\r\n              <NoEvent />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst NoEvent = () => {\r\n  return (\r\n    <div className=\"no-event\">\r\n      <div>\r\n        <img src={upArrow} />\r\n      </div>\r\n      Select a \"Active Business Event\" to View\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapState(state) {\r\n  return state.businesseventConfigReducer;\r\n}\r\n\r\nconst actionCreators = {\r\n  getBusinessEvent: businesseventConfiguration.getBusiness_Event_Template,\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(EventList);\r\n","import React from 'react';\r\n//import moment from 'moment';\r\nimport './addInstance.scss';\r\nimport SearchBox from '../../../Atoms/SearchBox';\r\nimport { businesseventConfiguration } from '../../../../Store/BusinessEventsPage/businessConfig.action';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../Atoms/Button';\r\nimport upArrow from '../../../../../src/components/Img/upArrow.png';\r\n//import EventListView from '../View-Instance/edit-instance';\r\nimport Criteria from '../Criteria/index';\r\n\r\nclass addInstance extends React.Component {\r\n  state = {\r\n    currentToggler: 'activeInstance',\r\n    selectedInstance: {},\r\n    searchBoxValue: '',\r\n  };\r\n  businesseventTemplateData = [];\r\n  activeInstance = [];\r\n\r\n  componentDidMount() {\r\n    this.props.getBusinessEvent();\r\n    console.log(this.state, 'businesseventtopage');\r\n  }\r\n\r\n  getInstance = instances => {\r\n    console.log(instances, 'dassss');\r\n    this.activeInstance = [];\r\n    instances.forEach(instance => {\r\n      this.activeInstance.push(instance);\r\n    });\r\n  };\r\n\r\n  searchHandler = (e, list) => {\r\n    this.setState({ searchBoxValue: e.target.value, list });\r\n  };\r\n\r\n  selectInstance = instance => {\r\n    if (\r\n      this.state.selectedInstance.businessEventTemplateId ===\r\n      instance.businessEventTemplateId\r\n    ) {\r\n      this.setState({ selectedInstance: {} });\r\n    } else {\r\n      const selectedInstance = JSON.parse(JSON.stringify(instance));\r\n      this.setState({ selectedInstance });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log('bbbeventList', this.props.businesseventTemplateData);\r\n    if (this.props.businesseventTemplateData) {\r\n      this.getInstance(this.props.businesseventTemplateData);\r\n    }\r\n\r\n    const content = {\r\n      activeInstance: this.activeInstance,\r\n    };\r\n    let list = this.state.searchBoxValue.length\r\n      ? this.state.list\r\n      : content[this.state.currentToggler];\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"BusinessEventInstances\">\r\n          <div className=\"BusinessEvents\">\r\n            <div className=\"BusinessEvent-left-box\">\r\n              <div className=\"BusinessEvent_Box\">\r\n                <div className=\"Business-searchContainer\">\r\n                  <div className=\"Business-Event-search-header\">\r\n                    <SearchBox\r\n                      placeholder=\"Search by name\"\r\n                      onChange={this.searchHandler}\r\n                      list={content[this.state.currentToggler]}\r\n                      value={this.state.searchBoxValue}\r\n                      className=\"Business-EventListSearchBar\"\r\n                      filterBy={['businessEventTemplateId', 'businessEvent']}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"Business-EventListBox scroll\">\r\n                {list &&\r\n                  list.map((instance, index) => {\r\n                    return (\r\n                      <div\r\n                        key={index}\r\n                        className={\r\n                          'Business-EventListDetails ' +\r\n                          `${\r\n                            this.state.selectedInstance\r\n                              .businessEventTemplateId ===\r\n                            instance.businessEventTemplateId\r\n                              ? 'activeInstance'\r\n                              : ''\r\n                          }`\r\n                        }\r\n                        onClick={e => this.selectInstance(instance)}\r\n                      >\r\n                        <div className=\"BusinessListName-Area\">\r\n                          <div className=\"BusinessListID\">\r\n                            {instance.businessEventTemplateId}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"BusinessListNameandBaseBody\">\r\n                          <div className=\"BusinessListName\">\r\n                            <div>{instance.businessEvent}</div>\r\n                            <div className=\"BusinessListBaseBody\">\r\n                              {instance.eventDescription}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"Business-Event-Transactional-button-Container\">\r\n                          <div className=\"Business-Event-Transactional-button-Area\">\r\n                            <Button className=\"Business-Event-Transactional-button\">\r\n                              {instance.eventType}\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Selection-panel scroll\">\r\n            {this.state.selectedInstance.businessEventTemplateId ? (\r\n              <Criteria\r\n                key={Math.random()}\r\n                instanceData={this.state.selectedInstance}\r\n                page={'EDIT'}\r\n              />\r\n            ) : (\r\n              <NoEvent />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst NoEvent = () => {\r\n  return (\r\n    <div className=\"no-event\">\r\n      <div>\r\n        <img src={upArrow} />\r\n      </div>\r\n      Select a “Active Event Instances” to view\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapState(state) {\r\n  return state.businesseventConfigReducer;\r\n}\r\n\r\nconst actionCreators = {\r\n  getBusinessEvent: businesseventConfiguration.getBusiness_Event_Template,\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(addInstance);\r\n","import React, { Component } from 'react';\r\nimport EventList from './View-Instance/event-list';\r\nimport Button from '../../Atoms/Button';\r\nimport { GoPlus, GoListUnordered } from 'react-icons/go';\r\nimport './index.scss';\r\nimport AddInstance from './Add-Instance/addInstance';\r\nimport Popup from '../../Atoms/popup/popup';\r\n\r\nclass BusinessEvents extends Component {\r\n  header = {\r\n    ActiveEventInstanceHeader: {\r\n      Component: EventList,\r\n      headerName: 'Business Event Catlalog',\r\n      buttonName: 'Add Instance',\r\n      navigateTo: 'AddInstanceHeader',\r\n      Icon: GoPlus,\r\n    },\r\n    AddInstanceHeader: {\r\n      headerName: 'Business Event Catlalog',\r\n      Component: AddInstance,\r\n      buttonName: 'View Instance',\r\n      navigateTo: 'ActiveEventInstanceHeader',\r\n      Icon: GoListUnordered,\r\n    },\r\n  };\r\n\r\n  state = { currentPage: this.header.ActiveEventInstanceHeader };\r\n  navigate = e => {\r\n    Object.keys(this.header).forEach(val => {\r\n      if (e.target.innerText === this.header[val].buttonName) {\r\n        const currentPage = this.header[val].navigateTo;\r\n        this.setState({ currentPage: this.header[currentPage] });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { Icon, Component, buttonName, headerName } = this.state.currentPage;\r\n    return (\r\n      <div className=\"main business-event-page\">\r\n        {/* <Popup\r\n          isOpen={true}\r\n          content={{ title: 'hello', children: 'ree', buttonText: 'sd' }}\r\n        /> */}\r\n        <div className=\"Events\">\r\n          <div className=\"EventManagementHeader\">\r\n            <div className=\"EventManagementwrap\">\r\n              <div className=\"EventManagementText\">{headerName}</div>\r\n              <div className=\"Event-header-right-content\">\r\n                {/* <div className=\"event-header-create\">\r\n                  <Icon className=\"event-create-icon\" />\r\n                  <Button\r\n                    className=\"CreateEventTemplate\"\r\n                    onClick={this.navigate}\r\n                  >\r\n                    {buttonName}\r\n                  </Button>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"config-container\">{<Component />}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BusinessEvents;\r\n"],"sourceRoot":""}