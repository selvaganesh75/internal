{"version":3,"sources":["components/Atoms/InputElement/index.js","components/Atoms/DropdownComponent/dropdown.js","webpack:///./src/assets/Icon/chevronup.svg?fa26","webpack:///./src/assets/Icon/chevrondown.svg?a696","components/Atoms/DropdownComponent/dropdown-multiple.js","components/Atoms/DropdownComponent/index.js","components/Atoms/SearchBox/index.js","components/Molecules/AddTask/index.js","components/Atoms/Datepicker/index.js","components/Atoms/slidedown/index.js","components/Atoms/Toggler/index.js","components/Atoms/Accordion/index.js","components/Page/TurnManagement/Presentation/Header/index.js","components/Atoms/Radio/index.js","components/Page/TurnManagement/Presentation/CreateTask/index.js","components/Atoms/CreateButton/index.js","components/Page/TurnManagement/Presentation/TaskList/index.js","components/Page/TurnManagement/Presentation/ManageTask/index.js","components/Page/TurnManagement/Presentation/CreateDepartment/index.js","components/Page/TurnManagement/Presentation/DepartmentList/index.js","components/Page/TurnManagement/Presentation/ManageDepartment/index.js","components/Page/TurnManagement/Presentation/TurnTypeList/index.js","components/Page/TurnManagement/Presentation/CreateTurnType/index.js","components/Page/TurnManagement/Presentation/ManageTurnType/index.js","components/Page/TurnManagement/Presentation/TurnTemplates/index.js","components/Page/TurnManagement/Presentation/TurnEqupFleet/index.js","components/Atoms/tab/tab.js","components/Atoms/tab/index.js","components/Page/TurnManagement/Presentation/SelectTasks/index.js","components/Page/TurnManagement/Presentation/Dependencytask/index.js","components/Page/TurnManagement/Presentation/ViewTemplate_AddTask/index.js","components/Page/TurnManagement/Presentation/TemplateView/index.js","components/Page/TurnManagement/Presentation/CreateTemplateTemplateDetails/index.js","components/Atoms/SaveCancelButton/index.js","components/Page/TurnManagement/Presentation/CreateTurnTemplate/index.js","components/Page/TurnManagement/Presentation/FlightTurnManagement/index.js","components/Page/TurnManagement/index.js"],"names":["InputElement","disabled","this","props","readOnly","undefined","value","type","id","className","onChange","e","JsonName","onClick","clickInput","onInput","placeholder","onFocus","focus","onBlur","blur","multiple","autocomplete","defaultValue","Component","defaultProps","Dropdown","state","listOpen","headerTitle","title","bold","close","bind","setTimeout","window","addEventListener","removeEventListener","setState","prevState","list","toggleItem","dropdownDisable","toggleList","map","item","key","selected","React","_extends","Object","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","SvgChevronup","_ref","svgRef","stroke","fill","strokeWidth","viewBox","height","width","ref","ForwardRef","forwardRef","SvgChevrondown","SearchBox","filterBy","updateContent","event","searchValue","toString","toLowerCase","console","log","newList","Array","isArray","filter","list_item","findIndex","filterContent","includes","searchIcon","addTurnSearch","AddTask","clicked","AddTaskHandler","children","Date_picker","prev","minDate","previousdate","Date","useState","startDate","setStartDate","years","months","renderCustomHeader","date","changeYear","decreaseMonth","increaseMonth","prevMonthButtonDisabled","year","src","arrow","getMonth","placeholderText","Getbackdate","showYearDropdown","dropdownMode","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","Slide","open","content","header","sliderStatus","isOpen","setOpen","style","cursor","Toggler","togglerchange","istoggle","onoffstatus","DataToggle","Accordion","headerComponent","contentComponent","Content","menuList","data","Header","Search","Createturntemplate","TemplateSearch","Button","Radio","handler","radioHandler","dataList","index","name","text","htmlFor","CreateTask","obj","deptid","taskgroup","tasknm","taskdescription","iscaamsenable","departmentcode","alert","checkallfields","commonAction","openAlert","createtask","TaskSubmit","departdropdown","deptarray","forEach","dropdowndata","push","departmentname","display","ReturnSelected","dep","ButtonHandler","CreateButton","CreateButtonHandler","TaskList","val","TaskResponse","handledelete","DeleteIcon","alt","ManageTask","isCreateTask","AccTasksearch","confirmDelete","selectedvalfordelete","handleDeleteTask","depDeleteConfirm","TaskDelete","cancelDelete","iteration","taskinitialresponse","departmentinitialresponse","sort","deleteId","closeAlert","mapDispatchToProps","ManageTaskActions","postTaskDetails","deleteTaskDetails","connect","Managetaskinitialdatareducer","Managedepartmentinitialdatareducer","CreateDepartment","Departmentsubmit","toUpperCase","DepartmentList","DepartmentResponse","ManageDepartment","isCreateDepartment","handleDeleteDep","DepartmentDelete","ManageDepartmentActions","postDepDetails","deleteDepartmentDetails","TurnTypeList","TurnTypeResponse","turntype","turndescription","ManageTurnType","isCreateTurnType","CreateTurnType","TrunTypeSubmit","TurnTypesubmit","turntypeinitialresponse","TurnTypeDelete","ManageTurnTypeActions","postTurnTypeDetails","deleteTurnTypeDetails","Manageturntypeinitialdatareducer","TurnTemplates","now","moment","format","time","str","slice","timestring","templateclick","turntemplateid","airlineaircrafttype","fleettype","turntemplatename","createddate","lastmodifieddate","TurnEqupFleet","dateconvertion","TemplateDetails","addtask","toDate","effectivefrom","expirydate","Tab","label","activeTab","Tabs","onClickTabItem","tab","child","SelectTasks","searchselectedtask","searchhandler","departmentresponse","marginBottom","selectedtask","dependencytask","callback","task","Taskdetails","isActive","tick","taskid","Tick","Tickonclick","Dependencytask","searchdependencytask","selectedOrder","mainTaskCurrent","orderDetails","newData","count","order","selectedDependencytask","showOrders","dependencytaskid","mainTask","taskstart","durationHandler","taskend","isDCPinclude","DCPHandler","taskId","ViewTemplate_AddTask","subtaskresponse","Maintask","selectedOrderForMainTask","selectedDependency","Validation","finalobj","previoustask","previouseffectivefrom","previousexpirydate","tasks","addtaskcall","removedate","AddtasktoExistingTemplate","generateTurn","SubTask","dependency","filteredMaintask","Existingtask","existing","maintask","temp","cpminclind","SubTasktemp","newItem","parent","taskname","isAlreadySelected","main","currentparent","condition","savetask","currentdate","Gettaskorder","templateresponse","taskorder","prevSelectedorder","userselectedlast","taskexecutionorder","userselectedorder","copyobject","taskordercreation","copydependencytask","dependent","copytemplate","striged","string","JSON","stringify","replace","postcallofaddtask","counter","ViewTemplate","TemplateView","temp_task","addtaskresponse","AddtaskConst","cancelHandler","entiretemplate","deletedtask","calenderdate","effective","converteddate","expiry","isFooterEnabled","template","templatedetails","vi_temp_equp","plannedtat","temptask","ViewTemplateHeader","navigateback","DeleteTask","CreateTemplateTemplateDetails","fleetcategory","stationcd","priority","Equipfleetcatagory","equipmenttype","numberOnly","test","CreateTemplatedetails","numberOnlyforpriority","stationscode","disablePast","CreateTurnTemplateHeader","SaveCancelButton","CancelButtonHandler","DoneButtonHandler","CreateTurnTemplate","turntypeid","station","ManageCreateTurnTemplate","postNewTemplate","FlightTurnManagement","currentTemplateID","pageToNavigate","Addtaskfooter","handleback","equipfleet","internalaircrafttype","templateidname","childTaskDetails","Menu","stationinitialresponse","AircraftTypeList","templateinitialdata","departmentinitialdata","TurnTypeInitialdata","taskinitialdata","stationinitialdata","initialactypedata","TemplateListActions","getTemplateData","getDepartmentDetails","getTurnTypeDetails","getTaskDetails","StationActions","getStationDetails","AircraftTypeActions","getAircraftTypeDetails","TurnTemplateInitialDatareducer","Stationinitialdata","Aircrafttypeinitialdata","TurnManagement"],"mappings":"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","file":"static/js/7.16fbff33.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../InputElement/InputElement.scss';\r\nclass InputElement extends Component {\r\n  render() {\r\n    const disabled =\r\n      this.props.disabled && typeof this.props.disabled === 'boolean'\r\n        ? true\r\n        : false;\r\n    const readOnly =\r\n      this.props.readOnly && typeof this.props.readOnly === 'boolean'\r\n        ? true\r\n        : false;\r\n    return this.props.value !== undefined ? (\r\n      <input\r\n        value={this.props.value}\r\n        type={this.props.type}\r\n        id={this.props.id}\r\n        className={'input-style ' + this.props.className}\r\n        readOnly={readOnly}\r\n        disabled={disabled}\r\n        onChange={e => {\r\n          if (\r\n            this.props.onChange &&\r\n            typeof this.props.onChange === 'function'\r\n          ) {\r\n            this.props.onChange(e, this.props.JsonName);\r\n          }\r\n        }}\r\n        onClick={this.props.clickInput}\r\n        onInput={this.props.onInput}\r\n        placeholder={this.props.placeholder}\r\n        onFocus={this.props.focus}\r\n        onBlur={this.props.blur}\r\n        multiple={this.props.multiple}\r\n\r\n      />\r\n    ) : (\r\n        <input\r\n          type={this.props.type}\r\n          id={this.props.id}\r\n          className={'input-style ' + this.props.className}\r\n          disabled={disabled}\r\n          autocomplete=\"off\"\r\n          onChange={e => {\r\n            if (\r\n              this.props.onChange &&\r\n              typeof this.props.onChange === 'function'\r\n            ) {\r\n              this.props.onChange(e, this.props.JsonName);\r\n            }\r\n          }}\r\n          onClick={this.props.clickInput}\r\n          onInput={this.props.onInput}\r\n          placeholder={this.props.placeholder}\r\n          onFocus={this.props.focus}\r\n          onBlur={this.props.blur}\r\n          multiple={this.props.multiple}\r\n          defaultValue={this.props.defaultValue}\r\n        />\r\n      );\r\n  }\r\n}\r\n\r\nInputElement.defaultProps = {\r\n  onChange: () => { },\r\n  onInput: () => { },\r\n  clickInput: () => { },\r\n  focus: () => { },\r\n  blur: () => { },\r\n  className: '',\r\n  id: '',\r\n  placeholder: '',\r\n  type: 'text',\r\n  multiple: false,\r\n  disabled: false,\r\n  defaultValue: '',\r\n};\r\n\r\nexport default InputElement;\r\n","import React from 'react';\r\nimport { ReactComponent as ChevronUp } from '../../../assets/Icon/chevronup.svg';\r\nimport { ReactComponent as ChevronDown } from '../../../assets/Icon/chevrondown.svg';\r\nimport { TiTick } from 'react-icons/ti';\r\nimport './DropDown.scss';\r\n\r\nexport default class Dropdown extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listOpen: false,\r\n      headerTitle: this.props.title,\r\n      bold: false,\r\n    };\r\n    this.close = this.close.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { listOpen } = this.state;\r\n    setTimeout(() => {\r\n      if (listOpen) {\r\n        window.addEventListener('click', this.close);\r\n      } else {\r\n        window.removeEventListener('click', this.close);\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('click', this.close);\r\n  }\r\n\r\n  toggleList() {\r\n    this.setState(prevState => ({\r\n      listOpen: !prevState.listOpen,\r\n    }));\r\n  }\r\n\r\n  close() {\r\n    this.setState({\r\n      listOpen: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { list, toggleItem, className } = this.props;\r\n    const { listOpen, headerTitle } = this.state;\r\n    return (\r\n      <div className={`${className} dd-wrapper`}>\r\n        {this.props.dropdownDisable ? (\r\n          <div\r\n            className=\"dd-header disable-bg\"\r\n            onClick={() => this.toggleList()}\r\n          >\r\n            <div\r\n              className={\r\n                this.state.bold ? 'dd-header-title-bold' : 'dd-header-title'\r\n              }\r\n            >\r\n              {headerTitle}\r\n            </div>\r\n            <span>\r\n              <ChevronDown />\r\n            </span>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"dd-header\" onClick={() => this.toggleList()}>\r\n              <div\r\n                className={\r\n                  this.state.bold || this.props.defaultValue\r\n                    ? 'dd-header-title-bold'\r\n                    : 'dd-header-title'\r\n                }\r\n              >\r\n                {this.state.bold\r\n                  ? headerTitle\r\n                  : this.props.defaultValue\r\n                  ? this.props.defaultValue\r\n                  : headerTitle}\r\n              </div>\r\n              <span>{listOpen ? <ChevronUp /> : <ChevronDown />}</span>\r\n            </div>\r\n            {listOpen && (\r\n              <ul className=\"dd-list\">\r\n                {list.map(item => (\r\n                  <li\r\n                    className=\"dd-list-item\"\r\n                    key={item.title}\r\n                    onClick={() => {\r\n                      this.setState({ headerTitle: item.title, bold: true });\r\n                      toggleItem(item);\r\n                    }}\r\n                  >\r\n                    {item.title}{' '}\r\n                    {item.selected && (\r\n                      <span>\r\n                        <TiTick />\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDropdown.defaultProps = {\r\n  title: 'Select',\r\n  list: [],\r\n  toggleItem: () => {},\r\n  className: '',\r\n};\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M147.6 301.3c-7.5-7.5-7.5-19.8 0-27.3l95.7-95.4c7.3-7.3 19.1-7.5 26.6-.6l94.3 94c3.8 3.8 5.7 8.7 5.7 13.7 0 4.9-1.9 9.9-5.6 13.6-7.5 7.5-19.7 7.6-27.3 0l-81-79.8-81.1 81.9c-7.5 7.5-19.7 7.5-27.3-.1z\"\n});\n\nvar SvgChevronup = function SvgChevronup(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    stroke: \"currentColor\",\n    fill: \"#666666\",\n    strokeWidth: 0,\n    viewBox: \"0 0 512 512\",\n    height: \"26px\",\n    width: \"26px\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChevronup, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chevronup.8673b621.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M147.6 210.7c-7.5 7.5-7.5 19.8 0 27.3l95.7 95.4c7.3 7.3 19.1 7.5 26.6.6l94.3-94c3.8-3.8 5.7-8.7 5.7-13.7 0-4.9-1.9-9.9-5.6-13.6-7.5-7.5-19.7-7.6-27.3 0l-81 79.8-81.1-81.9c-7.5-7.5-19.7-7.5-27.3.1z\"\n});\n\nvar SvgChevrondown = function SvgChevrondown(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    stroke: \"currentColor\",\n    fill: \"#666666\",\n    strokeWidth: 0,\n    viewBox: \"0 0 512 512\",\n    height: \"26px\",\n    width: \"26px\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgChevrondown, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chevrondown.fee003ff.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\r\nimport { ReactComponent as ChevronUp } from '../../../assets/Icon/chevronup.svg';\r\nimport { ReactComponent as ChevronDown } from '../../../assets/Icon/chevrondown.svg';\r\nimport { TiTick } from 'react-icons/ti';\r\nimport './DropDown.scss';\r\n\r\nclass DropdownMultiple extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listOpen: false,\r\n      headerTitle: this.props.title,\r\n      timeOut: null,\r\n    };\r\n    this.close = this.close.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const { listOpen } = this.state;\r\n    setTimeout(() => {\r\n      if (listOpen) {\r\n        window.addEventListener('click', this.close);\r\n      } else {\r\n        window.removeEventListener('click', this.close);\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('click', this.close);\r\n  }\r\n\r\n  close(timeOut) {\r\n    this.setState({\r\n      listOpen: false,\r\n    });\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps) {\r\n    const count = nextProps.list.filter(function(a) {\r\n      return a.selected;\r\n    }).length;\r\n    if (count === 0) {\r\n      return { headerTitle: nextProps.title };\r\n    } else if (count === 1) {\r\n      return { headerTitle: `${count} ${nextProps.titleHelper}` };\r\n    } else if (count > 1) {\r\n      return { headerTitle: `${count} ${nextProps.titleHelper}s` };\r\n    }\r\n  }\r\n\r\n  toggleList() {\r\n    this.setState(prevState => ({\r\n      listOpen: !prevState.listOpen,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { list, toggleItem } = this.props;\r\n    const { listOpen, headerTitle } = this.state;\r\n    return (\r\n      <div className=\"dd-wrapper\">\r\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\r\n          <div className=\"dd-header-title\">{headerTitle}</div>\r\n          <span>{listOpen ? <ChevronUp /> : <ChevronDown />}</span>\r\n        </div>\r\n        {listOpen && (\r\n          <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\r\n            {list.map(item => (\r\n              <li\r\n                className=\"dd-list-item\"\r\n                key={item.title}\r\n                onClick={() => toggleItem(item.id, item.key)}\r\n              >\r\n                {item.title} {item.selected && <TiTick />}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropdownMultiple;\r\n","import Dropdown from './dropdown';\r\nimport DropdownMultiple from './dropdown-multiple';\r\n\r\nexport { Dropdown, DropdownMultiple };\r\n","import React from 'react';\r\nimport InputElement from '../InputElement';\r\nimport './search-box.scss';\r\nimport { MdSearch } from 'react-icons/md';\r\nconst SearchBox = ({ className, onChange, list, filterBy, ...props }) => {\r\n  const updateContent = event => {\r\n    // getting searchbox value\r\n    const searchValue = event.target.value.toString().toLowerCase();\r\n    console.log(searchValue, \"updatecontent\")\r\n\r\n    // using filter function to get updated list\r\n    const newList =\r\n      Array.isArray(list) && filterBy.length\r\n        ? list.filter(list_item => {\r\n          //check whether searchbox values are available in list\r\n          if (list_item !== null) {\r\n            const isTrue = filterBy.findIndex(filterContent => {\r\n              return list_item[filterContent]\r\n                .toLowerCase()\r\n                .includes(searchValue);\r\n            });\r\n            return isTrue === -1 ? false : true;\r\n          }\r\n        })\r\n        : list;\r\n    console.log(newList, newList.length, list, list.length, \"inside search bar\");\r\n    // pass onchange handler with event and updated list\r\n    onChange(event, newList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-box\">\r\n      {props.searchIcon ? '' : <MdSearch className={'search-icon search-' + className} />}\r\n      {props.addTurnSearch ? <InputElement\r\n        onChange={updateContent}\r\n        {...props}\r\n      /> : <InputElement\r\n          className={' search-bar ' + className}\r\n          onChange={updateContent}\r\n          {...props}\r\n        />}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchBox.defaultProps = {\r\n  /* classname for searchbox */\r\n  className: '',\r\n  /* onchange handler to pass the data of EVENT and updated LIST */\r\n  onChange: () => { },\r\n  /* list of object should be given for filter */\r\n  list: [],\r\n  /* filter using FILTERBY content, \r\n    filterby content should be array\r\n  */\r\n  filterBy: [],\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\r\nimport { GoPlus } from 'react-icons/go';\r\nimport Button from '../../Atoms/Button';\r\nimport './AddTask.scss';\r\n\r\nclass AddTask extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  state = {};\r\n  clicked = e => {\r\n    if (this.props.AddTaskHandler && typeof this.props.AddTaskHandler) {\r\n      this.props.AddTaskHandler(e);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"addtask-conatainer\" onClick={this.clicked}>\r\n        <GoPlus className=\"addtask-create-icon\" />\r\n        <Button className={'addtask-content ' + this.props.className}>\r\n          {this.props.children}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React, { useState } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport '../Datepicker/date.scss';\r\nimport arrow from '../../Img/arrow-icon.png';\r\nimport moment from 'moment';\r\n\r\nexport default function Date_picker(props) {\r\n  console.log(props, \"startDate\")\r\n  console.log(props.minDate, \"mindate\")\r\n  let prev;\r\n  if (props.previousdate !== undefined) {\r\n    prev = new Date(props.previousdate);\r\n  } else {\r\n    prev = ''\r\n  }\r\n  const [startDate, setStartDate] = useState(prev);\r\n  // props.previousdate ? props.previousdate : ''\r\n  console.log(startDate, \"startDate1\")\r\n\r\n  const years = [2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035];\r\n  // if (years.length - 1 !== dateString) {\r\n  //   console.log(years.length - 1, dateString, 'years');\r\n  //   years.push(dateString);\r\n  // }\r\n\r\n  // var dateString = moment().format('YYYY');\r\n  // let years = [];\r\n  // let futureyear = moment()\r\n  //   .add(1, 'years')\r\n  //   .format('YYYY');\r\n  // years.push(dateString, futureyear);\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n  ];\r\n  return (\r\n    <div>\r\n      <DatePicker\r\n        renderCustomHeader={({\r\n          date,\r\n          changeYear,\r\n          decreaseMonth,\r\n          increaseMonth,\r\n          prevMonthButtonDisabled,\r\n          // nextMonthButtonDisabled,\r\n        }) => (\r\n            <div>\r\n              <div className=\"YearBlock\">\r\n                <div className=\"yearul\">\r\n                  {years.map(year => (\r\n                    <div onClick={() => changeYear(year)} className=\"yearli\">\r\n                      {year}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"header_Calender\">\r\n                <img\r\n                  className=\"leftarrow\"\r\n                  onClick={decreaseMonth}\r\n                  disabled={prevMonthButtonDisabled}\r\n                  src={arrow}\r\n                />\r\n                <div className=\"monthname\">{months[date.getMonth()]}</div>\r\n                <img\r\n                  className=\"rightarrow\"\r\n                  onClick={increaseMonth}\r\n                  disabled={prevMonthButtonDisabled}\r\n                  src={arrow}\r\n                />\r\n              </div>\r\n            </div>\r\n          )}\r\n        placeholderText=\"Select a Date\"\r\n        className={props.className}\r\n        selected={startDate}\r\n        onChange={date => {\r\n          console.log(date, \"dateeeeeeeee\")\r\n          setStartDate(date);\r\n          props.Getbackdate(date);\r\n        }}\r\n        id={props.id}\r\n        showYearDropdown\r\n        dropdownMode=\"select\"\r\n        minDate={props.minDate}\r\n        showTimeSelect={props.showTimeSelect}\r\n        timeFormat={props.timeFormat}\r\n        timeIntervals={props.timeIntervals}\r\n        timeCaption={props.timeCaption}\r\n        dateFormat={props.dateFormat}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { SlideDown } from 'react-slidedown';\r\nimport 'react-slidedown/lib/slidedown.css';\r\n\r\nconst Slide = ({\r\n  open = false,\r\n  content = null,\r\n  header = null,\r\n  sliderStatus,\r\n}) => {\r\n  const [isOpen, setOpen] = useState(open);\r\n  console.log('hi from slide',sliderStatus);\r\n  const handleToggler = () => {\r\n    setOpen(!isOpen);\r\n    sliderStatus(isOpen);\r\n  };\r\n  return (\r\n    <div\r\n      className={`slider ${isOpen ? 'active-slide' : ''}`}\r\n      style={{ cursor: 'pointer' }}\r\n    >\r\n      <div className=\"slider-header\" onClick={handleToggler}>\r\n        {header}\r\n      </div>\r\n      <SlideDown className={'my-dropdown-slidedown'}>\r\n        {isOpen ? content : null}\r\n      </SlideDown>\r\n    </div>\r\n  );\r\n};\r\n\r\nSlide.defaultProps = {\r\n  sliderStatus: () => {},\r\n};\r\n\r\nexport default Slide;\r\n","import React from 'react';\r\nimport './Toggler.scss';\r\n\r\nexport default class Toggler extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      istoggle: this.props.value,\r\n    };\r\n  }\r\n\r\n  togglerchange = () => {\r\n    this.setState(\r\n      prevState => {\r\n        return { istoggle: !prevState.istoggle };\r\n      },\r\n      () => {\r\n        if (\r\n          this.props.onoffstatus &&\r\n          typeof this.props.onoffstatus == 'function'\r\n        ) {\r\n          this.props.onoffstatus(this.state);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={'Toggle ' + this.props.DataToggle}>\r\n        <div\r\n          className={this.state.istoggle ? 'Toggler togglerchange' : 'Toggler'}\r\n          onClick={this.togglerchange}\r\n        >\r\n          ON\r\n        </div>\r\n        <div\r\n          className={this.state.istoggle ? 'Toggler' : 'Toggler togglerchange'}\r\n          onClick={this.togglerchange}\r\n        >\r\n          OFF\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport '../Accordion/Accordion.scss';\r\n// import {Menu} from '../../../Utils/Data';\r\nimport { IoIosAdd } from 'react-icons/io';\r\nimport { AiOutlineMinus } from 'react-icons/ai';\r\nimport Slide from '../slidedown';\r\n\r\nclass Accordion extends React.Component {\r\n  state = {};\r\n\r\n  headerComponent = header => {\r\n    return (\r\n      <div className=\"heading\">\r\n        <label className=\"tab-label\">\r\n          {header}\r\n          <span>\r\n            {' '}\r\n            <span className=\"minus\">\r\n              <AiOutlineMinus />\r\n            </span>\r\n            <span className=\"add\">\r\n              <IoIosAdd />\r\n            </span>\r\n          </span>\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  contentComponent = Content => {\r\n    return <div className=\"tab-content\">{Content}</div>;\r\n  };\r\n\r\n  render() {\r\n    return this.props.menuList.map((value, i) => (\r\n      <div className=\"row\" key={i}>\r\n        <div className=\"tabs\">\r\n          <div className=\"tab\">\r\n            <Slide\r\n              header={this.headerComponent(value.title)}\r\n              content={this.contentComponent(<value.data />)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Accordion;\r\n","import React, { Component } from 'react';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport Button from '../../../../Atoms/Button';\r\nimport { MdSearch } from 'react-icons/md';\r\nimport { GoPlus } from 'react-icons/go';\r\nimport './Header.scss';\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    Search: false,\r\n  };\r\n\r\n  Createturntemplate = () => {\r\n    if (\r\n      this.props.Createturntemplate &&\r\n      typeof this.props.Createturntemplate === 'function'\r\n    ) {\r\n      this.props.Createturntemplate();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"TurnManagementHeader\">\r\n        <div className=\"TurnManagementwrap\">\r\n          <div className=\"TurnManagementText\">Turn Management</div>\r\n          <div className=\"Turn-header-right-content\">\r\n            <div className=\"turn-search-header\">\r\n              <MdSearch className=\"turn-search-icon\" />\r\n              <InputElement\r\n                className={\r\n                  this.state.Search\r\n                    ? 'TurnManagementSearchBar searchingtext'\r\n                    : 'TurnManagementSearchBar'\r\n                }\r\n                placeholder=\"Template Name / ID\"\r\n                onChange={e => {\r\n                  this.props.TemplateSearch(e.target.value);\r\n                  this.setState({ Search: true });\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"turn-header-create\"\r\n              onClick={this.Createturntemplate}\r\n            >\r\n              <GoPlus className=\"turn-create-icon\" />\r\n              <Button className=\"CreateTurnTemplate\">\r\n                Create Turn Template\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../Radio/Radio.scss';\r\n\r\nclass Radio extends React.Component {\r\n  handler = e => {\r\n    if (this.props.radioHandler) {\r\n      this.props.radioHandler(e.target.value);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <>\r\n        {this.props.dataList.map((data, index) => {\r\n          return (\r\n            <>\r\n              <input\r\n                key={index}\r\n                type=\"radio\"\r\n                name={this.props.name}\r\n                id={this.props.name + index}\r\n                value={data.text}\r\n                onChange={e => this.handler(e)}\r\n              />\r\n              <label htmlFor={this.props.name + index}>{data.text}</label>\r\n            </>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Radio;\r\n","import React, { Component } from 'react';\r\nimport './CreateTask.scss';\r\nimport Radio from '../../../../Atoms/Radio';\r\nimport Button from '../../../../Atoms/Button';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport { Dropdown } from '../../../../Atoms/DropdownComponent';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\n\r\nclass CreateTask extends Component {\r\n  obj = {\r\n    deptid: '',\r\n    taskgroup: '',\r\n    tasknm: '',\r\n    taskdescription: '',\r\n    iscaamsenable: '',\r\n    departmentcode: '',\r\n    alert: '',\r\n  };\r\n\r\n  checkallfields = () => {\r\n    if (this.obj.taskgroup === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Task',\r\n        content: 'Please Select Task Group.',\r\n      });\r\n      return false;\r\n    } else if (this.obj.tasknm === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Task',\r\n        content: 'Please Enter Task Name.',\r\n      });\r\n      return false;\r\n    } else if (this.obj.taskdescription === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Task',\r\n        content: 'Please Enter Task Description.',\r\n      });\r\n      return false;\r\n    } else if (this.obj.iscaamsenable === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Task',\r\n        content: 'Please Select CAAMS Enable.',\r\n      });\r\n      return false;\r\n    } else if (this.obj.alert === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Task',\r\n        content: 'Please Select Alert.',\r\n      });\r\n      return false;\r\n    } else if (this.obj.departmentcode === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Task',\r\n        content: 'Please Select Responsible Department.',\r\n      });\r\n      return false;\r\n    }\r\n\r\n    this.props.createtask(false);\r\n    this.props.TaskSubmit(this.obj);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.departdropdown, 'liyu');\r\n    let deptarray = [];\r\n    this.props.departdropdown.forEach(dropdowndata => {\r\n      deptarray.push({\r\n        title: dropdowndata.departmentname,\r\n        selected: false,\r\n      });\r\n    });\r\n\r\n    let dataArray = [\r\n      {\r\n        text: 'ATW',\r\n      },\r\n      {\r\n        text: 'BTW',\r\n      },\r\n    ];\r\n    let caamsyesnoarray = [\r\n      {\r\n        text: 'YES',\r\n      },\r\n      {\r\n        text: 'No',\r\n      },\r\n    ];\r\n    let alertyesnoarray = [\r\n      {\r\n        text: 'YES',\r\n      },\r\n      {\r\n        text: 'No',\r\n      },\r\n    ];\r\n    return (\r\n      <>\r\n        <div className=\"TaskBody\">\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor\">Task Group</div>\r\n            <div className=\"mandatory-star\">&nbsp;*</div>\r\n          </div>\r\n          <Radio\r\n            name=\"click\"\r\n            dataList={dataArray}\r\n            radioHandler={e => (this.obj.taskgroup = e)}\r\n          />\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor Textpadding\">Task Name</div>\r\n            <div className=\"mandatory-star Textpadding\">&nbsp;*</div>\r\n          </div>\r\n          <InputElement\r\n            className=\"inputbox\"\r\n            placeholder=\"Enter\"\r\n            onChange={e => {\r\n              this.obj.tasknm = e.target.value;\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor Textpadding\">Task Description</div>\r\n            <div className=\"mandatory-star Textpadding\">&nbsp;*</div>\r\n          </div>\r\n          <InputElement\r\n            className=\"inputbox\"\r\n            placeholder=\"Enter\"\r\n            onChange={e => {\r\n              this.obj.taskdescription = e.target.value;\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor Textpadding\">CAAMS Enable</div>\r\n            <div className=\"mandatory-star Textpadding\">&nbsp;*</div>\r\n          </div>\r\n          <Radio\r\n            name=\"cammsyesno\"\r\n            dataList={caamsyesnoarray}\r\n            radioHandler={e => {\r\n              if (e === 'YES') {\r\n                this.obj.iscaamsenable = 'Y';\r\n              } else {\r\n                this.obj.iscaamsenable = 'N';\r\n              }\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor Textpadding\">ALERT</div>\r\n            <div className=\"mandatory-star Textpadding\">&nbsp;*</div>\r\n          </div>\r\n          <Radio\r\n            name=\"alertyesno\"\r\n            dataList={alertyesnoarray}\r\n            radioHandler={e => {\r\n              if (e === 'YES') {\r\n                this.obj.alert = 'Y';\r\n              } else {\r\n                this.obj.alert = 'N';\r\n              }\r\n            }}\r\n          />\r\n          <div style={{ display: 'flex ' }}>\r\n            <div className=\"Textcolor Textpadding\">Responsible Department</div>\r\n            <div className=\"mandatory-star Textpadding\">&nbsp;*</div>\r\n          </div>\r\n          <Dropdown\r\n            ReturnSelected={e => {\r\n              this.obj.departmentcode = e;\r\n            }}\r\n            title=\"Select Department\"\r\n            list={deptarray}\r\n            placeholder=\"Select Department\"\r\n            toggleItem={item => {\r\n              this.props.departdropdown.map(dep => {\r\n                if (item.title === dep.departmentname) {\r\n                  this.obj.departmentcode = dep.departmentcode;\r\n                  this.obj.deptid = dep.id;\r\n                }\r\n              });\r\n            }}\r\n          />\r\n          <div className=\"buttondesign\">\r\n            <Button\r\n              className=\"save-btn\"\r\n              ButtonHandler={() => {\r\n                this.checkallfields();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button ButtonHandler={() => this.props.createtask(false)}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTask;\r\n","import React, { Component } from 'react';\r\nimport './CreateButton.scss';\r\n\r\nclass CreateButton extends Component {\r\n  state = {};\r\n\r\n  clicked = () => {\r\n    console.log('hi');\r\n    if (\r\n      this.props.CreateButtonHandler &&\r\n      typeof this.props.CreateButtonHandler === 'function'\r\n    ) {\r\n      this.props.CreateButtonHandler();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"CreateButton\" onClick={this.clicked}>\r\n          {this.props.text}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateButton;\r\n","import React, { Component } from 'react';\r\nimport './TaskList.scss';\r\nimport DeleteIcon from './../../../../Img/delete.png';\r\n\r\nclass TaskList extends Component {\r\n  state = {};\r\n  obj = {\r\n    tasknm: '',\r\n    taskgroup: '',\r\n  };\r\n  render() {\r\n    const val = this.props.TaskResponse;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Task\">\r\n          {val.map((value, index) => (\r\n            <div className=\"Task-item\" key={index}>\r\n              <div className=\"TaskNumber\">\r\n                {value.id}\r\n                <div className=\"Taskrow2\">{value.taskgroup}</div>\r\n              </div>\r\n              <div className=\"TaskNumber TaskDescription\">\r\n                {value.tasknm}\r\n                <div className=\"Taskrow2\">{value.taskdescription}</div>\r\n              </div>\r\n              <div className=\"TaskCategory\">\r\n                {value.departmentcode}\r\n                <div className=\"delete-icon-div\">\r\n                  <img\r\n                    onClick={() => this.props.handledelete({ id: value.id })}\r\n                    src={DeleteIcon}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    alt=\"delete\"\r\n                  />\r\n\r\n                  {/* <div\r\n                        className=\"btn-style pad-16l \"\r\n                        onClick={() => this.handleClick(index)}\r\n                      >\r\n                        <img\r\n                          src={EditIcon}\r\n                          width=\"20px\"\r\n                          height=\"20px\"\r\n                          alt=\"edit\"\r\n                        />\r\n                      </div> */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport CreateTask from '../CreateTask';\r\nimport './ManageTask.scss';\r\n// import InputElement from '../../../../Atoms/InputElement';\r\nimport CreateButton from '../../../../Atoms/CreateButton';\r\nimport TaskList from '../TaskList';\r\n// import { MdSearch } from 'react-icons/md';\r\nimport { connect } from 'react-redux';\r\nimport { ManageTaskActions } from '../../../../../Store/ManageTask/action';\r\nimport SearchBox from '../../../../Atoms/SearchBox';\r\nimport Confirmation from '../../../../Molecules/confirmation_alert';\r\n\r\nclass ManageTask extends React.Component {\r\n  state = {\r\n    isCreateTask: false,\r\n    AccTasksearch: '',\r\n    confirmDelete: false,\r\n    selectedvalfordelete: null\r\n  };\r\n  createtask = isOpen => {\r\n    this.setState(() => {\r\n      return { isCreateTask: isOpen };\r\n    });\r\n  };\r\n  TaskSubmit = obj => {\r\n    console.log('task', obj);\r\n    this.props.TaskSubmit(obj);\r\n  };\r\n  AccTasksearch = e => {\r\n    this.setState({ AccTasksearch: e.target.value });\r\n  };\r\n  sort(val) {\r\n    let iteration = val;\r\n    if (this.state.AccTasksearch !== '') {\r\n      iteration = val.filter(item => {\r\n        if (\r\n          item.tasknm\r\n            .toLowerCase()\r\n            .indexOf(this.state.AccTasksearch.toLowerCase()) !== -1\r\n        ) {\r\n          return item;\r\n        }\r\n      });\r\n    }\r\n    return iteration;\r\n  }\r\n\r\n  handleDeleteTask = val => {\r\n    this.setState({ confirmDelete: true, selectedvalfordelete: val })\r\n  };\r\n\r\n  depDeleteConfirm = () => {\r\n    this.props.TaskDelete(this.state.selectedvalfordelete)\r\n    this.setState({ confirmDelete: false, selectedvalfordelete: null })\r\n  }\r\n\r\n  cancelDelete = () => {\r\n    this.setState({ confirmDelete: false, selectedvalfordelete: null })\r\n  }\r\n\r\n\r\n  render() {\r\n    const val = this.props.taskinitialresponse.data;\r\n    console.log(this.props.departmentinitialresponse.data, 'dd');\r\n    console.log(this.state.AccTasksearch, 'acctask');\r\n    const sort = this.sort(val);\r\n    return (\r\n      <>\r\n        {this.state.confirmDelete ?\r\n          <Confirmation\r\n            title=\"Department\"\r\n            content=\"Are you sure you want to Delete?\"\r\n            deleteId={() => this.depDeleteConfirm()}\r\n            closeAlert={() => this.cancelDelete()} />\r\n          : ''}\r\n        {this.state.isCreateTask ? (\r\n          <div>\r\n            <div className=\"createTasks\">Create Tasks</div>\r\n            <CreateTask\r\n              createtask={this.createtask}\r\n              TaskSubmit={this.TaskSubmit}\r\n              departdropdown={this.props.departmentinitialresponse.data}\r\n            />\r\n          </div>\r\n        ) : (\r\n            <CreateButton\r\n              text=\"Create Task\"\r\n              CreateButtonHandler={() => {\r\n                this.createtask(true);\r\n              }}\r\n            />\r\n          )}\r\n        <div className=\"TaskHeading\">\r\n          <div className=\"TaskList\">Task List</div>\r\n          <div className=\"task-search-header\">\r\n            <SearchBox\r\n              className=\"searchbartask\"\r\n              placeholder=\"Search by name\"\r\n              list={val}\r\n              onChange={this.AccTasksearch}\r\n              filterBy={['tasknm']}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"task1\">\r\n          <TaskList\r\n            TaskResponse={sort}\r\n            handledelete={val => this.handleDeleteTask(val)}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  TaskSubmit: ManageTaskActions.postTaskDetails,\r\n  TaskDelete: ManageTaskActions.deleteTaskDetails,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    taskinitialresponse: state.Managetaskinitialdatareducer,\r\n    departmentinitialresponse: state.Managedepartmentinitialdatareducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTask);\r\n","import React, { Component } from 'react';\r\nimport './CreateDepartment.scss';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport Button from '../../../../Atoms/Button';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\nimport '../../../../../Utils/Aircraft.scss';\r\n\r\nclass CreateDepartment extends Component {\r\n  obj = {\r\n    departmentname: '',\r\n    departmentcode: '',\r\n  };\r\n  checkallfields = () => {\r\n    if (this.obj.departmentname === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Department',\r\n        content: 'Please Enter Department Name.',\r\n      });\r\n      return false;\r\n    } else if (this.obj.departmentcode === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Department',\r\n        content: 'Please Enter Department Code.',\r\n      });\r\n      return false;\r\n    }\r\n    this.props.CreateDepartment(false);\r\n    this.props.Departmentsubmit(this.obj);\r\n  };\r\n  render() {\r\n    console.log(this.obj, 'CreateDepartment');\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"CreateDepartmentText\">Create Department</div>\r\n          <div className=\"DepartmentDetails\">\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"DepartmentText\">Department Name</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <InputElement\r\n              className=\"DepartmentInputelements\"\r\n              placeholder=\"Enter\"\r\n              onChange={e => {\r\n                this.obj.departmentname = e.target.value;\r\n              }}\r\n            />\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"DepartmentText\">Department Code</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <InputElement\r\n              className=\"DepartmentInputelements\"\r\n              placeholder=\"Enter\"\r\n              onChange={e => {\r\n                this.obj.departmentcode = e.target.value.toUpperCase();\r\n              }}\r\n            />\r\n            <div className=\"buttondesign\">\r\n              <Button\r\n                className=\"save-btn\"\r\n                ButtonHandler={() => {\r\n                  this.checkallfields();\r\n                }}\r\n              >\r\n                Save\r\n              </Button>{' '}\r\n              <Button ButtonHandler={() => this.props.CreateDepartment(false)}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateDepartment;\r\n","import React, { Component } from 'react';\r\nimport './DepartmentList.scss';\r\nimport DeleteIcon from '../../../../Img/delete.png';\r\n\r\nclass DepartmentList extends Component {\r\n  render() {\r\n    const val = this.props.DepartmentResponse;\r\n    return (\r\n      <>\r\n        {val !== 'undefined' ? (\r\n          <div>\r\n            <div className=\"DepartmentlistText\">Department List</div>\r\n            <div className=\"Departmentlist\">\r\n              {val.data.map((value, index) => (\r\n                <div className=\"Departmentlistwrap\" key={index}>\r\n                  <div className=\"Departmentid\">{value.id}</div>\r\n                  <div className=\"Departmentname\">{value.departmentname}</div>\r\n                  <div className=\"Departmentcode\">\r\n                    {value.departmentcode}\r\n                    <div className=\"delete-icon-div\">\r\n                      <img\r\n                        onClick={() =>\r\n                          this.props.handledelete({ id: value.id })\r\n                        }\r\n                        src={DeleteIcon}\r\n                        width=\"20px\"\r\n                        height=\"20px\"\r\n                        alt=\"delete\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DepartmentList;\r\n","import React, { Component } from 'react';\r\nimport CreateDepartment from '../CreateDepartment';\r\nimport DepartmentList from '../DepartmentList';\r\nimport CreateButton from '../../../../Atoms/CreateButton';\r\nimport { connect } from 'react-redux';\r\nimport { ManageDepartmentActions } from '../../../../../Store/ManageDepartment/action';\r\nimport Confirmation from '../../../../Molecules/confirmation_alert';\r\n\r\nclass ManageDepartment extends Component {\r\n  state = {\r\n    isCreateDepartment: false,\r\n    confirmDelete: false,\r\n    selectedvalfordelete: null\r\n  };\r\n\r\n  CreateDepartment = isOpen => {\r\n    this.setState(() => {\r\n      return { isCreateDepartment: isOpen };\r\n    });\r\n  };\r\n  Departmentsubmit = obj => {\r\n    console.log(obj, 'prakash1');\r\n    this.props.Departmentsubmit(obj);\r\n  };\r\n\r\n  handleDeleteDep = val => {\r\n    this.setState({ confirmDelete: true, selectedvalfordelete: val })\r\n  };\r\n\r\n  depDeleteConfirm = () => {\r\n    this.props.DepartmentDelete(this.state.selectedvalfordelete)\r\n    this.setState({ confirmDelete: false, selectedvalfordelete: null })\r\n  }\r\n\r\n  cancelDelete = () => {\r\n    this.setState({ confirmDelete: false, selectedvalfordelete: null })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.confirmDelete ?\r\n          <Confirmation\r\n            title=\"Department\"\r\n            content=\"Are you sure you want to Delete?\"\r\n            deleteId={() => this.depDeleteConfirm()}\r\n            closeAlert={() => this.cancelDelete()} />\r\n          : ''}\r\n\r\n        {this.state.isCreateDepartment ? (\r\n          <CreateDepartment\r\n            CreateDepartment={this.CreateDepartment}\r\n            Departmentsubmit={this.Departmentsubmit}\r\n          />\r\n        ) : (\r\n            <CreateButton\r\n              text=\"Create Department\"\r\n              CreateButtonHandler={() => {\r\n                this.CreateDepartment(true);\r\n              }}\r\n            />\r\n          )}\r\n        <DepartmentList\r\n          DepartmentResponse={this.props.departmentinitialresponse}\r\n          handledelete={val => this.handleDeleteDep(val)}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  Departmentsubmit: ManageDepartmentActions.postDepDetails,\r\n  DepartmentDelete: ManageDepartmentActions.deleteDepartmentDetails,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    departmentinitialresponse: state.Managedepartmentinitialdatareducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDepartment);\r\n","import React, { Component } from 'react';\r\nimport './../DepartmentList/DepartmentList.scss';\r\nimport './TurnType.scss';\r\nimport DeleteIcon from './../../../../Img/delete.png';\r\n\r\nclass TurnTypeList extends Component {\r\n  state = {};\r\n  render() {\r\n    const val = this.props.TurnTypeResponse.data;\r\n    return (\r\n      <>\r\n        <div className=\"DepartmentlistText\">Turn Type List</div>\r\n        <div className=\"Departmentlist\">\r\n          {val.map((value, index) => (\r\n            <div className=\"Departmentlistwrap\" key={index}>\r\n              <div className=\"Departmentid\">{value.id}</div>\r\n              <div className=\"Departmentname\">\r\n                {value.turntype}\r\n                <div className=\"Departmentdescription\">\r\n                  {value.turndescription}\r\n                </div>\r\n              </div>\r\n              <div className=\"Departmentcode\">\r\n                {/* <div className=\"delete-icon-div\">\r\n                  <img\r\n                    onClick={() => this.props.handledelete({ id: value.id })}\r\n                    src={DeleteIcon}\r\n                    width=\"20px\"\r\n                    height=\"20px\"\r\n                    alt=\"delete\"\r\n                  />\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnTypeList;\r\n","import React, { Component } from 'react';\r\nimport './CreateTurnType.scss';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport Button from '../../../../Atoms/Button';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\n\r\nclass CreateTurnType extends Component {\r\n  obj = {\r\n    turntype: '',\r\n    turndescription: '',\r\n  };\r\n  checkallfields = () => {\r\n    if (this.obj.turntype === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Type',\r\n        content: 'Please Enter Turn Name.',\r\n      });\r\n      return false;\r\n    } else if (this.obj.turndescription === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Type',\r\n        content: 'Please Enter Turn Description.',\r\n      });\r\n      return false;\r\n    }\r\n    this.props.CreateTurnType(false);\r\n    this.props.TrunTypeSubmit(this.obj);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"CreateTurnNameText\">Create TurnType</div>\r\n          <div className=\"TurnDetails\">\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"TurnName\">Turn Name</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <InputElement\r\n              className=\"TurnTypeInputelements\"\r\n              placeholder=\"Enter\"\r\n              onChange={e => {\r\n                this.obj.turntype = e.target.value;\r\n              }}\r\n            />\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"TurnName\">Description</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <textarea\r\n              type=\"text\"\r\n              placeholder=\"Enter\"\r\n              className=\"TurnTypeInputelements TurnTypeDescription\"\r\n              onChange={e => {\r\n                this.obj.turndescription = e.target.value;\r\n              }}\r\n            ></textarea>\r\n            <div className=\"buttondesign\">\r\n              <Button\r\n                className=\"save-btn\"\r\n                ButtonHandler={() => {\r\n                  this.checkallfields();\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n              <Button ButtonHandler={() => this.props.CreateTurnType(false)}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default CreateTurnType;\r\n","import React, { Component } from 'react';\r\nimport CreateTurnType from '../CreateTurnType';\r\nimport CreateButton from './../../../../Atoms/CreateButton';\r\nimport TurnTypeList from '../TurnTypeList';\r\nimport { connect } from 'react-redux';\r\nimport { ManageTurnTypeActions } from '../../../../../Store/ManageTurnType/action';\r\n\r\nclass ManageTurnType extends Component {\r\n  state = {\r\n    isCreateTurnType: false,\r\n  };\r\n  CreateTurnType = isOpen => {\r\n    this.setState(() => {\r\n      return { isCreateTurnType: isOpen };\r\n    });\r\n  };\r\n  TrunTypeSubmit = obj => {\r\n    console.log('new', obj);\r\n    this.props.TurnTypesubmit(obj);\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {/* {this.state.isCreateTurnType ? (\r\n          <CreateTurnType\r\n            CreateTurnType={this.CreateTurnType}\r\n            TrunTypeSubmit={this.TrunTypeSubmit}\r\n          />\r\n        ) : (\r\n          <CreateButton\r\n            text=\"Create Turn Type\"\r\n            CreateButtonHandler={() => {\r\n              this.CreateTurnType(true);\r\n            }}\r\n          />\r\n        )} */}\r\n        <TurnTypeList\r\n          TurnTypeResponse={this.props.turntypeinitialresponse}\r\n          handledelete={val => this.props.TurnTypeDelete(val)}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  TurnTypesubmit: ManageTurnTypeActions.postTurnTypeDetails,\r\n  TurnTypeDelete: ManageTurnTypeActions.deleteTurnTypeDetails,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    turntypeinitialresponse: state.Manageturntypeinitialdatareducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageTurnType);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport './TurnTemplates.scss';\r\n\r\nclass TurnTemplates extends React.Component {\r\n  state = {};\r\n  date = value => {\r\n    console.log(value, 'valuedate');\r\n    let val = value !== undefined ? value : '';\r\n    var now = new Date(val);\r\n    console.log(now, 'date');\r\n    var dateString = moment(now).format('DD MMM YY ');\r\n    return dateString.toUpperCase();\r\n  };\r\n\r\n  time = value => {\r\n    console.log(value, 'timed1');\r\n    let val = value !== undefined ? value : '';\r\n    var str = val.slice(0, -1);\r\n    console.log(str, 'timed2');\r\n    var now = new Date(str);\r\n    console.log(now, 'timed3');\r\n    var timestring = moment(now).format('HH:mm');\r\n    console.log(timestring, 'timed');\r\n    return timestring;\r\n  };\r\n\r\n  clicked = val => {\r\n    if (this.props.templateclick) {\r\n      console.log('from turn templates', val);\r\n      this.props.templateclick(val);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Flights\">\r\n        {this.props.sort.map((value, index) => (\r\n          <div\r\n            className=\"Flight_Box\"\r\n            key={index}\r\n            onClick={() => {\r\n              this.clicked(value);\r\n            }}\r\n          >\r\n            <div className=\"Flights_Details\">\r\n              <div className=\"Flight_Number\">\r\n                {value.turntemplateid}\r\n                <div className=\"BaseBody\">\r\n                  {value.airlineaircrafttype} - {value.fleettype}{' '}\r\n                </div>\r\n              </div>\r\n              <div className=\"Base_Details\">{value.turntemplatename}</div>\r\n            </div>\r\n            <div className=\"_Date_Time\">\r\n              <div className=\"_Date1\">\r\n                <div className=\"header margin-left\">Created On</div>\r\n                <div className=\"displayflex\">\r\n                  <div>{this.date(value.createddate)}</div>\r\n                  <div className=\"_Time1\">{this.time(value.createddate)}</div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"_Date1\">\r\n                <div className=\"header\">Last Modified On </div>\r\n                <div className=\"displayflex\">\r\n                  <div>{this.date(value.lastmodifieddate)} </div>\r\n                  <div className=\"_Time1\">\r\n                    {this.time(value.lastmodifieddate)}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnTemplates;\r\n","import React, { Component } from 'react';\r\nimport './TurnEqupFleet.scss';\r\nimport Date_picker from '../../../../Atoms/Datepicker';\r\nimport moment from 'moment';\r\n\r\n\r\nclass TurnEqupFleet extends Component {\r\n  state = {};\r\n  dateconvertion = (value) => {\r\n    console.log(value, 'valuedate');\r\n    let val = value !== undefined ? value : '';\r\n    var dateString = moment(val).format('YYYY/MM/DD');\r\n    return dateString\r\n  }\r\n  render() {\r\n    console.log(this.props.TemplateDetails, this.props.turntype, 'luc');\r\n    console.log(this.props.addtask, \"addedtasks\")\r\n    return (\r\n      <>\r\n        <div className=\"turnequpfleet\">\r\n          <div className=\"turntype\">\r\n            <div>Turn Type</div>\r\n            <div className=\"turntypedrop\">{this.props.TemplateDetails[0]}</div>\r\n          </div>\r\n          <div className=\"plannedTAT\">\r\n            <div>Planned TAT</div>\r\n            <div className=\"plannedTATvalue\">\r\n              {this.props.TemplateDetails[1]}\r\n            </div>\r\n          </div>\r\n          <div className=\"equptype\">\r\n            <div>Equipment Type</div>\r\n            <div className=\"equptypedrop\">{this.props.TemplateDetails[2]}</div>\r\n          </div>\r\n          <div className=\"fleetype\">\r\n            <div>Fleet Category</div>\r\n            <div className=\"fleettypeinput\">\r\n              {this.props.TemplateDetails[3]}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {this.props.addtask ?\r\n          <div className=\"effective_expiry\">\r\n            <div className=\"effective\">\r\n              <div>Effective from</div>\r\n              <div className=\"effective_value\"><Date_picker\r\n                className=\"datepickerbox\"\r\n                previousdate={this.props.TemplateDetails[4]}\r\n                minDate={moment().toDate()}\r\n                Getbackdate={date => {\r\n                  // this.obj.Effective = date;\r\n                  this.props.effectivefrom(date);\r\n                }}\r\n              /></div>\r\n            </div>\r\n            <div className=\"expiry\">\r\n              <div> Expiry Date</div>\r\n              <div className=\"expiry_value \"><Date_picker\r\n                className=\"datepickerbox\"\r\n                previousdate={this.props.TemplateDetails[5]}\r\n                minDate={moment().toDate()}\r\n                Getbackdate={date => {\r\n                  // this.obj.Effective = date;\r\n\r\n                  this.props.expirydate(date);\r\n\r\n                }}\r\n              /></div>\r\n            </div>\r\n          </div> :\r\n          <div className=\"effective_expiry\">\r\n            <div className=\"effective\">\r\n              <div>Effective from</div>\r\n              <div className=\"effective_value\">{this.dateconvertion(this.props.TemplateDetails[4])}</div>\r\n            </div>\r\n            <div className=\"expiry\">\r\n              <div> Expiry Date</div>\r\n              <div className=\"expiry_value \">{this.dateconvertion(this.props.TemplateDetails[5])}</div>\r\n\r\n            </div>\r\n          </div>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnEqupFleet;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './tab.scss';\r\n\r\nclass Tab extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: { activeTab, label },\r\n    } = this;\r\n\r\n    let className = 'tab-list-item ' + this.props.className;\r\n\r\n    if (activeTab === label) {\r\n      className += ' tab-list-active';\r\n    }\r\n\r\n    return (\r\n      <li className={className} onClick={onClick}>\r\n        {label}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './tab.scss';\r\n\r\nimport Tab from './tab';\r\n\r\nclass Tabs extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeTab: this.props.children[0] && this.props.children[0].props.label,\r\n    };\r\n  }\r\n\r\n  onClickTabItem = tab => {\r\n    this.setState({ activeTab: tab });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      props: { children },\r\n      state: { activeTab },\r\n    } = this;\r\n    console.log(this.props.children, 'children');\r\n    return (\r\n      <div className=\"tabs\">\r\n        <div className=\"tab-overflow\">\r\n          <ul className=\"tab-list\">\r\n            {children.map(child => {\r\n              const { label, className } = child.props;\r\n\r\n              return (\r\n                <Tab\r\n                  activeTab={activeTab}\r\n                  key={label}\r\n                  label={label}\r\n                  onClick={onClickTabItem}\r\n                  className={className}\r\n                />\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          {children.map(child => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n","import React, { Component } from 'react';\r\nimport './SelectTasks.scss';\r\nimport SearchBox from '../../../../Atoms/SearchBox';\r\nimport Tick from '../../../../Img/tick.svg';\r\nimport Tickonclick from '../../../../Img/tickonclick.svg';\r\nimport Tabs from '../../../../Atoms/tab';\r\nclass SelectTasks extends Component {\r\n  state = {\r\n    searchselectedtask: '',\r\n  };\r\n  searchhandler = (e, list) => {\r\n    console.log(e.target.value, 'searchhandler');\r\n    this.setState({ searchselectedtask: e.target.value, list });\r\n  };\r\n  render() {\r\n    console.log(this.props.departmentresponse, 'departmentresponse');\r\n    console.log(\r\n      this.state.searchselectedtask,\r\n      this.state.list,\r\n      'searchselectedtask'\r\n    );\r\n    return (\r\n      <>\r\n        <div className=\"task\">\r\n          <div className=\"searchcover\">\r\n            <SearchBox\r\n              className=\"searchbox\"\r\n              placeholder=\"Search By Task Name\"\r\n              onChange={this.searchhandler}\r\n              filterBy={['tasknm']}\r\n            />\r\n          </div>\r\n          <div className=\"eng_ground_sec\">\r\n            <Tabs>\r\n              {this.props.departmentresponse.data.map((item, index) => (\r\n                <div label={item.departmentcode}>\r\n                  <div style={{ marginBottom: '50px' }}>\r\n                    <Taskdetails\r\n                      selectedtask={this.props.selectedtask.filter(selected => {\r\n                        if (selected.departmentcode === item.departmentcode) {\r\n                          return true;\r\n                        }\r\n                      })}\r\n                      dependencytask={this.props.selectedtask}\r\n                      searchselectedtask={this.state.searchselectedtask}\r\n                      callback={this.props.callback}\r\n                      task={'Maintask'}\r\n                    ></Taskdetails>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </Tabs>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default SelectTasks;\r\n\r\nexport const Taskdetails = ({\r\n  selectedtask,\r\n  searchselectedtask,\r\n  callback,\r\n  task,\r\n  // showorder,\r\n}) => {\r\n  // const [tickhandler, setTickhandler] = useState([]);\r\n  console.log(selectedtask, 'functional');\r\n  let sort = [];\r\n  selectedtask.map(item => {\r\n    if (searchselectedtask === '') {\r\n      sort = selectedtask;\r\n      return;\r\n    }\r\n    if (\r\n      item.tasknm.toLowerCase().indexOf(searchselectedtask.toLowerCase()) !== -1\r\n    )\r\n      sort.push(item);\r\n  });\r\n\r\n  console.log(sort, 'push');\r\n  return (\r\n    <>\r\n      {sort.map((item, index) => (\r\n        <>\r\n          <div\r\n            className={\r\n              item.isActive && item.tick\r\n                ? 'tasklist_addtask isactive'\r\n                : 'tasklist_addtask'\r\n            }\r\n            key={index}\r\n            onClick={() => {\r\n              callback(item, task, index);\r\n            }}\r\n          >\r\n            {console.log(item.isActive, 'is')}\r\n            <div className=\"task_no_wing\">\r\n              <div className=\"taskno\">{item.taskid}</div>\r\n              <div className=\"wing\">{item.taskgroup}</div>\r\n            </div>\r\n            <div className=\"task_name_details\">\r\n              <div className=\"task_name\">{item.tasknm}</div>\r\n              <div className=\"task_details\">{item.taskdescription}</div>\r\n            </div>\r\n            <img\r\n              src={item.tick ? (item.isActive ? Tick : Tickonclick) : Tick}\r\n              className=\"tick\"\r\n            ></img>\r\n          </div>\r\n          <div className=\"bottomline_addtask\"></div>\r\n        </>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\n{\r\n  /* <img src={item[index].tick ? Tick :Tickonclick } className='tick'   onClick={()=>{onclick(index,task)}}></img>   */\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Dependencytask.scss';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport Toggler from '../../../../Atoms/Toggler';\r\nimport SearchBox from '../../../../Atoms/SearchBox';\r\nimport { Taskdetails } from '../SelectTasks';\r\n\r\nclass Dependencytask extends Component {\r\n  state = {\r\n    searchdependencytask: '',\r\n    list: [],\r\n    selectedOrder: [],\r\n    mainTaskCurrent:''\r\n    // tick: false,\r\n  };\r\n  \r\n  static getDerivedStateFromProps(props,state){\r\n    if(props.mainTaskCurrent.id !== state.taskId){\r\n      state.taskId = props.mainTaskCurrent.id\r\n      state.searchdependencytask = ''\r\n    }\r\n    return {}\r\n  }\r\n  searchhandler = (e, list) => {\r\n    this.setState({ searchdependencytask: e.target.value, list });\r\n  };\r\n  orderDetails = data => {\r\n    let { selectedOrder } = this.state;\r\n    let newData = [];\r\n    if (selectedOrder.length === 0) {\r\n      newData.push(data);\r\n    } else {\r\n      let count = 0;\r\n      selectedOrder.map(order => {\r\n        if (!(order.taskid === data.taskid)) {\r\n          newData.push(order);\r\n        } else {\r\n          count = 1;\r\n        }\r\n      });\r\n      if (count === 0) {\r\n        newData.push(data);\r\n      }\r\n    }\r\n    selectedOrder = [...selectedOrder, data];\r\n    if (\r\n      this.props.selectedDependencytask &&\r\n      typeof this.props.selectedDependencytask == 'function'\r\n    ) {\r\n      this.props.selectedDependencytask([...newData]);\r\n    }\r\n    this.setState({\r\n      selectedOrder: newData,\r\n    });\r\n  };\r\n\r\n  showOrders = () => {\r\n    console.log(this.props.mainTaskCurrent, 'ordertask');\r\n    return (\r\n      this.props.mainTaskCurrent.dependencytaskid !== undefined &&\r\n      this.props.mainTaskCurrent.dependencytaskid.map(val => {\r\n        return <div>{val}</div>;\r\n      })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    //let tofilter = this.props.dependencytask.data;\r\n    // this.setState({mainTaskCurrent :this.props.mainTaskCurrent.taskid})\r\n    console.log(this.props,\"fixerr\")\r\n   \r\n    return (\r\n      <>\r\n        <div className=\"dependencytask\">\r\n          {this.props.mainTask.map(val => {\r\n            if (val.taskid !== this.props.mainTaskCurrent.taskid) {\r\n              return null;\r\n            }\r\n            return (\r\n              <>\r\n                <div style={{ display: 'flex ' }}>\r\n                  <div className=\"taskdurationtext\">Task Duration Time</div>\r\n                  {/* <div className=\"mandatory-star\">&nbsp;*</div> */}\r\n                </div>\r\n                <div className=\"startendtime\">\r\n                  <div className=\"starttime\">\r\n                    {' '}\r\n                    <InputElement\r\n                      placeholder=\"Start\"\r\n                      value={val.taskstart}\r\n                      onChange={e => {\r\n                        // this.timehandler(e.target.value);\r\n                        this.props.durationHandler(\r\n                          this.props.mainTaskCurrent,\r\n                          e.target.value,\r\n                          'start'\r\n                        );\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"endtime\">\r\n                    <InputElement\r\n                      value={val.taskend}\r\n                      placeholder=\"End\"\r\n                      onChange={e => {\r\n                        this.props.durationHandler(\r\n                          this.props.mainTaskCurrent,\r\n                          e.target.value,\r\n                          'end'\r\n                        );\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"dcptext\">DCP Include</div>\r\n                <Toggler\r\n                  value={val.isDCPinclude}\r\n                  onoffstatus={() => {\r\n                    this.props.DCPHandler(this.props.mainTaskCurrent);\r\n                  }}\r\n                />\r\n\r\n                <div className=\"show-order\">{this.showOrders()}</div>\r\n                <div className=\"selectdeptasktext\">Select Dependency task</div>\r\n                <SearchBox\r\n                  placeholder=\"Search By Task Name\"\r\n                  className=\"dependencysearchbar\"\r\n                  //list = {tofilter}\r\n                  onChange={this.searchhandler}\r\n                  filterBy={['tasknm']}\r\n                />\r\n              </>\r\n            );\r\n          })}\r\n          <div style={{ marginBottom: '50px' }}>\r\n            {console.log(this.state.searchdependencytask,\"searchdependencytask\")}\r\n            <Taskdetails\r\n              task={'Subtask'}\r\n              // dependencytask={this.dependencytask}\r\n              callback={this.props.callback}\r\n              selectedtask={this.props.selectedtask}\r\n              searchselectedtask={this.state.searchdependencytask}\r\n            />\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dependencytask;\r\n","import React, { Component } from 'react';\r\nimport SelectTasks from '../SelectTasks';\r\nimport Dependencytask from '../Dependencytask';\r\nimport './ViewTemplate_AddTask.scss';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { ViewTemplate } from '../../../../../Store/TurnManagement/Tep_View_Del_Task/action';\r\n// import alert from '../../../../../Utils/commonActivity/alert/alert';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\n\r\nclass ViewTemplate_AddTask extends Component {\r\n  state = {\r\n    TemplateDetails: '',\r\n    subtaskresponse: false,\r\n    Maintask: [],\r\n    selectedOrderForMainTask: [],\r\n    selectedDependency: [],\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentDidMount() {\r\n    this.generateTurn(this.props.dependency.data);\r\n    //console.log(this.props.dependency.data, 'dataaaaaaa');\r\n  }\r\n\r\n  Validation = (finalobj, previoustask,previouseffectivefrom,previousexpirydate) => {\r\n   console.log(finalobj, previoustask,\"condition\")\r\n  //  && previouseffectivefrom === finalobj.effectivefrom && previousexpirydate === finalobj.expirydate\r\n    if (finalobj.tasks.length === previoustask  && previouseffectivefrom === finalobj.effectivefrom && previousexpirydate === finalobj.expirydate) {\r\n      console.log('inside addtaskif');\r\n      commonAction.openAlert({\r\n        title: 'Edit Turn Template',\r\n        content: 'Please Select Atleast One Task (or) Edit Effective from ,Expiryto Dates',\r\n      });\r\n      this.props.addtaskcall(false);\r\n      this.props.removedate()\r\n      return false;\r\n    }\r\n\r\n    console.log(finalobj, 'taskviewfromfinalobj');\r\n    this.props.AddtasktoExistingTemplate(finalobj);\r\n    this.props.addtaskcall(false);\r\n    this.props.removedate()\r\n  };\r\n\r\n  generateTurn = Maintask => {\r\n    let SubTask = [...this.props.dependency.data]; //41\r\n\r\n    let filteredMaintask = [];\r\n    let taskId = [];\r\n    this.props.Existingtask &&\r\n      this.props.Existingtask.map(existing => {\r\n        taskId.push(existing.taskid);\r\n      });\r\n    Maintask.map(task => {\r\n      if (!taskId.includes(task.taskid)) {\r\n        filteredMaintask.push({ ...task });\r\n      }\r\n    });\r\n\r\n    let task = filteredMaintask.map((maintask, index) => {\r\n      const temp = { ...maintask };\r\n      console.log(temp, 'crash temp');\r\n      temp.tick = false;\r\n      temp.isActive = false;\r\n      temp.dependencytaskid = [];\r\n      temp.cpminclind = false;\r\n      temp.taskstart = '';\r\n      temp.taskend = '';\r\n      let SubTasktemp = [];\r\n      SubTask.forEach((item, i) => {\r\n        const newItem = { ...item };\r\n        newItem.parent = temp.taskid;\r\n        newItem.tick = false;\r\n        if (newItem.taskid != temp.taskid) {\r\n          SubTasktemp.push(newItem);\r\n        }\r\n      });\r\n      temp.tasks = [...SubTasktemp];\r\n      return temp;\r\n    });\r\n    if (task.length >= 1) {\r\n      console.log(task, 'crash');\r\n      this.setState({ Maintask: task });\r\n    }\r\n  };\r\n\r\n  callback = (item, taskname, index) => {\r\n    console.log(item, taskname, index);\r\n    let temp = [...this.state.Maintask];\r\n    let { selectedOrderForMainTask = [], selectedDependency } = this.state;\r\n    if (taskname === 'Maintask') {\r\n      temp = temp.map(val => {\r\n        val.isActive = false;\r\n        if (val.taskid === item.taskid) {\r\n          item.tick = !item.tick;\r\n\r\n          if (item.tick) {\r\n            item.isActive = true;\r\n            selectedDependency = item.tasks;\r\n            let isAlreadySelected = false;\r\n            selectedOrderForMainTask.forEach(selected => {\r\n              if (selected.taskid == item.taskid) {\r\n                isAlreadySelected = true;\r\n              }\r\n            });\r\n            if (!isAlreadySelected) {\r\n              selectedOrderForMainTask.push(item);\r\n            }\r\n          } else {\r\n            selectedOrderForMainTask = selectedOrderForMainTask.filter(\r\n              selected => selected.taskid != item.taskid\r\n            );\r\n          }\r\n          return item;\r\n        }\r\n\r\n        return val;\r\n      });\r\n      this.setState({\r\n        Maintask: temp,\r\n        selectedDependency,\r\n        selectedOrderForMainTask,\r\n      });\r\n    } else {\r\n      console.log(temp, item, 'tempitem');\r\n      item.tick = !item.tick;\r\n      temp.forEach(main => {\r\n        if (main.taskid === item.parent) {\r\n          if (item.tick) {\r\n            main.dependencytaskid.push(item.taskid);\r\n          } else {\r\n            main.dependencytaskid = main.dependencytaskid.filter(\r\n              val => !(val === item.taskid)\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // selectedOrderForMainTask.dependencytaskid;\r\n\r\n    this.setState({});\r\n\r\n    // this.setState({ Maintask: task });\r\n  };\r\n\r\n  DCPHandler = currentparent => {\r\n    //   alert();\r\n    console.log(currentparent);\r\n    currentparent.cpminclind = !currentparent.cpminclind;\r\n    this.setState({});\r\n  };\r\n\r\n  durationHandler = (currentparent, value, condition) => {\r\n    //   alert();\r\n\r\n    if (condition === 'start') {\r\n      currentparent.taskstart = value;\r\n    } else {\r\n      currentparent.taskend = value;\r\n    }\r\n    this.setState({});\r\n  };\r\n\r\n  savetask = () => {\r\n    // let currentdate =\r\n    //   moment(new Date())\r\n    //     .toISOString()\r\n    //     .split('.')[0] + 'Z';\r\n    let Dated = moment().format('YYYY-MM-DD');\r\n    let Time = moment().format('HH:mm:ss');\r\n    let currentdate = Dated + \"T\" + Time + \"Z\";\r\n\r\n    let task = this.state.selectedOrderForMainTask;\r\n    // .filter(val => val.tick === true);\r\n    let Gettaskorder = this.props.templateresponse[0].tasks.filter(\r\n      (item, i) => {\r\n        if (item.taskorder !== undefined) {\r\n          return true;\r\n        }\r\n      }\r\n    );\r\n    console.log(Gettaskorder.length, Gettaskorder, 'gettaskorder');\r\n    let Gettaskorderlenth = Gettaskorder.length;\r\n    let taskorder = Gettaskorder[Gettaskorderlenth - 1].taskorder;\r\n    console.log(taskorder, 'maintaskorder');\r\n    let prevSelectedorder = this.props.templateresponse[0].tasks.length;\r\n    let userselectedlast = this.props.templateresponse[0].tasks[prevSelectedorder - 1].taskexecutionorder;\r\n    console.log(\"userselected order\", userselectedlast, prevSelectedorder)\r\n    let userselectedorder = userselectedlast;\r\n\r\n    task = task.map((item, i) => {\r\n      let copyobject = { ...item };\r\n      // if (copyobject.tick === true) {\r\n      userselectedorder = userselectedorder + 1;\r\n      copyobject.taskexecutionorder = userselectedorder;\r\n\r\n      if (copyobject.cpminclind === true) {\r\n        copyobject.cpminclind = 'Y';\r\n        console.log(taskorder, 'maintaskorderchild');\r\n        taskorder = taskorder + 1;\r\n        copyobject.taskorder = taskorder;\r\n      } else {\r\n        copyobject.cpminclind = 'N';\r\n      }\r\n      copyobject.lastmodifieddate = currentdate;\r\n      console.log(copyobject, 'addtaskcopytemplate');\r\n      delete copyobject['tasks'];\r\n      delete copyobject['tick'];\r\n      delete copyobject['isActive'];\r\n      delete copyobject['id'];\r\n      // }\r\n      return copyobject;\r\n    });\r\n\r\n\r\n    let objtaskorder = {};\r\n    let taskordercreation = {};\r\n    objtaskorder = task.filter((item, i) => {\r\n      if (item.taskorder !== undefined) {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    //  taskordercreation =\r\n    objtaskorder.map(item => {\r\n      //return {\r\n      taskordercreation[item.taskid] = {\r\n        taskid: item.taskid,\r\n        taskorder: item.taskorder,\r\n      };\r\n      // }\r\n    });\r\n\r\n    this.props.templateresponse[0].tasks.map(item => {\r\n      if (item.taskorder !== 0) {\r\n        taskordercreation[item.taskid] = {\r\n          taskid: item.taskid,\r\n          taskorder: item.taskorder,\r\n        };\r\n      }\r\n    });\r\n\r\n    console.log(taskordercreation, 'taskordercreation');\r\n\r\n    task.map((item, i) => {\r\n      let copydependencytask = [];\r\n      item.dependencytaskid.map((dependency, index) => {\r\n        console.log(dependency, 'ajith', taskordercreation);\r\n        copydependencytask.push(\r\n          taskordercreation[dependency] !== undefined\r\n            ? taskordercreation[dependency]\r\n            : {taskid:null,taskorder:null}\r\n        );\r\n        console.log(dependency, copydependencytask, 'data indexes');\r\n        console.log(item.dependent, i, 'dependent');\r\n        console.log(item, 'copyitem');\r\n      });\r\n      console.log(item.dependent, 'indexes result');\r\n      delete item['dependencytaskid'];\r\n      item.dependencytaskid = copydependencytask;\r\n      return item;\r\n    });\r\n\r\n\r\n    let previoustask =\r\n      this.props.templateresponse[0].tasks &&\r\n      this.props.templateresponse[0].tasks.length;\r\n    let copytemplate = {\r\n      ...(this.props.templateresponse[0] && this.props.templateresponse[0]),\r\n    };\r\n\r\n    task.map(item => {\r\n      if (item.dependencytaskid.length >= 1) {\r\n        let striged = item.dependencytaskid.map(string => {\r\n          return JSON.stringify(string).replace(/\"/g, \"'\");\r\n        });\r\n        item.dependencytaskid = striged;\r\n        return item;\r\n      }\r\n      return item;\r\n    });\r\n    console.log(copytemplate, 'inside if ');\r\n    let finalobj;\r\n    // if (copytemplate.tasks !== null) {\r\n    finalobj = {\r\n      ...copytemplate,\r\n      tasks: [...[...copytemplate.tasks], ...[...task]],\r\n    };\r\n    // }\r\n    // delete finalobj['turntemplateid'];\r\n    // delete finalobj['lastmodifieddate'];\r\n    // finalobj.lastmodifieddate = currentdate;\r\n    console.log(finalobj, 'atleast');\r\n    //  let neweffectivefrom = this.props.effectivefrom\r\n    //  let newexpirydate = this.props.expirydate\r\n     let previouseffectivefrom = finalobj.effectivefrom\r\n     let previousexpirydate = finalobj.expirydate\r\n     console.log(this.props.effectivefrom,this.props.expirydate,previouseffectivefrom,previousexpirydate,\"validate\")\r\n      if(this.props.effectivefrom !== ''){\r\n    if (previouseffectivefrom !==  this.props.effectivefrom) {\r\n      console.log('loopinside')\r\n      delete finalobj['effectivefrom']\r\n      finalobj.effectivefrom = this.props.effectivefrom\r\n    }\r\n  }\r\n  if(this.props.effectivefrom !== ''){\r\n    if (previousexpirydate !==  this.props.expirydate) {\r\n      delete finalobj['expirydate']\r\n      finalobj.expirydate = this.props.expirydate\r\n    }\r\n  }\r\n\r\n    // let taskslength = finalobj.tasks.length;\r\n   \r\n    console.log(finalobj, 'taskfrom add');\r\n    this.Validation(finalobj, previoustask,previouseffectivefrom,previousexpirydate);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.templateresponse, 'templateresponse');\r\n\r\n    if (this.props.postcallofaddtask === true) {\r\n      this.savetask();\r\n    }\r\n\r\n    let Maintask = this.props.dependency.data || []; //41\r\n    console.log(Maintask, 'maintask');\r\n    let { selectedOrderForMainTask } = this.state;\r\n    let currentparent = [];\r\n    if (selectedOrderForMainTask.length) {\r\n      currentparent =\r\n        selectedOrderForMainTask[selectedOrderForMainTask.length - 1];\r\n      currentparent.isActive = true;\r\n      selectedOrderForMainTask = currentparent.tasks;\r\n    }\r\n    // if (\r\n    //   // this.state.Maintask.length >= 1 &&\r\n    //   this.state.Maintask &&\r\n    //   this.state.Maintask.length !==\r\n    //     Maintask.length - this.props.Existingtask.length\r\n    // ) {\r\n    //   console.log(\r\n    //     this.props.Existingtask.length,\r\n    //     this.state.Maintask.length,\r\n    //     Maintask.length - this.props.Existingtask.length,\r\n    //     'length'\r\n    //   );\r\n    //   this.generateTurn(Maintask);\r\n    // }\r\n\r\n    console.log(this.state.Maintask, 'Maintask');\r\n    console.log(this.state.selectedDependency, 'selectedDependency');\r\n    console.log(\r\n      this.state.selectedOrderForMainTask,\r\n      'selectedOrderForMainTask'\r\n    );\r\n\r\n    ///FOR SHOWING HOLE TASK COUNT //\r\n    let counter = 0;\r\n    this.state.Maintask.map((item, index) => {\r\n      if (item.tick === true) {\r\n        counter = counter + 1;\r\n      }\r\n    });\r\n    console.log(this.props.dependency, 'Maintaskview');\r\n    return (\r\n      <div>\r\n        <div className=\"select_Task\">Selected Tasks - {counter}</div>\r\n        <div style={{ display: 'flex' }}>\r\n          <SelectTasks\r\n            selectedtask={this.state.Maintask}\r\n            callback={this.callback}\r\n            departmentresponse={this.props.departmentresponse}\r\n          />\r\n          <Dependencytask\r\n            selectedtask={selectedOrderForMainTask}\r\n            mainTask={this.state.Maintask}\r\n            mainTaskCurrent={currentparent}\r\n            callback={this.callback}\r\n            DCPHandler={this.DCPHandler}\r\n            durationHandler={this.durationHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  AddtasktoExistingTemplate: ViewTemplate.AddTask,\r\n};\r\nconst mapStateToProps = () => {\r\n  return {};\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ViewTemplate_AddTask);\r\n","import React, { Component } from 'react';\r\nimport './TemplateView.scss';\r\nimport TurnEqupFleet from '../../../../Page/TurnManagement/Presentation/TurnEqupFleet';\r\nimport AddTask from '../../../../Molecules/AddTask';\r\nimport SearchBox from './../../../../Atoms/SearchBox';\r\nimport close from '../../../../Img/close.svg';\r\nimport { connect } from 'react-redux';\r\nimport { ViewTemplate } from '../../../../../Store/TurnManagement/Tep_View_Del_Task/action';\r\nimport ViewTemplate_AddTask from '../ViewTemplate_AddTask';\r\nimport moment from 'moment';\r\n// import { commonAction } from '../../../../../Store/commonActivity/action';\r\n\r\nclass TemplateView extends Component {\r\n  state = {\r\n    temp_task: '',\r\n    addtask: false,\r\n    list: [],\r\n    effectivefrom:'',\r\n    expirydate:''\r\n  };\r\n  // obj = {\r\n  //   id: '',\r\n  //   taskid: '',\r\n  // };\r\n  addtaskresponse = () => {\r\n    this.setState({ addtask: true, temp_task: '' });\r\n    this.props.AddtaskConst(true);\r\n  };\r\n  cancelHandler = () => {\r\n    this.setState({ addtask: false });\r\n  };\r\n  searchhandler = (e, list) => {\r\n    let toString = e.target.value.toString();\r\n    console.log(toString, 'to string');\r\n    this.setState({ temp_task: toString, list });\r\n  };\r\n\r\n  TaskDelete = (entiretemplate, taskid, tasknm) => {\r\n    // let currentdate =\r\n    //   moment(new Date())\r\n    //     .toISOString()\r\n    //     .split('.')[0] + 'Z';\r\n    // let Dated = moment().format('YYYY-MM-DD');\r\n    // let Time = moment().format('HH:mm:ss');\r\n    // let currentdate = Dated + \"T\" + Time + \"Z\";\r\n    if (entiretemplate[0].tasks.length > 0) {\r\n      const deletedtask = entiretemplate[0].tasks.filter(\r\n        item => item.taskid !== taskid\r\n      );\r\n      entiretemplate = {...entiretemplate[0],tasks:[...[entiretemplate[0].tasks]]}\r\n      delete entiretemplate['tasks'];\r\n      entiretemplate.tasks = deletedtask;\r\n     \r\n      // delete entiretemplate[0]['lastmodifieddate'];\r\n      // entiretemplate[0].lastmodifieddate = currentdate;\r\n      console.log(entiretemplate, 'entiretemplate');\r\n      this.props.deletedtask(entiretemplate, taskid, tasknm);\r\n    }\r\n  };\r\n\r\n  sort = val => {\r\n    let iteration = val;\r\n    if (this.state.temp_task !== '') {\r\n      iteration = val.filter(item => {\r\n        console.log(item, 'view');\r\n\r\n        if (\r\n          item.tasknm\r\n            .toLowerCase()\r\n            .indexOf(this.state.temp_task.toLowerCase()) !== -1\r\n        ) {\r\n          console.log(\r\n            item.tasknm.toLowerCase(),\r\n            this.state.temp_task.toLowerCase(),\r\n            'selva search'\r\n          );\r\n          return item;\r\n        }\r\n      });\r\n    }\r\n    return iteration;\r\n  };\r\n  calenderdate = date =>{\r\n    if(date !== null){\r\n      let Dated = moment(date).format('YYYY-MM-DD');\r\n      let Time = moment(date).format('HH:mm:ss');\r\n      let currentdate = Dated + \"T\" + Time + \"Z\";\r\n      return currentdate;\r\n      }else {\r\n        return ''\r\n      }\r\n  }\r\n\r\n  effective=(date)=>{\r\n    let converteddate = this.calenderdate(date)\r\n    this.setState({effectivefrom : converteddate})\r\n  }\r\n  expiry=(date)=>{\r\n    let converteddate = this.calenderdate(date)\r\n    this.setState({expirydate : converteddate})\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.dependency, 'inside template view');\r\n    console.log(this.state.list, 'view');\r\n    if (!this.props.isFooterEnabled && this.state.addtask) {\r\n      this.cancelHandler();\r\n    }\r\n    let entiretemplate = [];\r\n    this.props.templateresponse &&\r\n      this.props.templateresponse.data.map(template => {\r\n        if (this.props.templatedetails[0] === template.turntemplateid) {\r\n          entiretemplate.push(template);\r\n        }\r\n      });\r\n    console.log(entiretemplate, 'arraytemplate');\r\n    console.log(this.props.task,\"taskeddddddd\")\r\n    const val = (this.props.task && this.props.task.tasks) || [];\r\n    const sort = this.sort(val);\r\n\r\n    let vi_temp_equp = [];\r\n    if (this.props.task && typeof this.props.task === 'object') {\r\n      vi_temp_equp.push(\r\n        this.props.task.turntype,\r\n        this.props.task.plannedtat,\r\n        this.props.task.airlineaircrafttype,\r\n        this.props.task.fleettype,\r\n        this.props.task.effectivefrom,\r\n        this.props.task.expirydate,\r\n       \r\n      );\r\n    }\r\n\r\n    // console.log(this.obj.id, 'obj of view template');\r\n    console.log(sort, 'taskfromviewaftersort');\r\n    return (\r\n      <>\r\n        <div className=\"TemplateTaskList\">\r\n          <TurnEqupFleet\r\n            TemplateDetails={vi_temp_equp}\r\n            turntype={this.props.turntypeinitialresponse}\r\n            addtask={this.state.addtask}\r\n            effectivefrom={this.effective}\r\n            expirydate = {this.expiry}\r\n          />\r\n          {this.state.addtask ? (\r\n            <ViewTemplate_AddTask\r\n              departmentresponse={this.props.departmentresponse}\r\n              templatedetails={this.props.templatedetails}\r\n              templateresponse={entiretemplate}\r\n              dependency={this.props.dependency}\r\n              cancelHandler={this.cancelHandler}\r\n              Existingtask={this.props.task.tasks}\r\n              postcallofaddtask={this.props.postcallofaddtask}\r\n              addtaskcall={val => this.props.addtaskcall(val)}\r\n              effectivefrom = {this.state.effectivefrom}\r\n              expirydate = {this.state.expirydate}\r\n              removedate = {()=>this.setState({effectivefrom:'',expirydate:''})}\r\n\r\n            />\r\n          ) : (\r\n            <div>\r\n              <div className=\"TotalTask_addTask\">\r\n                <div className=\"TotalTask\">\r\n                  Total Number of Tasks - {val && val.length}\r\n                </div>\r\n                <div className=\"addTask\">\r\n                  <AddTask AddTaskHandler={this.addtaskresponse}>\r\n                    Add Task\r\n                  </AddTask>\r\n                </div>\r\n              </div>\r\n              <div className=\"searchcontainer\">\r\n                <SearchBox\r\n                  className=\"searchbar\"\r\n                  placeholder=\"Search by name\"\r\n                  list={val}\r\n                  onChange={this.searchhandler}\r\n                  filterBy={['tasknm']}\r\n                />\r\n              </div>\r\n              <div className=\"TaskHeading\">\r\n                <div className=\"Task_wing\">Task ID</div>\r\n                <div className=\"Taskname_Description\">Task Name</div>\r\n                <div className=\"Departmentname\">Dept Code</div>\r\n                <div className=\"Taskstart\">Start Time</div>\r\n                <div className=\"Taskend\">End Time</div>\r\n              </div>\r\n              {sort.map((temptask, i) => (\r\n                <>\r\n                  <div className=\"assignedTaskcontainer\" key={i}>\r\n                    <div className=\"Task_wing\">\r\n                      <div className=\"Taskno\">{temptask.taskid}</div>\r\n                      <div className=\"wing\">{temptask.taskgroup}</div>\r\n                    </div>\r\n                    <div className=\"Taskname_Description\">\r\n                      <div className=\"Taskname\">{temptask.tasknm}</div>\r\n                      <div className=\"TaskDescription\">\r\n                        {temptask.taskdescription}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"Departmentname\">\r\n                      {' '}\r\n                      {temptask.departmentcode}\r\n                    </div>\r\n                    <div className=\"Taskstart\"> {temptask.taskstart} </div>\r\n                    <div className=\"Taskend\"> {temptask.taskend}</div>\r\n                    <img\r\n                      className=\"Taskdelete\"\r\n                      alt=\"\"\r\n                      src={close}\r\n                      onClick={() =>\r\n                        this.TaskDelete(\r\n                          entiretemplate,\r\n                          temptask.taskid,\r\n                          temptask.tasknm\r\n                        )\r\n                      }\r\n                    ></img>\r\n                  </div>\r\n                  <div className=\"line\" />\r\n                </>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport const ViewTemplateHeader = ({ templatedetails, navigateback }) => {\r\n  return (\r\n    <div className=\"TemplateViewHeader\">\r\n      <div className=\"HeaderText\">\r\n        <span style={{ cursor: 'pointer' }} onClick={() => navigateback()}>\r\n          Turn Management\r\n        </span>{' '}\r\n        > {templatedetails[0]} - {templatedetails[1]}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = {\r\n  deletedtask: ViewTemplate.DeleteTask,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    turntypeinitialresponse: state.Manageturntypeinitialdatareducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TemplateView);\r\n","import React, { Component } from 'react';\r\nimport InputElement from '../../../../Atoms/InputElement';\r\nimport './CreateTemplateTemplateDetails.scss';\r\nimport { Dropdown } from '../../../../Atoms/DropdownComponent';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\nimport Date_picker from '../../../../Atoms/Datepicker';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nclass CreateTemplateTemplateDetails extends Component {\r\n  state = {\r\n    fleetcategory: null,\r\n  };\r\n  obj = {\r\n    turntemplatename: '',\r\n    turntype: '',\r\n    stationcd: '',\r\n    plannedtat: '',\r\n    airlineaircrafttype: '',\r\n    fleettype: '',\r\n    effectivefrom: '',\r\n    expirydate: '',\r\n    priority: ''\r\n  };\r\n  fleetcategory = (item, Equipfleetcatagory) => {\r\n    console.log(item, 'equip');\r\n    Equipfleetcatagory.map(Equipfleetcatagory => {\r\n      console.log(Equipfleetcatagory, 'fleet');\r\n      if (item.title === Equipfleetcatagory.equipmenttype) {\r\n        this.obj.fleettype = Equipfleetcatagory.fleetcategory;\r\n        this.setState({ fleetcategory: Equipfleetcatagory.fleetcategory });\r\n      }\r\n    });\r\n  };\r\n  numberOnly = e => {\r\n    const re = /^[0-9\\b]+$/;\r\n    if (e.target.value === '' || re.test(e.target.value)) {\r\n      this.obj.plannedtat = e.target.value;\r\n      this.props.CreateTemplatedetails(this.obj);\r\n    } else {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Template',\r\n        content: 'Please Enter a Number under Planned TAT.',\r\n      });\r\n    }\r\n  };\r\n  calenderdate = (date) => {\r\n    if (date !== null) {\r\n      let Dated = moment(date).format('YYYY-MM-DD');\r\n      let Time = moment(date).format('HH:mm:ss');\r\n      let currentdate = Dated + \"T\" + Time + \"Z\";\r\n      return currentdate;\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n  numberOnlyforpriority = e => {\r\n    const re = /^[0-9\\b]+$/;\r\n    if (e.target.value === '' || re.test(e.target.value)) {\r\n      this.obj.priority = e.target.value;\r\n      this.props.CreateTemplatedetails(this.obj);\r\n    } else {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Template',\r\n        content: 'Please Enter a Number under Priority.',\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    console.log(this.props.Equipfleetcatagory, 'Equipfleetcatagory');\r\n    let equipmenttype = [];\r\n    this.props.Equipfleetcatagory.map(item => {\r\n      equipmenttype.push({ title: item.equipmenttype, selected: false });\r\n    });\r\n    let turntype = [];\r\n    this.props.turntype.data.map(item => {\r\n      turntype.push({ title: item.turntype, selected: false });\r\n    });\r\n\r\n    return (\r\n      <div className=\"headercreatetemplate\">\r\n        <div className=\"Temp-Station\">\r\n          <div className=\"Temp\">\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"color-createtemplate\">Template Name</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <div className=\"margin-top-createtemplate\">\r\n              <InputElement\r\n                placeholder=\"Enter\"\r\n                onChange={e => {\r\n                  this.obj.turntemplatename = e.target.value;\r\n                  this.props.CreateTemplatedetails(this.obj);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"station\">\r\n            <div style={{ display: 'flex ' }}>\r\n              <div className=\"color-createtemplate\">Turn Type</div>\r\n              <div className=\"mandatory-star\">&nbsp;*</div>\r\n            </div>\r\n            <div className=\"margin-top-createtemplate\">\r\n              <Dropdown\r\n                title=\"Select\"\r\n                list={turntype}\r\n                placeholder=\"Select\"\r\n                toggleItem={item => {\r\n                  this.obj.turntype = item.title;\r\n                  this.props.CreateTemplatedetails(this.obj);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Turn-planned-equptype-fleetcat\">\r\n          <div className=\"Turn-planned-wrap\">\r\n            <div className=\"Turn\">\r\n              <div className=\"color-createtemplate\">Station</div>\r\n              <div className=\"margin-top-createtemplate\">\r\n                <Dropdown\r\n                  placeholder=\"Select\"\r\n                  title=\"Select\"\r\n                  list={this.props.stationscode}\r\n                  toggleItem={item => {\r\n                    this.obj.stationcd = item.title;\r\n                    this.props.CreateTemplatedetails(this.obj);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"planned\">\r\n              <div style={{ display: 'flex ' }}>\r\n                <div className=\"color-createtemplate\">Planned TAT</div>\r\n                <div className=\"mandatory-star\">&nbsp;*</div>\r\n              </div>\r\n              <div className=\"margin-top-createtemplate\">\r\n                <InputElement\r\n                  placeholder=\"Enter\"\r\n                  onChange={e => {\r\n                    this.numberOnly(e);\r\n                  }}\r\n                  value={this.obj.plannedtat}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"equptype-fleetcat-wrap\">\r\n            <div className=\"equptype\">\r\n              <div style={{ display: 'flex ' }}>\r\n                <div className=\"color-createtemplate\">Equipment Type</div>\r\n                <div className=\"mandatory-star\">&nbsp;*</div>\r\n              </div>\r\n              <div className=\"margin-top-createtemplate\">\r\n                <Dropdown\r\n                  title=\"Select\"\r\n                  list={equipmenttype}\r\n                  placeholder=\"Select\"\r\n                  toggleItem={item => {\r\n                    this.fleetcategory(item, this.props.Equipfleetcatagory);\r\n                    this.obj.airlineaircrafttype = item.title;\r\n                    this.props.CreateTemplatedetails(this.obj);\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"fleetcat\">\r\n              <div style={{ display: 'flex ' }}>\r\n                <div className=\"color-createtemplate\">Fleet Category</div>\r\n                <div className=\"mandatory-star\">&nbsp;*</div>\r\n              </div>\r\n              <div className=\"margin-top-createtemplate\">\r\n                <InputElement\r\n                  placeholder=\"Enter\"\r\n                  disabled\r\n                  defaultValue={this.state.fleetcategory}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"effective-expiry-priority\">\r\n          <div className=\"effective-expiry-wrap\">\r\n            <div className=\"effective\">\r\n              <div style={{ display: 'flex ' }}>\r\n                <div className=\"color-createtemplate\">Effective From</div>\r\n                <div className=\"mandatory-star\">&nbsp;*</div>\r\n              </div>\r\n              <div className=\"margin-top-createtemplate\">\r\n                <Date_picker\r\n                  className=\"datepickerbox\"\r\n                  minDate={moment().toDate()}\r\n                  Getbackdate={date => {\r\n                    // this.obj.Effective = date;\r\n                    this.obj.effectivefrom = this.calenderdate(date)\r\n\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"expiry\">\r\n              <div style={{ display: 'flex ' }}>\r\n                <div className=\"color-createtemplate\">Expiry Date</div>\r\n                <div className=\"mandatory-star\">&nbsp;*</div>\r\n              </div>\r\n              <div className=\"margin-top-createtemplate\">\r\n                <Date_picker\r\n                  className=\"datepickerbox\"\r\n                  disablePast\r\n                  minDate={moment().toDate()}\r\n                  Getbackdate={date => {\r\n                    // this.obj.Effective = date;\r\n                    this.obj.expirydate = this.calenderdate(date)\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"priority-wrap \">\r\n            <div className=\"priority\">\r\n              <div style={{ display: 'flex ' }}>\r\n                <div className=\"color-createtemplate\">Priority</div>\r\n              </div>\r\n              <div className=\"margin-top-createtemplate\">\r\n                <InputElement\r\n                  placeholder=\"Enter\"\r\n                  onChange={e => {\r\n                    this.numberOnlyforpriority(e);\r\n                  }}\r\n                  value={this.obj.priority}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateTemplateTemplateDetails;\r\n\r\nexport const CreateTurnTemplateHeader = ({ navigateback }) => {\r\n  return (\r\n    <>\r\n      <div className=\"CreateTurnTemplateHeader\">\r\n        <div className=\"CreateTurnTemplateHeaderText\">\r\n          <span style={{ cursor: 'pointer' }} onClick={navigateback}>\r\n            Turn Management\r\n          </span>{' '}\r\n          > Create TurnTemplate{' '}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport './SaveCancelButton.scss';\r\nimport Button from '../Button';\r\n\r\nclass SaveCancelButton extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"savecancelbutton\">\r\n          <div className=\"wrapbuttons\">\r\n            <Button\r\n              ButtonHandler={() => {\r\n                this.props.CancelButtonHandler();\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              className=\"save-btn\"\r\n              ButtonHandler={() => {\r\n                this.props.DoneButtonHandler();\r\n              }}\r\n            >\r\n              Done\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SaveCancelButton;\r\n","import React, { Component } from 'react';\r\nimport CreateTemplateTemplateDetails from '../CreateTemplateTemplateDetails';\r\nimport SelectTasks from '../SelectTasks';\r\nimport Dependencytask from '../Dependencytask';\r\nimport './CreateTurnTemplate.scss';\r\nimport SaveCancelButton from '../../../../Atoms/SaveCancelButton';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport { ManageCreateTurnTemplate } from '../../../../../Store/TurnManagement/CreateTurnTemplate/action';\r\nimport { commonAction } from '../../../../../Store/commonActivity/action';\r\n\r\nclass CreateTurnTemplate extends Component {\r\n  state = {\r\n    TemplateDetails: {},\r\n    subtaskresponse: false,\r\n    Maintask: [],\r\n    selectedOrderForMainTask: [],\r\n    selectedDependency: [],\r\n  };\r\n  Validation = finalobj => {\r\n    console.log(finalobj, 'validation');\r\n    if (\r\n      finalobj.turntemplatename === undefined ||\r\n      finalobj.turntemplatename === ''\r\n    ) {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Template',\r\n        content: 'Please Enter Template Name.',\r\n      });\r\n      return false;\r\n    } else if (finalobj.turntype === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Template',\r\n        content: 'Please Select TurnType.',\r\n      });\r\n      return false;\r\n    } else if (finalobj.plannedtat == '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Template',\r\n        content: 'Please Enter Planned TAT.',\r\n      });\r\n      return false;\r\n    } else if (finalobj.airlineaircrafttype === '') {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Template',\r\n        content: 'Please Select Equipment Type.',\r\n      });\r\n      return false;\r\n    }\r\n    else if (finalobj.effectivefrom === '' ) {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Template',\r\n        content: 'Please Select Effective From Date.',\r\n      });\r\n      return false;\r\n    }\r\n    else if (finalobj.expirydate === '' ) {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Template',\r\n        content: 'Please Select Expiry Date. ',\r\n      });\r\n      return false;\r\n    }\r\n    else if (finalobj.tasks.length < 1) {\r\n      commonAction.openAlert({\r\n        title: 'Create Turn Template',\r\n        content: 'Please Select Atleast One Task.',\r\n      });\r\n      return false;\r\n    }\r\n    this.props.CreateTurnTemplate(finalobj);\r\n    this.props.CancelButtonHandler();\r\n    console.log(finalobj, 'finalone');\r\n  };\r\n\r\n  generateTurn = Maintask => {\r\n    let SubTask = [...this.props.dependency.data]; //41\r\n\r\n    let task = Maintask.map(maintask => {\r\n      const temp = {\r\n        ...maintask,\r\n      };\r\n      temp.tick = false;\r\n      temp.isActive = false;\r\n      // temp.dependencyOrder = [];\r\n      temp.dependencytaskid = [];\r\n      temp.cpminclind = false;\r\n      temp.taskstart = '';\r\n      temp.taskend = '';\r\n      let SubTasktemp = [];\r\n      SubTask.forEach(item => {\r\n        const newItem = {\r\n          ...item,\r\n        };\r\n\r\n        newItem.parent = temp.taskid;\r\n        newItem.tick = false;\r\n        if (newItem.taskid !== temp.taskid) {\r\n          SubTasktemp.push(newItem);\r\n        }\r\n      });\r\n      temp.tasks = [...SubTasktemp];\r\n      return temp;\r\n    });\r\n    this.setState({\r\n      Maintask: task,\r\n    });\r\n  };\r\n\r\n  callback = (item, taskname, index) => {\r\n    console.log(item, taskname, index, 'callbacktemplate');\r\n    let temp = [...this.state.Maintask];\r\n    let { selectedOrderForMainTask = [], selectedDependency } = this.state;\r\n    if (taskname === 'Maintask') {\r\n      temp = temp.map(val => {\r\n        val.isActive = false;\r\n        if (val.taskid === item.taskid) {\r\n          item.tick = !item.tick;\r\n\r\n          if (item.tick) {\r\n            item.isActive = true;\r\n            selectedDependency = item.tasks;\r\n            let isAlreadySelected = false;\r\n            selectedOrderForMainTask.forEach(selected => {\r\n              if (selected.taskid == item.taskid) {\r\n                isAlreadySelected = true;\r\n              }\r\n            });\r\n            if (!isAlreadySelected) {\r\n              selectedOrderForMainTask.push(item);\r\n            }\r\n          } else {\r\n            selectedOrderForMainTask = selectedOrderForMainTask.filter(\r\n              selected => selected.taskid != item.taskid\r\n            );\r\n          }\r\n          return item;\r\n        }\r\n\r\n        return val;\r\n      });\r\n      console.log(\r\n        temp,\r\n        selectedDependency,\r\n        selectedOrderForMainTask,\r\n        'ANALYSE'\r\n      );\r\n      this.setState({\r\n        Maintask: temp,\r\n        selectedDependency,\r\n        selectedOrderForMainTask,\r\n      });\r\n    } else {\r\n      console.log(temp, item, 'tempitem');\r\n      item.tick = !item.tick;\r\n      temp.forEach(main => {\r\n        if (main.taskid === item.parent) {\r\n          if (item.tick) {\r\n            main.dependencytaskid.push(item.taskid);\r\n          } else {\r\n            main.dependencytaskid = main.dependencytaskid.filter(\r\n              val => !(val === item.taskid)\r\n            );\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    // selectedOrderForMainTask.dependencytaskid;\r\n\r\n    this.setState({});\r\n\r\n    // this.setState({ Maintask: task });\r\n  };\r\n\r\n  CreateTemplatedetails = obj => {\r\n    console.log(obj, \"datepic\")\r\n    this.setState({\r\n      TemplateDetails: obj,\r\n    });\r\n  };\r\n\r\n  DCPHandler = currentparent => {\r\n    currentparent.isDCPinclude = !currentparent.isDCPinclude;\r\n    currentparent.cpminclind = currentparent.isDCPinclude;\r\n    this.setState({});\r\n  };\r\n\r\n  durationHandler = (currentparent, value, condition) => {\r\n    if (condition === 'start') {\r\n      currentparent.taskstart = value;\r\n    } else {\r\n      currentparent.taskend = value;\r\n    }\r\n    this.setState({});\r\n  };\r\n\r\n  searchdependencytask = () => {\r\n\r\n\r\n  }\r\n\r\n  ////for making post call\r\n  DoneButtonHandler = () => {\r\n\r\n    // let currentdate =\r\n    //   moment(new Date())\r\n    //     .toISOString()\r\n    //     .split('.')[0] + 'Z';\r\n\r\n    let Dated = moment().format('YYYY-MM-DD');\r\n    let Time = moment().format('HH:mm:ss');\r\n    let currentdate = Dated + \"T\" + Time + \"Z\";\r\n    console.log(currentdate, \"currentdate\")\r\n    console.log(this.state.Maintask, 'turntemplate');\r\n    let task = this.state.selectedOrderForMainTask;\r\n    console.log(task, 'turntemplate');\r\n    let taskorder = 0;\r\n    let userselectedorder = 0\r\n    task = task.map(item => {\r\n      let copyobject = {\r\n        ...item,\r\n      };\r\n      userselectedorder = userselectedorder + 1;\r\n      copyobject.taskexecutionorder = userselectedorder;\r\n      if (copyobject.cpminclind === true) {\r\n        copyobject.cpminclind = 'Y';\r\n        taskorder = taskorder + 1;\r\n        copyobject.taskorder = taskorder;\r\n      } else {\r\n        copyobject.cpminclind = 'N';\r\n      }\r\n      copyobject.createddate = currentdate;\r\n      copyobject.lastmodifieddate = currentdate;\r\n      delete copyobject['tasks'];\r\n      delete copyobject['tick'];\r\n      delete copyobject['isActive'];\r\n      delete copyobject['isDCPinclude'];\r\n      delete copyobject['id'];\r\n      console.log(copyobject, 'copyobject');\r\n      return copyobject;\r\n    });\r\n\r\n    let finalobj = this.state.TemplateDetails;\r\n\r\n    this.props.turntype.data.map(item => {\r\n      if (finalobj.turntype === item.turntype) {\r\n        finalobj.turntypeid = item.id;\r\n\r\n      }\r\n    });\r\n\r\n    finalobj.createddate = currentdate;\r\n    finalobj.lastmodifieddate = currentdate;\r\n    finalobj.tasks = task;\r\n    console.log(finalobj, 'finalbefore');\r\n\r\n    let objtaskorder = {};\r\n    let taskordercreation = {};\r\n    objtaskorder = finalobj.tasks.filter(item => {\r\n      if (item.taskorder !== undefined) {\r\n        return true;\r\n      }\r\n    });\r\n\r\n    objtaskorder.map(item => {\r\n      taskordercreation[item.taskid] = {\r\n        taskid: item.taskid,\r\n        taskorder: item.taskorder,\r\n      };\r\n    });\r\n    console.log(taskordercreation, 'indexes dataConfirm');\r\n    finalobj.tasks.map((item, i) => {\r\n      let copydependencytask = [];\r\n      item.dependencytaskid.map(dependency => {\r\n        copydependencytask.push(\r\n          taskordercreation[dependency] !== undefined\r\n            ? taskordercreation[dependency]\r\n            : {taskid:null,taskorder:null}\r\n        );\r\n        console.log(dependency, copydependencytask, 'data indexes');\r\n        console.log(item.dependent, i, 'dependent');\r\n        console.log(item, 'copyitem');\r\n      });\r\n      console.log(item.dependent, 'indexes result');\r\n      delete item['dependencytaskid'];\r\n      item.dependencytaskid = copydependencytask;\r\n      return item;\r\n    });\r\n    console.log(finalobj, 'taskmapping');\r\n    finalobj.tasks.map(item => {\r\n      let striged = item.dependencytaskid.map(string => {\r\n        return JSON.stringify(string).replace(/\"/g, \"'\");\r\n      });\r\n      item.dependencytaskid = striged;\r\n      return item;\r\n    });\r\n\r\n    this.Validation(finalobj);\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.Maintask, 'maintask');\r\n    console.log(this.props.turntype, 'turntypeid');\r\n    let Maintask = this.props.dependency.data || []; //41\r\n    let { selectedOrderForMainTask } = this.state;\r\n    let currentparent = [];\r\n    if (selectedOrderForMainTask.length) {\r\n      currentparent =\r\n        selectedOrderForMainTask[selectedOrderForMainTask.length - 1];\r\n      currentparent.isActive = true;\r\n      selectedOrderForMainTask = currentparent.tasks;\r\n    }\r\n    console.log(currentparent, 'current parent');\r\n    if (this.state.Maintask.length !== Maintask.length) {\r\n      this.generateTurn(Maintask);\r\n    }\r\n\r\n    let station = [];\r\n    this.props.stationscode.map(item => {\r\n      station.push({\r\n        title: item.station,\r\n        selected: false,\r\n      });\r\n    });\r\n\r\n    console.log(this.state.Maintask, 'Maintask');\r\n    console.log(this.state.selectedDependency, 'selectedDependency');\r\n    console.log(\r\n      this.state.selectedOrderForMainTask,\r\n      'selectedOrderForMainTask'\r\n    );\r\n\r\n    ///FOR SHOWING HOLE TASK COUNT //\r\n    let counter = 0;\r\n    this.state.Maintask.map(item => {\r\n      if (item.tick === true) {\r\n        counter = counter + 1;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <>\r\n        <div className=\"Create-Turn-Template\">\r\n          <CreateTemplateTemplateDetails\r\n            turntype={this.props.turntype}\r\n            // templatedata={this.props.templatedata}\r\n            stationscode={station}\r\n            CreateTemplatedetails={obj => {\r\n              this.CreateTemplatedetails(obj);\r\n            }}\r\n            Equipfleetcatagory={this.props.Equipfleetcatagory}\r\n          />\r\n          <div className=\"Selecttasktext\"> Selected Tasks - {counter} </div>{' '}\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n            }}\r\n          >\r\n            <SelectTasks\r\n              selectedtask={this.state.Maintask}\r\n              callback={this.callback}\r\n              departmentresponse={this.props.departmentresponse}\r\n            />{' '}\r\n            <Dependencytask\r\n              selectedtask={selectedOrderForMainTask}\r\n              mainTask={this.state.Maintask}\r\n              mainTaskCurrent={currentparent}\r\n              callback={this.callback}\r\n              DCPHandler={this.DCPHandler}\r\n              durationHandler={this.durationHandler}\r\n              searchdependencytask={this.searchdependencytask}\r\n            />{' '}\r\n          </div>{' '}\r\n        </div>\r\n        <SaveCancelButton\r\n          CancelButtonHandler={() => this.props.CancelButtonHandler()}\r\n          DoneButtonHandler={() => {\r\n            this.DoneButtonHandler();\r\n          }}\r\n        />{' '}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  CreateTurnTemplate: ManageCreateTurnTemplate.postNewTemplate,\r\n};\r\nconst mapStateToProps = () => {\r\n  return {};\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateTurnTemplate);\r\n","import React from 'react';\r\nimport Accordion from './../../../../Atoms/Accordion';\r\nimport './FlightTurnManagement.scss';\r\nimport Header from './../Header';\r\nimport { connect } from 'react-redux';\r\nimport { TemplateListActions } from '../../../../../Store/TemplateList/action';\r\nimport ManageTask from '../ManageTask';\r\nimport ManageDepartment from '../ManageDepartment';\r\nimport ManageTurnType from '../ManageTurnType';\r\nimport TurnTemplates from './../TurnTemplates';\r\nimport { ManageDepartmentActions } from '../../../../../Store/ManageDepartment/action';\r\nimport { ManageTurnTypeActions } from '../../../../../Store/ManageTurnType/action';\r\nimport { ManageTaskActions } from '../../../../../Store/ManageTask/action';\r\nimport TemplateView from '../TemplateView';\r\nimport { ViewTemplateHeader } from './../TemplateView';\r\nimport CreateTurnTemplate from '../CreateTurnTemplate';\r\nimport { CreateTurnTemplateHeader } from '../CreateTemplateTemplateDetails';\r\nimport SaveCancelButton from '../../../../Atoms/SaveCancelButton';\r\nimport { StationActions } from '../../../../../Store/Station/action';\r\nimport { AircraftTypeActions } from '../../../../../Store/AircraftType/action';\r\nimport { templateActions } from '../../../../../Store/flightManagement/template/template.action';\r\n\r\nclass FlightTurnManagement extends React.Component {\r\n  state = {\r\n    TemplateSearch: '',\r\n    currentTemplateID: null,\r\n    pageToNavigate: 'turnTemplate',\r\n    Addtaskfooter: false,\r\n    postcallofaddtask: '',\r\n  };\r\n\r\n  childTaskDetails: {\r\n    tasks: [],\r\n  };\r\n  componentDidMount() {\r\n    this.props.templateinitialdata();\r\n    this.props.departmentinitialdata();\r\n    this.props.TurnTypeInitialdata();\r\n    this.props.taskinitialdata();\r\n    this.props.stationinitialdata();\r\n    this.props.initialactypedata();\r\n    // this.props.getTemplate();\r\n  }\r\n\r\n  TemplateSearch = e => {\r\n    this.setState({\r\n      TemplateSearch: e,\r\n    });\r\n  };\r\n  handleback = () => {\r\n    this.setState({\r\n      pageToNavigate: 'turnTemplate',\r\n      Addtaskfooter: false,\r\n    });\r\n  };\r\n  sort = val => {\r\n    let iteration = val;\r\n    if (this.state.TemplateSearch !== '') {\r\n      iteration = val.filter(item => {\r\n        console.log(item.turntemplatename, 'search crash');\r\n        if (\r\n          (item &&\r\n            item.turntemplateid\r\n              .toLowerCase()\r\n              .indexOf(this.state.TemplateSearch.toLowerCase()) !== -1) ||\r\n          (item.turntemplatename !== null &&\r\n            item.turntemplatename\r\n              .toLowerCase()\r\n              .indexOf(this.state.TemplateSearch.toLowerCase()) !== -1)\r\n        ) {\r\n          return item;\r\n        }\r\n      });\r\n    }\r\n    return iteration;\r\n  };\r\n  Equipfleetcatagory = val => {\r\n    let equipfleet = [];\r\n    val.map(item => {\r\n      equipfleet.push({\r\n        equipmenttype: item.internalaircrafttype,\r\n        fleetcategory: item.fleetcategory,\r\n      });\r\n    });\r\n    return equipfleet;\r\n  };\r\n  addtaskcall = val => {\r\n    this.setState({\r\n      postcallofaddtask: val,\r\n    });\r\n    this.setState({\r\n      Addtaskfooter: false,\r\n    });\r\n  };\r\n  pageToNavigate = (templateidname, sort) => {\r\n    console.log(this.childTaskDetails, 'childTaskDetails');\r\n    if (this.state.pageToNavigate === 'turnTemplate') {\r\n      return (\r\n        <div>\r\n          <Header\r\n            TemplateSearch={this.TemplateSearch}\r\n            Createturntemplate={() => {\r\n              this.setState({\r\n                pageToNavigate: 'CreateTurntemplate',\r\n                TemplateSearch: '',\r\n              });\r\n            }}\r\n          />{' '}\r\n          <div className=\"TurnManagement\">\r\n            <div className=\"Template\">\r\n              <TurnTemplates\r\n                sort={sort}\r\n                templateclick={val => {\r\n                  console.log(val, '-->value click');\r\n                  // this.childTaskDetails = val;\r\n                  this.setState({\r\n                    currentTemplateID: val.id,\r\n                    pageToNavigate: 'ViewTemplate',\r\n                  });\r\n                }}\r\n              />{' '}\r\n            </div>{' '}\r\n            <div className=\"Manage\">\r\n              <span key={'manage'}>\r\n                <Accordion menuList={Menu} />{' '}\r\n              </span>{' '}\r\n            </div>{' '}\r\n          </div>{' '}\r\n        </div>\r\n      );\r\n    } else if (this.state.pageToNavigate === 'ViewTemplate') {\r\n      console.log(this.state.Addtaskfooter, 'state');\r\n      return (\r\n        <div>\r\n          <ViewTemplateHeader\r\n            templatedetails={templateidname}\r\n            navigateback={this.handleback}\r\n          />{' '}\r\n          <div className=\"TurnManagement\">\r\n            <TemplateView\r\n              templatedetails={templateidname}\r\n              templateresponse={this.props.templateresponse}\r\n              task={this.childTaskDetails}\r\n              isFooterEnabled={this.state.Addtaskfooter}\r\n              dependency={this.props.taskinitialresponse}\r\n              AddtaskConst={() =>\r\n                this.setState({\r\n                  Addtaskfooter: true,\r\n                })\r\n              }\r\n              // departmentinitialresponse={this.props.departmentinitialresponse}\r\n              departmentresponse={this.props.departmentinitialresponse}\r\n              postcallofaddtask={this.state.postcallofaddtask}\r\n              addtaskcall={this.addtaskcall}\r\n            />{' '}\r\n            <div className=\"Manage\">\r\n              <span key={'view'}>\r\n                <Accordion menuList={Menu} />{' '}\r\n              </span>{' '}\r\n            </div>{' '}\r\n            {this.state.Addtaskfooter ? (\r\n              <SaveCancelButton\r\n                CancelButtonHandler={() =>\r\n                  this.setState({\r\n                    Addtaskfooter: false,\r\n                  })\r\n                }\r\n                DoneButtonHandler={() => {\r\n                  this.setState({\r\n                    postcallofaddtask: true,\r\n                  });\r\n                  // this.setState({ Addtaskfooter: false })\r\n                }}\r\n              />\r\n            ) : (\r\n              ''\r\n            )}{' '}\r\n          </div>{' '}\r\n        </div>\r\n      );\r\n    } else if (this.state.pageToNavigate === 'CreateTurntemplate') {\r\n      return (\r\n        <div>\r\n          <CreateTurnTemplateHeader navigateback={this.handleback} />{' '}\r\n          <div className=\"TurnManagement\">\r\n            <CreateTurnTemplate\r\n              departmentresponse={this.props.departmentinitialresponse}\r\n              stationscode={this.props.stationinitialresponse}\r\n              dependency={this.props.taskinitialresponse}\r\n              // templatedata={this.props.templateresponse}\r\n              Equipfleetcatagory={this.Equipfleetcatagory(\r\n                this.props.AircraftTypeList\r\n              )}\r\n              turntype={this.props.turntypeinitialresponse}\r\n              CancelButtonHandler={() =>\r\n                this.setState({\r\n                  pageToNavigate: 'turnTemplate',\r\n                })\r\n              }\r\n            />{' '}\r\n            <div className=\"Manage\">\r\n              <span key={'create'}>\r\n                <Accordion menuList={Menu} />{' '}\r\n              </span>{' '}\r\n            </div>{' '}\r\n          </div>{' '}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    console.log(this.props.templateresponse, 'templatetemplate');\r\n    console.log(\r\n      this.props.departmentinitialresponse,\r\n      'departmentinitialresponse'\r\n    );\r\n    console.log(\r\n      this.props.templateresponse,\r\n      this.state.currentTemplateID,\r\n      'templateresponsefli'\r\n    );\r\n\r\n    const val = this.props.templateresponse && this.props.templateresponse.data;\r\n    if (this.state.currentTemplateID && val) {\r\n      console.log(val, this.state.currentTemplateID, '-->currenttemplate');\r\n      val.forEach(template => {\r\n        if (template.id == this.state.currentTemplateID) {\r\n          this.childTaskDetails = template;\r\n        }\r\n      });\r\n    }\r\n    const sort = this.sort(val);\r\n    let templateidname = [];\r\n    if (typeof this.childTaskDetails === 'object' && this.childTaskDetails) {\r\n      templateidname.push(\r\n        this.childTaskDetails.turntemplateid,\r\n        this.childTaskDetails.turntemplatename\r\n      );\r\n    }\r\n\r\n    return <div> {this.pageToNavigate(templateidname, sort)} </div>;\r\n  }\r\n}\r\nexport const Menu = [\r\n  {\r\n    title: 'Manage Department',\r\n    data: ManageDepartment,\r\n  },\r\n  {\r\n    title: 'Manage TurnType',\r\n    data: ManageTurnType,\r\n  },\r\n  {\r\n    title: 'Manage Task',\r\n    data: ManageTask,\r\n  },\r\n];\r\nconst mapDispatchToProps = {\r\n  templateinitialdata: TemplateListActions.getTemplateData,\r\n  departmentinitialdata: ManageDepartmentActions.getDepartmentDetails,\r\n  TurnTypeInitialdata: ManageTurnTypeActions.getTurnTypeDetails,\r\n  taskinitialdata: ManageTaskActions.getTaskDetails,\r\n  stationinitialdata: StationActions.getStationDetails,\r\n  initialactypedata: AircraftTypeActions.getAircraftTypeDetails,\r\n  // getTemplate: templateActions.getFLT_Template,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  console.log(state,\"statefromtemplate\")\r\n  return {\r\n    templateresponse: state.TurnTemplateInitialDatareducer,\r\n    taskinitialresponse: state.Managetaskinitialdatareducer,\r\n    turntypeinitialresponse: state.Manageturntypeinitialdatareducer,\r\n    stationinitialresponse: state.Stationinitialdata,\r\n    departmentinitialresponse: state.Managedepartmentinitialdatareducer,\r\n    AircraftTypeList: state.Aircrafttypeinitialdata,\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FlightTurnManagement);\r\n","import React, { Component } from 'react';\r\n\r\nimport FlightTurnManagement from './Presentation/FlightTurnManagement';\r\n\r\nclass TurnManagement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    console.log(\r\n      'https://14.142.107.168/Spring/departmentdetails/department?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsicmVzb3VyY2Utc2VydmVyLXJlc3QtYXBpIl0sInVzZXJfbmFtZSI6IjEwMTQzMTEiLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU3NzY4OTQwOSwidXNlcklkIjoiMTAxNDMxMSIsImF1dGhvcml0aWVzIjpbIkVuZ2luZWVyIl0sImp0aSI6IjRiODg2YTM2LWY3NjItNDdjMS1hZTVlLWFjZDJiMGZiYTEwZCIsImNsaWVudF9pZCI6InNwcmluZy1zZWN1cml0eS1vYXV0aDItcmVhZC1jbGllbnQifQ.72iRr82d9C7EKLHasrc1YILzonVwb1YGt8IdrI-n3Qs'\r\n    );\r\n    console.log(\r\n      'https://14.142.107.168/Spring/taskdetails/task?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsicmVzb3VyY2Utc2VydmVyLXJlc3QtYXBpIl0sInVzZXJfbmFtZSI6IjEwMTQzMTEiLCJzY29wZSI6WyJyZWFkIl0sImV4cCI6MTU3NzY4OTQwOSwidXNlcklkIjoiMTAxNDMxMSIsImF1dGhvcml0aWVzIjpbIkVuZ2luZWVyIl0sImp0aSI6IjRiODg2YTM2LWY3NjItNDdjMS1hZTVlLWFjZDJiMGZiYTEwZCIsImNsaWVudF9pZCI6InNwcmluZy1zZWN1cml0eS1vYXV0aDItcmVhZC1jbGllbnQifQ.72iRr82d9C7EKLHasrc1YILzonVwb1YGt8IdrI-n3Qs'\r\n    );\r\n    // localStorage.setItem(\r\n    //   'token',\r\n    //   'token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsicmVzb3VyY2Utc2VydmVyLXJlc3QtYXBpIl0sInVzZXJfbmFtZSI6IlZlZGFtIiwic2NvcGUiOlsicmVhZCJdLCJleHAiOjE1Nzk1MTAzODQsInVzZXJJZCI6MTAxNDMxMSwiYXV0aG9yaXRpZXMiOlsiRW5naW5lZXIiXSwianRpIjoiMjdhODg2MGMtMjliYy00NDU4LWIyZDItNjBhYWVjZTlmYjdhIiwiY2xpZW50X2lkIjoic3ByaW5nLXNlY3VyaXR5LW9hdXRoMi1yZWFkLWNsaWVudCJ9.aHxnW-vAb53vqc6wkLwVImzh8S1wuq3bC6ZV08F0csg'\r\n    // );\r\n\r\n    return (\r\n      <div className='scrollbar'>\r\n      <div className=\"main\">\r\n       \r\n        <FlightTurnManagement />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TurnManagement;\r\n"],"sourceRoot":""}