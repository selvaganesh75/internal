{"version":3,"sources":["components/Atoms/Accordion/index.js","components/Atoms/tab-with-border/tab.js","components/Atoms/DropdownComponent/dropdown-multiple.js","components/Atoms/DropdownComponent/index.js","components/Atoms/tab/tab.js","components/Atoms/tab/index.js","components/Molecules/multi-tabs/index.js","components/Atoms/Accordion/accordionSingle.js","components/Page/EventConfiguration/Domain/selectSignal.js","components/Page/EventConfiguration/Domain/flight.js","components/Page/EventConfiguration/Domain/Pax.js","components/Page/EventConfiguration/Domain/Crew.js","components/Page/EventConfiguration/Domain/Engg.js","components/Page/EventConfiguration/Domain/Scheduling.js","components/Atoms/Toggler/index.js","components/Page/EventConfiguration/Domain/Subscription.js","components/Page/EventConfiguration/Domain/mapping.js","components/Page/EventConfiguration/Signal-list/index.js","components/Page/EventConfiguration/Criteria/index.js","components/Page/EventConfiguration/View-Instance/active-instance.js","components/Page/EventConfiguration/View-Instance/edit-instance.js","components/Atoms/popup/popupMax.js","components/Page/EventConfiguration/View-Instance/instances-list.js","components/Page/EventConfiguration/Add-Instance/addInstance.js","components/Page/EventConfiguration/index.js"],"names":["Accordion","state","callback","value","status","setState","props","onClick","headerComponent","header","className","contentComponent","Content","this","menuList","map","i","key","isSingleOpen","Math","random","sliderStatus","open","isOpen","title","content","data","React","Component","defaultProps","transitionStyle","TabsWithBorder","sizes","els","getSizes","prevProps","children","active","rootBounds","root","getBoundingClientRect","Object","keys","forEach","bounds","left","right","console","log","JSON","stringify","ref","el","Children","child","onChange","style","getUnderlineStyle","length","size","transition","Tab","label","activeTab","Tabs","onClickTabItem","tab","MultiTabs","tabData","Outer","index","val","childtab","innerTitle","_props","Panel","height","clearTimer","window","setTimeout","ReactDOM","findDOMNode","querySelector","scrollHeight","clearTimeout","activateTab","Data","isActive","innerStyle","role","aria-expanded","aria-hidden","bind","prev","panel","SelectSignal","signals","isEnterpriseSelectedSignal","selectedSignalName","generateList","service","get","environment","EnterpriceConfig","SignalDetails","enterpriseId","then","response","Array","isArray","createRef","currentSignalDomain","toLowerCase","signalDomain","signalName","selected","Flight","Criteria","isEditPage","CriteriaName","InteractionComponent","InteractionComponentData","eventType","count","currentType","mapData","Map","set","isPageShow","includes","isAttrSelected","isBESignalSelected","UI","entryData","domain","showEndDigit","text","slice","isopen","iaoSignalName","metadata","meta","scheduleKey","signalname","isUpdateForSignal","currentSignal","SignalHandler","namedSignal","position","data-tip","snoozesTimeValueMins","snoozesTimeIncrementValueMins","operator","signal","makeUpdateFromParent","color","padding","display","justifyContent","boxShadow","marginTop","marginBottom","borderRadius","flex","Pax","Crew","Engg","Scheduling","snoozeTime","IncrementValue","list","changeInput","e","input","target","test","createInteractionComponentData","changeOperator","item","dropdownDisable","toggleItem","InputElement","type","Toggler","togglerchange","prevState","onoffstatus","DataToggle","SubsciptionConfig","sampleSubscription","subscriptionDetails","subscriberGroup","subscriptionInfo","subscriptionStartDt","Date","subscriptionEndDt","subscriptionDeactivate","currentSelection","selectedSubscriber","visibleSubscription","isNewSubscription","subscriberName","subscriber","parse","push","changeHandler","condition","selectedDate","setHours","endDate","alertAction","openAlert","startDate","deactivate","subscriberList","AllSubscriptionList","name","date","dateFormat","MappingSignal","activeElement","timeout","mappingList","scrollingToPosition","node","current","scrollIntoView","behavior","block","inline","newObj","temp","path","currentListPath","toggleCreation","mapping","criteria","selectedSignal","currentAttribute","hasOwnProperty","contentData","customToggler","close","ComponentData","allSignal","selectedEnterpriseSignal","signalContent","mappingData","sourcemessage","mappings","properties","UpdateSignal","removeSelection","instanceData","ChooseTemplate","Button","closeEdit","mappingStatus","selectedIAOSignal","enterpriseCode","updateInstance","selectedData","entryCriteria","exitCriteria","reinitiateCriteria","schedulingCondition","subscription","templateProps","enterpriseSignal","enterpriseList","EnterpriseDetails","SubscriberDetails","actionCreator","eventConfiguration","getEvent_Template","connect","eventConfigReducer","updateState","tabList","saveCriteria","page","EventListViewDescription","businessEventTemplateId","businessEvent","eventDescription","influencers","businessTargetedDomains","ruleMapping","Creteria","Subscribers","subscribe","CorrelatdDomain","InfluencedEnterpriseEvents","influencer","DeterminantRules","width","ruleId","ruleConstruct","EventListView","currentView","handleEdit","cancelEdit","PopupMax","show","enterAnimate","leaveAnimate","heading","clickHandler","buttonText","EventList","currentToggler","selectedInstance","searchBoxValue","isCloneSelectEnterprisePopUpOpened","selectedClone","selectedCloneEnterprise","activeInstance","DraftsInstance","now","undefined","moment","format","toUpperCase","time","str","getInstance","instances","instance","selectInstance","businessEventId","tempData","eventTemplateData","cloneInstance","stopPropagation","searchHandler","updateClone","getEvent","draftInstance","EnterpriseList","chooseEnterprise","enterprise","Fragment","SearchBox","placeholder","filterBy","isEditIconShow","isDeleteIconShow","isCloneIconShow","cloneHandler","NoEvent","src","upArrow","actionCreators","addInstance","businesseventTemplateData","getBusinessEvent","businesseventConfiguration","getBusiness_Event_Template","businesseventConfigReducer","EventConfiguration","ActiveEventInstanceHeader","headerName","buttonName","navigateTo","Icon","GoPlus","AddInstanceHeader","AddInstance","GoListUnordered","currentPage","isEnterpriseListScreen","selectedEnterPrise","getSignalDetails","navigate","innerText","getEnterpriseList","getSubscriber","allSignals","ChooseEnterpriseList","useState","setSelectedEnterPrise","enterpriseName","enterpriseDescription","mapDispatchToProps","Enterprise_Config","getEnterpriseDetails","getSignalDetail","get_subscriber","EnterpriceReducer","EnterpriseSignal","SubscriberReducer"],"mappings":"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","file":"static/js/9.adc182fd.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../Accordion/Accordion.scss';\r\nimport { FaAngleDown, FaAngleUp } from 'react-icons/fa';\r\nimport Slide from '../slidedown';\r\n\r\nclass Accordion extends React.Component {\r\n  state = {};\r\n\r\n  callback = (value, status) => {\r\n    this.setState({});\r\n    this.props.onClick(value, status);\r\n  };\r\n\r\n  headerComponent = header => {\r\n    return (\r\n      <div className=\"heading\">\r\n        <label className=\"tab-label\">\r\n          {header}\r\n          <span>\r\n            {' '}\r\n            <span className=\"minus\">\r\n              <FaAngleUp />\r\n            </span>\r\n            <span className=\"add\">\r\n              <FaAngleDown />\r\n            </span>\r\n          </span>\r\n        </label>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  contentComponent = Content => {\r\n    return <div className=\"tab-content\">{Content}</div>;\r\n  };\r\n\r\n  render() {\r\n    return this.props.menuList.map((value, i) => (\r\n      <div\r\n        className=\"row\"\r\n        key={this.props.isSingleOpen ? Math.random() * i : i}\r\n      >\r\n        <div className=\"tabs\">\r\n          <div className=\"tab\">\r\n            <Slide\r\n              sliderStatus={status => this.callback(value, status)}\r\n              open={value.isOpen ? true : false}\r\n              header={this.headerComponent(value.title)}\r\n              content={this.contentComponent(<value.data />)}\r\n              {...this.props}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nAccordion.defaultProps = {\r\n  onClick: () => {},\r\n  isSingleOpen: false,\r\n};\r\n\r\nexport default Accordion;\r\n","import React from 'react';\n// import {findDOMNode} from 'react-dom';\n\nimport './tab.scss';\n\nconst transitionTime = 200;\nconst transitionStyle = `left ${transitionTime}ms, right ${transitionTime}ms`;\n\nclass TabsWithBorder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sizes: {},\n    };\n    this.els = {};\n  }\n  componentDidMount() {\n    this.getSizes();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      prevProps.children !== this.props.children &&\n      prevProps.active !== this.props.active\n    ) {\n      this.getSizes();\n    }\n  }\n\n  getSizes() {\n    const rootBounds = this.root.getBoundingClientRect();\n\n    const sizes = {};\n\n    Object.keys(this.els).forEach(key => {\n      const el = this.els[key];\n      const bounds = el.getBoundingClientRect();\n\n      const left = bounds.left - rootBounds.left;\n      const right = rootBounds.right - bounds.right;\n\n      sizes[key] = { left, right };\n    });\n\n    this.setState({ sizes });\n    return sizes;\n  }\n\n  render() {\n    console.log(JSON.stringify(this.state, null, 2));\n    return (\n      <div className=\"Tabs\" ref={el => (this.root = el)}>\n        {React.Children.map(this.props.children, (child, i) => {\n          let className = `Tabs__Tab `;\n          if (child.key === this.props.active) {\n            className = `${className} Tabs__Tab--active`;\n          }\n          return (\n            <div\n              className={className}\n              onClick={() => {\n                this.props.onChange(child.key);\n              }}\n              ref={el => (this.els[child.key] = el)}\n            >\n              {child}\n            </div>\n          );\n        })}\n        <div className=\"Tabs__Underline\" style={this.getUnderlineStyle()} />\n      </div>\n    );\n  }\n\n  getUnderlineStyle() {\n    if (\n      this.props.active == null ||\n      Object.keys(this.state.sizes).length === 0\n    ) {\n      return { left: '0', right: '100%' };\n    }\n\n    const size = this.state.sizes[this.props.active];\n\n    return {\n      left: `${size.left}px`,\n      right: `${size.right}px`,\n      transition: transitionStyle,\n    };\n  }\n}\n\nexport default TabsWithBorder;\n","import React, { Component } from 'react';\nimport { ReactComponent as ChevronUp } from '../../../assets/Icon/chevronup.svg';\nimport { ReactComponent as ChevronDown } from '../../../assets/Icon/chevrondown.svg';\nimport { TiTick } from 'react-icons/ti';\nimport './DropDown.scss';\n\nclass DropdownMultiple extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title,\n      timeOut: null,\n    };\n    this.close = this.close.bind(this);\n  }\n\n  componentDidUpdate() {\n    const { listOpen } = this.state;\n    setTimeout(() => {\n      if (listOpen) {\n        window.addEventListener('click', this.close);\n      } else {\n        window.removeEventListener('click', this.close);\n      }\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.close);\n  }\n\n  close(timeOut) {\n    this.setState({\n      listOpen: false,\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const count = nextProps.list.filter(function(a) {\n      return a.selected;\n    }).length;\n    if (count === 0) {\n      return { headerTitle: nextProps.title };\n    } else if (count === 1) {\n      return { headerTitle: `${count} ${nextProps.titleHelper}` };\n    } else if (count > 1) {\n      return { headerTitle: `${count} ${nextProps.titleHelper}s` };\n    }\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen,\n    }));\n  }\n\n  render() {\n    const { list, toggleItem } = this.props;\n    const { listOpen, headerTitle } = this.state;\n    return (\n      <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n          <div className=\"dd-header-title\">{headerTitle}</div>\n          <span>{listOpen ? <ChevronUp /> : <ChevronDown />}</span>\n        </div>\n        {listOpen && (\n          <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\n            {list.map(item => (\n              <li\n                className=\"dd-list-item\"\n                key={item.title}\n                onClick={() => toggleItem(item.id, item.key)}\n              >\n                {item.title} {item.selected && <TiTick />}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default DropdownMultiple;\n","import Dropdown from './dropdown';\r\nimport DropdownMultiple from './dropdown-multiple';\r\n\r\nexport { Dropdown, DropdownMultiple };\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './tab.scss';\n\nclass Tab extends Component {\n  static propTypes = {\n    activeTab: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired,\n  };\n\n  onClick = () => {\n    const { label, onClick } = this.props;\n    onClick(label);\n  };\n\n  render() {\n    const {\n      onClick,\n      props: { activeTab, label },\n    } = this;\n\n    let className = 'tab-list-item ' + this.props.className;\n\n    if (activeTab === label) {\n      className += ' tab-list-active';\n    }\n\n    return (\n      <li className={className} onClick={onClick}>\n        {label}\n      </li>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './tab.scss';\n\nimport Tab from './tab';\n\nclass Tabs extends Component {\n  static propTypes = {\n    children: PropTypes.instanceOf(Array).isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    console.log(this.props);\n    this.state = {\n      activeTab: this.props.children[0] && this.props.children[0].props.label,\n    };\n  }\n\n  onClickTabItem = tab => {\n    this.setState({ activeTab: tab });\n  };\n\n  render() {\n    const {\n      onClickTabItem,\n      props: { children },\n      state: { activeTab },\n    } = this;\n    console.log(this.props.children, 'children');\n    return (\n      <div className=\"tabs\">\n        <ul className=\"tab-list\">\n          {children.map(child => {\n            const { label, className } = child.props;\n\n            return (\n              <Tab\n                activeTab={activeTab}\n                key={label}\n                label={label}\n                onClick={onClickTabItem}\n                className={className}\n              />\n            );\n          })}\n        </ul>\n        <div>\n          {children.map(child => {\n            if (child.props.label !== activeTab) return undefined;\n            return child;\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\nimport Tabs from '../../Atoms/tab/index';\nimport TabsWithBorder from '../../Atoms/tab-with-border/tab';\n\nclass MultiTabs extends Component {\n  state = { tab: this.props.tabData };\n  render() {\n    return (\n      <Tabs>\n        {this.state.tab.map((Outer, index) => {\n          return (\n            <div\n              key={index}\n              label={Outer.label}\n              className={this.props.className}\n            >\n              <TabsWithBorder\n                active={Outer.active}\n                className={this.props.className}\n                onChange={active => {\n                  const data = [...this.state.tab];\n                  this.state.tab.forEach((val, index) => {\n                    if (val.label === Outer.label) {\n                      data[index].active = active;\n                    }\n                  });\n                  this.setState({ tab: data });\n                }}\n              >\n                {Outer.childtab.map(innerTitle => {\n                  return <div key={innerTitle}>{innerTitle}</div>;\n                })}\n              </TabsWithBorder>\n\n              {\n                <Outer.Component\n                  key={Math.random()}\n                  tabData={Outer}\n                  _props={this.props}\n                />\n              }\n            </div>\n          );\n        })}\n      </Tabs>\n    );\n  }\n}\nMultiTabs.defaultProps = {\n  className: '',\n  tabData: [],\n};\n\nexport default MultiTabs;\n","import './accordionSingle.scss';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nclass Panel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      height: 0,\n    };\n    this.clearTimer = 0;\n  }\n\n  componentDidMount() {\n    this.clearTimer = window.setTimeout(() => {\n      const el = this && ReactDOM.findDOMNode(this);\n      if (el && el.querySelector('.panel__inner')) {\n        const height = el.querySelector('.panel__inner').scrollHeight;\n        this.setState({\n          height,\n        });\n      }\n    }, 333);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.clearTimer);\n  }\n\n  render() {\n    const { title, data, activeTab, index, activateTab } = this.props;\n    const Data = data;\n\n    const { height } = this.state;\n    const isActive = activeTab === index;\n    const innerStyle = {\n      height: `${isActive ? height : 0}px`,\n    };\n\n    return (\n      <div className=\"panel\" role=\"tabpanel\" aria-expanded={isActive}>\n        <button className=\"panel__label\" role=\"tab\" onClick={activateTab}>\n          {title}\n        </button>\n        <div\n          className=\"panel__inner\"\n          style={innerStyle}\n          aria-hidden={!isActive}\n        >\n          <p className=\"panel__content\">{<Data />}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class AccordionSingle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: props.activateTab,\n    };\n\n    this.activateTab = this.activateTab.bind(this);\n  }\n\n  activateTab(index) {\n    this.setState(prev => ({\n      activeTab: prev.activeTab === index ? -1 : index,\n    }));\n  }\n\n  render() {\n    const { menuList } = this.props;\n    const { activeTab } = this.state;\n\n    return (\n      <div className=\"accordion\" role=\"tablist\">\n        {menuList.map((panel, index) => (\n          <Panel\n            key={index}\n            activeTab={activeTab}\n            index={index}\n            {...panel}\n            activateTab={this.activateTab.bind(null, index)}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nAccordionSingle.defaultProps = {\n  activateTab: 0,\n};\n","import React, { Component, createRef } from 'react';\r\nimport AccordionSingle from '../../../Atoms/Accordion/accordionSingle';\r\nimport { connect } from 'react-redux';\r\nimport service from '../../../../services/service';\r\nimport environment from '../../../..';\r\nimport Slide from '../../../Atoms/slidedown';\r\nimport Accordion from '../../../Atoms/Accordion';\r\nimport '../index.scss';\r\nimport { MdCheck } from 'react-icons/md';\r\n\r\nclass SelectSignal extends Component {\r\n  signals = [\r\n    <div\r\n      className=\"signal\"\r\n      onClick={() => {\r\n        this.props.callback({\r\n          ...this.props.data,\r\n          isEnterpriseSelectedSignal: true,\r\n          selectedSignalName: 'ON',\r\n        });\r\n      }}\r\n    >\r\n      {'ON'}\r\n    </div>,\r\n    <div\r\n      className=\"signal\"\r\n      onClick={() => {\r\n        this.props.callback({\r\n          ...this.props.data,\r\n          isEnterpriseSelectedSignal: true,\r\n\r\n          selectedSignalName: 'OFF',\r\n        });\r\n      }}\r\n    >\r\n      {'OFF'}\r\n    </div>,\r\n  ];\r\n  menuList = [];\r\n  componentDidMount() {\r\n    this.generateList();\r\n  }\r\n  generateList = () => {\r\n    service\r\n      .get(\r\n        environment.EnterpriceConfig.SignalDetails +\r\n          this.props.data.enterpriseId +\r\n          '/signal'\r\n      )\r\n      .then(response => {\r\n        console.log(response, this.props, 'respo data');\r\n        if (response && response.data && Array.isArray(response.data)) {\r\n          const activeElement = createRef();\r\n          const currentSignalDomain =\r\n            this.props.data.active && this.props.data.active.toLowerCase();\r\n          const isActive = (this.signals = response.data.map(val => {\r\n            if (val.signalDomain.toLowerCase() === currentSignalDomain) {\r\n              return (\r\n                <div\r\n                  className=\"signal\"\r\n                  onClick={() => {\r\n                    this.props.callback({\r\n                      ...this.props.data,\r\n                      isEnterpriseSelectedSignal: true,\r\n                      selectedSignalName: val.signalName,\r\n                    });\r\n                  }}\r\n                >\r\n                  {val.signalName}{' '}\r\n                  {val.selected && (<span><MdCheck/></span>)}\r\n                  \r\n                </div>\r\n              );\r\n            }\r\n            return null;\r\n          }));\r\n        }\r\n        this.menuList = [\r\n          {\r\n            title: this.props.data.enterpriseId,\r\n            isOpen: true,\r\n            data: () => this.signals,\r\n          },\r\n        ];\r\n\r\n        this.setState({});\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return <Accordion className=\"mapping-signal\" menuList={this.menuList} />;\r\n  }\r\n}\r\n\r\nexport default SelectSignal;\r\n","import React, { useState } from 'react';\r\nimport Accordion from '../../../Atoms/Accordion';\r\nimport SelectSignal from './selectSignal';\r\n\r\nconst Flight = props => {\r\n  const {\r\n    Criteria = [],\r\n    callback = () => {},\r\n    CriteriaName = '',\r\n    isEditPage,\r\n    InteractionComponent = () => null,\r\n    InteractionComponentData = '',\r\n    label = '',\r\n    eventType = '',\r\n    enterpriseId = '',\r\n  } = props;\r\n  let count = 0;\r\n  const currentType = eventType.toLowerCase();\r\n  const mapData = new Map();\r\n  mapData.set('transactional', ['scheduling', 'reinitiate']);\r\n  mapData.set('stateless', ['exitcriteria']);\r\n  mapData.set('temporal', []);\r\n  mapData.set('passthrough', ['exitcriteria']);\r\n  mapData.set('stateful', []);\r\n  const isPageShow =\r\n    mapData.get(currentType) && mapData.get(currentType).includes(label)\r\n      ? false\r\n      : true;\r\n\r\n  // checking whether attribute selected\r\n  let isAttrSelected = false;\r\n\r\n  //check whether business event signal selected\r\n  let isBESignalSelected = false;\r\n\r\n  //click handler for business event signal\r\n  const SignalHandler = (value, status) => {\r\n    const signalname = value.iaoSignalName;\r\n    if (status) {\r\n      isBESignalSelected = true;\r\n      isAttrSelected = false;\r\n      callback({\r\n        ...props,\r\n        isUpdateForSignal: true,\r\n        currentSignal: signalname,\r\n      });\r\n    }\r\n  };\r\n\r\n  //generate the UI for business event signal list and attr list\r\n  const UI = Criteria.map((entryData, index) => {\r\n    const domain = (entryData.domain && entryData.domain.toLowerCase()) || '';\r\n    if (entryData.isBESignalSelected) {\r\n      isBESignalSelected = true;\r\n    }\r\n    if (domain === 'flight' && isPageShow) {\r\n      count++;\r\n    }\r\n\r\n    const showEndDigit = (text = '') => {\r\n      if (isEditPage) {\r\n        if (text.length > 50) {\r\n          return `... ${text.slice(-50)}`;\r\n        }\r\n      } else {\r\n        if (text.length > 100) {\r\n          return `... ${text.slice(-100)}`;\r\n        }\r\n      }\r\n\r\n      return text;\r\n    };\r\n    let isopen = false;\r\n    if (label === 'Schedule') {\r\n      if (entryData.iaoSignalName) {\r\n        Object.keys(entryData.metadata).forEach(meta => {\r\n          if (meta === InteractionComponentData.scheduleKey) {\r\n            isopen = true;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (label !== 'Schedule') {\r\n      if (entryData.selected && entryData.selected.length) {\r\n        isAttrSelected = true;\r\n      }\r\n      if (isAttrSelected) {\r\n        isopen = true;\r\n      }\r\n    }\r\n    return (\r\n      domain === 'flight' && (\r\n        <div key={index}>\r\n          <div className=\"event-signals scroll\">\r\n            <Accordion\r\n              onClick={(value, status) => SignalHandler(entryData, status)}\r\n              menuList={[\r\n                {\r\n                  title: (\r\n                    <div>\r\n                      <div>{entryData.iaoSignalName}</div>\r\n                      {entryData.namedSignal && (\r\n                        <div className=\"selected-signal\">\r\n                          {isEditPage ? 'Selected' : 'Mapped Enterprise'}{' '}\r\n                          Signal: {entryData.namedSignal}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ),\r\n                  isOpen: isopen,\r\n                  data: () => (\r\n                    <div\r\n                      className={`signal-attribute `}\r\n                      style={{ position: 'relative' }}\r\n                    >\r\n                      {Object(entryData.metadata) === entryData.metadata &&\r\n                        Object.keys(entryData.metadata).map((meta, i) => {\r\n                          if (label === 'Schedule') {\r\n                            const active =\r\n                              (InteractionComponentData &&\r\n                                InteractionComponentData.scheduleKey) ||\r\n                              '';\r\n                            return (\r\n                              <div\r\n                                data-tip=\"React-tooltip\"\r\n                                key={i}\r\n                                onClick={() => {\r\n                                  let data = {\r\n                                    scheduleKey: '',\r\n                                    snoozesTimeValueMins: 0,\r\n                                    snoozesTimeIncrementValueMins: 0,\r\n                                    operator: 'ADD',\r\n                                  };\r\n                                  if (active) {\r\n                                    if (\r\n                                      meta ===\r\n                                      InteractionComponentData.scheduleKey\r\n                                    ) {\r\n                                      data = {\r\n                                        ...data,\r\n                                        ...InteractionComponentData,\r\n                                      };\r\n                                    }\r\n                                  }\r\n                                  data.scheduleKey = meta;\r\n                                  InteractionComponentData.scheduleKey = meta;\r\n\r\n                                  callback({\r\n                                    ...props,\r\n                                    InteractionComponentData: data,\r\n                                  });\r\n                                }}\r\n                                className={meta === active ? 'active' : ''}\r\n                              >\r\n                                <h3>{meta}</h3>\r\n\r\n                                <p>{showEndDigit(entryData.metadata[meta])}</p>\r\n                              </div>\r\n                            );\r\n                          } else\r\n                            return (\r\n                              <div\r\n                                data-tip=\"React-tooltip\"\r\n                                key={i}\r\n                                onClick={() => {\r\n                                  callback({\r\n                                    ...props,\r\n                                    domain,\r\n                                    signal: entryData.iaoSignalName,\r\n                                    meta,\r\n                                    makeUpdateFromParent: true,\r\n                                  });\r\n                                }}\r\n                                className={\r\n                                  entryData.selected &&\r\n                                  isEditPage &&\r\n                                  entryData.selected.includes(meta)\r\n                                    ? 'active'\r\n                                    : ''\r\n                                }\r\n                              >\r\n                                <h3>{meta}</h3>\r\n\r\n                                <p>{showEndDigit(entryData.metadata[meta])}</p>\r\n                              </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                  ),\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  });\r\n  if (count === 0) {\r\n    return (\r\n      <div\r\n        style={{\r\n          color: 'rgb(75, 80, 195)',\r\n\r\n          padding: '20px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          boxShadow: 'grey 3px 0px 10px -5px',\r\n          marginTop: '10px',\r\n          marginBottom: '6px',\r\n          borderRadius: '14px',\r\n          boxShadow: '0 0 4px 0px gray',\r\n        }}\r\n      >\r\n        Not configurable or no data available\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"scroll config\">\r\n      <div\r\n        className=\"update-event-config scroll\"\r\n        style={!isEditPage ? { flex: 1 } : {}}\r\n      >\r\n        {' '}\r\n        {UI}\r\n      </div>\r\n      {isEditPage && (\r\n        <div className=\"event-signal-value scroll\">\r\n          {label === 'Schedule' && (\r\n            <InteractionComponent callback={callback} data={props} />\r\n          )}\r\n          {label !== 'Schedule' && isAttrSelected && (\r\n            <InteractionComponent callback={callback} data={props} />\r\n          )}\r\n\r\n          {label !== 'Schedule' && isBESignalSelected && (\r\n            <SelectSignal callback={callback} data={props} />\r\n          )}\r\n        </div>\r\n      )}\r\n      {!isEditPage && label === 'Schedule' && (\r\n        <div className=\"event-signal-value\">\r\n          <InteractionComponent callback={callback} data={props} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Flight;\r\n","import React, { useState } from 'react';\r\nimport Accordion from '../../../Atoms/Accordion';\r\nimport SelectSignal from './selectSignal';\r\n\r\nconst Pax = props => {\r\n  const {\r\n    Criteria = [],\r\n    callback = () => {},\r\n    CriteriaName = '',\r\n    isEditPage,\r\n    InteractionComponent = () => null,\r\n    InteractionComponentData = '',\r\n    label = '',\r\n    eventType = '',\r\n    enterpriseId = '',\r\n  } = props;\r\n  let count = 0;\r\n  const currentType = eventType.toLowerCase();\r\n  const mapData = new Map();\r\n  mapData.set('transactional', ['scheduling', 'reinitiate']);\r\n  mapData.set('stateless', ['exitcriteria']);\r\n  mapData.set('temporal', []);\r\n  mapData.set('passthrough', ['exitcriteria']);\r\n  mapData.set('stateful', []);\r\n  const isPageShow =\r\n    mapData.get(currentType) && mapData.get(currentType).includes(label)\r\n      ? false\r\n      : true;\r\n\r\n  // checking whether attribute selected\r\n  let isAttrSelected = false;\r\n\r\n  //check whether business event signal selected\r\n  let isBESignalSelected = false;\r\n\r\n  //click handler for business event signal\r\n  const SignalHandler = (value, status) => {\r\n    const signalname = value.iaoSignalName;\r\n    if (status) {\r\n      isBESignalSelected = true;\r\n      isAttrSelected = false;\r\n      callback({\r\n        ...props,\r\n        isUpdateForSignal: true,\r\n        currentSignal: signalname,\r\n      });\r\n    }\r\n  };\r\n\r\n  //generate the UI for business event signal list and attr list\r\n  const UI = Criteria.map((entryData, index) => {\r\n    const domain = (entryData.domain && entryData.domain.toLowerCase()) || '';\r\n    if (entryData.isBESignalSelected) {\r\n      isBESignalSelected = true;\r\n    }\r\n    if (domain === 'pax' && isPageShow) {\r\n      count++;\r\n    }\r\n\r\n    const showEndDigit = (text = '') => {\r\n      if (isEditPage) {\r\n        if (text.length > 50) {\r\n          return `... ${text.slice(-50)}`;\r\n        }\r\n      } else {\r\n        if (text.length > 100) {\r\n          return `... ${text.slice(-100)}`;\r\n        }\r\n      }\r\n\r\n      return text;\r\n    };\r\n    let isopen = false;\r\n    if (label === 'Schedule') {\r\n      if (entryData.iaoSignalName) {\r\n        Object.keys(entryData.metadata).forEach(meta => {\r\n          if (meta === InteractionComponentData.scheduleKey) {\r\n            isopen = true;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (label !== 'Schedule') {\r\n      if (entryData.selected && entryData.selected.length) {\r\n        isAttrSelected = true;\r\n      }\r\n      if (isAttrSelected) {\r\n        isopen = true;\r\n      }\r\n    }\r\n    return (\r\n      domain === 'pax' && (\r\n        <div key={index}>\r\n          <div className=\"event-signals scroll\">\r\n            <Accordion\r\n              onClick={(value, status) => SignalHandler(entryData, status)}\r\n              menuList={[\r\n                {\r\n                  title: (\r\n                    <div>\r\n                      <div>{entryData.iaoSignalName}</div>\r\n                      {entryData.namedSignal && (\r\n                        <div className=\"selected-signal\">\r\n                          {isEditPage ? 'Selected' : 'Mapped Enterprise'}{' '}\r\n                          Signal: {entryData.namedSignal}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ),\r\n                  isOpen: isopen,\r\n                  data: () => (\r\n                    <div\r\n                      className={`signal-attribute `}\r\n                      style={{ position: 'relative' }}\r\n                    >\r\n                      {Object(entryData.metadata) === entryData.metadata &&\r\n                        Object.keys(entryData.metadata).map((meta, i) => {\r\n                          if (label === 'Schedule') {\r\n                            const active =\r\n                              (InteractionComponentData &&\r\n                                InteractionComponentData.scheduleKey) ||\r\n                              '';\r\n                            return (\r\n                              <div\r\n                                data-tip=\"React-tooltip\"\r\n                                key={i}\r\n                                onClick={() => {\r\n                                  let data = {\r\n                                    scheduleKey: '',\r\n                                    snoozesTimeValueMins: 0,\r\n                                    snoozesTimeIncrementValueMins: 0,\r\n                                    operator: 'ADD',\r\n                                  };\r\n                                  if (active) {\r\n                                    if (\r\n                                      meta ===\r\n                                      InteractionComponentData.scheduleKey\r\n                                    ) {\r\n                                      data = {\r\n                                        ...data,\r\n                                        ...InteractionComponentData,\r\n                                      };\r\n                                    }\r\n                                  }\r\n                                  data.scheduleKey = meta;\r\n                                  InteractionComponentData.scheduleKey = meta;\r\n\r\n                                  callback({\r\n                                    ...props,\r\n                                    InteractionComponentData: data,\r\n                                  });\r\n                                }}\r\n                                className={meta === active ? 'active' : ''}\r\n                              >\r\n                                <h3>{meta}</h3>\r\n\r\n                                <p>{showEndDigit(entryData.metadata[meta])}</p>\r\n                              </div>\r\n                            );\r\n                          } else\r\n                            return (\r\n                              <div\r\n                                data-tip=\"React-tooltip\"\r\n                                key={i}\r\n                                onClick={() => {\r\n                                  callback({\r\n                                    ...props,\r\n                                    domain,\r\n                                    signal: entryData.iaoSignalName,\r\n                                    meta,\r\n                                    makeUpdateFromParent: true,\r\n                                  });\r\n                                }}\r\n                                className={\r\n                                  entryData.selected &&\r\n                                  isEditPage &&\r\n                                  entryData.selected.includes(meta)\r\n                                    ? 'active'\r\n                                    : ''\r\n                                }\r\n                              >\r\n                                <h3>{meta}</h3>\r\n\r\n                                <p>{showEndDigit(entryData.metadata[meta])}</p>\r\n                              </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                  ),\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  });\r\n  if (count === 0) {\r\n    return (\r\n      <div\r\n        style={{\r\n          color: 'rgb(75, 80, 195)',\r\n\r\n          padding: '20px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          boxShadow: 'grey 3px 0px 10px -5px',\r\n          marginTop: '10px',\r\n          marginBottom: '6px',\r\n          borderRadius: '14px',\r\n          boxShadow: '0 0 4px 0px gray',\r\n        }}\r\n      >\r\n        Not configurable or no data available\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"scroll config\">\r\n      <div\r\n        className=\"update-event-config scroll\"\r\n        style={!isEditPage ? { flex: 1 } : {}}\r\n      >\r\n        {' '}\r\n        {UI}\r\n      </div>\r\n      {isEditPage && (\r\n        <div className=\"event-signal-value scroll\">\r\n          {label === 'Schedule' && (\r\n            <InteractionComponent callback={callback} data={props} />\r\n          )}\r\n          {label !== 'Schedule' && isAttrSelected && (\r\n            <InteractionComponent callback={callback} data={props} />\r\n          )}\r\n\r\n          {label !== 'Schedule' && isBESignalSelected && (\r\n            <SelectSignal callback={callback} data={props} />\r\n          )}\r\n        </div>\r\n      )}\r\n      {!isEditPage && label === 'Schedule' && (\r\n        <div className=\"event-signal-value\">\r\n          <InteractionComponent callback={callback} data={props} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pax;\r\n","import React, { useState } from 'react';\r\nimport Accordion from '../../../Atoms/Accordion';\r\nimport SelectSignal from './selectSignal';\r\n\r\nconst Crew = props => {\r\n  const {\r\n    Criteria = [],\r\n    callback = () => {},\r\n    CriteriaName = '',\r\n    isEditPage,\r\n    InteractionComponent = () => null,\r\n    InteractionComponentData = '',\r\n    label = '',\r\n    eventType = '',\r\n    enterpriseId = '',\r\n  } = props;\r\n  let count = 0;\r\n  const currentType = eventType.toLowerCase();\r\n  const mapData = new Map();\r\n  mapData.set('transactional', ['scheduling', 'reinitiate']);\r\n  mapData.set('stateless', ['exitcriteria']);\r\n  mapData.set('temporal', []);\r\n  mapData.set('passthrough', ['exitcriteria']);\r\n  mapData.set('stateful', []);\r\n  const isPageShow =\r\n    mapData.get(currentType) && mapData.get(currentType).includes(label)\r\n      ? false\r\n      : true;\r\n\r\n  // checking whether attribute selected\r\n  let isAttrSelected = false;\r\n\r\n  //check whether business event signal selected\r\n  let isBESignalSelected = false;\r\n\r\n  //click handler for business event signal\r\n  const SignalHandler = (value, status) => {\r\n    const signalname = value.iaoSignalName;\r\n    if (status) {\r\n      isBESignalSelected = true;\r\n      isAttrSelected = false;\r\n      callback({\r\n        ...props,\r\n        isUpdateForSignal: true,\r\n        currentSignal: signalname,\r\n      });\r\n    }\r\n  };\r\n\r\n  //generate the UI for business event signal list and attr list\r\n  const UI = Criteria.map((entryData, index) => {\r\n    const domain = (entryData.domain && entryData.domain.toLowerCase()) || '';\r\n    if (entryData.isBESignalSelected) {\r\n      isBESignalSelected = true;\r\n    }\r\n    if (domain === 'crew' && isPageShow) {\r\n      count++;\r\n    }\r\n\r\n    const showEndDigit = (text = '') => {\r\n      if (isEditPage) {\r\n        if (text.length > 50) {\r\n          return `... ${text.slice(-50)}`;\r\n        }\r\n      } else {\r\n        if (text.length > 100) {\r\n          return `... ${text.slice(-100)}`;\r\n        }\r\n      }\r\n\r\n      return text;\r\n    };\r\n    let isopen = false;\r\n    if (label === 'Schedule') {\r\n      if (entryData.iaoSignalName) {\r\n        Object.keys(entryData.metadata).forEach(meta => {\r\n          if (meta === InteractionComponentData.scheduleKey) {\r\n            isopen = true;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (label !== 'Schedule') {\r\n      if (entryData.selected && entryData.selected.length) {\r\n        isAttrSelected = true;\r\n      }\r\n      if (isAttrSelected) {\r\n        isopen = true;\r\n      }\r\n    }\r\n    return (\r\n      domain === 'crew' && (\r\n        <div key={index}>\r\n          <div className=\"event-signals scroll\">\r\n            <Accordion\r\n              onClick={(value, status) => SignalHandler(entryData, status)}\r\n              menuList={[\r\n                {\r\n                  title: (\r\n                    <div>\r\n                      <div>{entryData.iaoSignalName}</div>\r\n                      {entryData.namedSignal && (\r\n                        <div className=\"selected-signal\">\r\n                          {isEditPage ? 'Selected' : 'Mapped Enterprise'}{' '}\r\n                          Signal: {entryData.namedSignal}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ),\r\n                  isOpen: isopen,\r\n                  data: () => (\r\n                    <div\r\n                      className={`signal-attribute `}\r\n                      style={{ position: 'relative' }}\r\n                    >\r\n                      {Object(entryData.metadata) === entryData.metadata &&\r\n                        Object.keys(entryData.metadata).map((meta, i) => {\r\n                          if (label === 'Schedule') {\r\n                            const active =\r\n                              (InteractionComponentData &&\r\n                                InteractionComponentData.scheduleKey) ||\r\n                              '';\r\n                            return (\r\n                              <div\r\n                                data-tip=\"React-tooltip\"\r\n                                key={i}\r\n                                onClick={() => {\r\n                                  let data = {\r\n                                    scheduleKey: '',\r\n                                    snoozesTimeValueMins: 0,\r\n                                    snoozesTimeIncrementValueMins: 0,\r\n                                    operator: 'ADD',\r\n                                  };\r\n                                  if (active) {\r\n                                    if (\r\n                                      meta ===\r\n                                      InteractionComponentData.scheduleKey\r\n                                    ) {\r\n                                      data = {\r\n                                        ...data,\r\n                                        ...InteractionComponentData,\r\n                                      };\r\n                                    }\r\n                                  }\r\n                                  data.scheduleKey = meta;\r\n                                  InteractionComponentData.scheduleKey = meta;\r\n\r\n                                  callback({\r\n                                    ...props,\r\n                                    InteractionComponentData: data,\r\n                                  });\r\n                                }}\r\n                                className={meta === active ? 'active' : ''}\r\n                              >\r\n                                <h3>{meta}</h3>\r\n\r\n                                <p>{showEndDigit(entryData.metadata[meta])}</p>\r\n                              </div>\r\n                            );\r\n                          } else\r\n                            return (\r\n                              <div\r\n                                data-tip=\"React-tooltip\"\r\n                                key={i}\r\n                                onClick={() => {\r\n                                  callback({\r\n                                    ...props,\r\n                                    domain,\r\n                                    signal: entryData.iaoSignalName,\r\n                                    meta,\r\n                                    makeUpdateFromParent: true,\r\n                                  });\r\n                                }}\r\n                                className={\r\n                                  entryData.selected &&\r\n                                  isEditPage &&\r\n                                  entryData.selected.includes(meta)\r\n                                    ? 'active'\r\n                                    : ''\r\n                                }\r\n                              >\r\n                                <h3>{meta}</h3>\r\n\r\n                                <p>{showEndDigit(entryData.metadata[meta])}</p>\r\n                              </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                  ),\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  });\r\n  if (count === 0) {\r\n    return (\r\n      <div\r\n        style={{\r\n          color: 'rgb(75, 80, 195)',\r\n\r\n          padding: '20px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          boxShadow: 'grey 3px 0px 10px -5px',\r\n          marginTop: '10px',\r\n          marginBottom: '6px',\r\n          borderRadius: '14px',\r\n          boxShadow: '0 0 4px 0px gray',\r\n        }}\r\n      >\r\n        Not configurable or no data available\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"scroll config\">\r\n      <div\r\n        className=\"update-event-config scroll\"\r\n        style={!isEditPage ? { flex: 1 } : {}}\r\n      >\r\n        {' '}\r\n        {UI}\r\n      </div>\r\n      {isEditPage && (\r\n        <div className=\"event-signal-value scroll\">\r\n          {label === 'Schedule' && (\r\n            <InteractionComponent callback={callback} data={props} />\r\n          )}\r\n          {label !== 'Schedule' && isAttrSelected && (\r\n            <InteractionComponent callback={callback} data={props} />\r\n          )}\r\n\r\n          {label !== 'Schedule' && isBESignalSelected && (\r\n            <SelectSignal callback={callback} data={props} />\r\n          )}\r\n        </div>\r\n      )}\r\n      {!isEditPage && label === 'Schedule' && (\r\n        <div className=\"event-signal-value\">\r\n          <InteractionComponent callback={callback} data={props} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Crew;\r\n","import React, { useState } from 'react';\r\nimport Accordion from '../../../Atoms/Accordion';\r\nimport SelectSignal from './selectSignal';\r\n\r\nconst Engg = props => {\r\n  const {\r\n    Criteria = [],\r\n    callback = () => {},\r\n    CriteriaName = '',\r\n    isEditPage,\r\n    InteractionComponent = () => null,\r\n    InteractionComponentData = '',\r\n    label = '',\r\n    eventType = '',\r\n    enterpriseId = '',\r\n  } = props;\r\n  let count = 0;\r\n  const currentType = eventType.toLowerCase();\r\n  const mapData = new Map();\r\n  mapData.set('transactional', ['scheduling', 'reinitiate']);\r\n  mapData.set('stateless', ['exitcriteria']);\r\n  mapData.set('temporal', []);\r\n  mapData.set('passthrough', ['exitcriteria']);\r\n  mapData.set('stateful', []);\r\n  const isPageShow =\r\n    mapData.get(currentType) && mapData.get(currentType).includes(label)\r\n      ? false\r\n      : true;\r\n\r\n  // checking whether attribute selected\r\n  let isAttrSelected = false;\r\n\r\n  //check whether business event signal selected\r\n  let isBESignalSelected = false;\r\n\r\n  //click handler for business event signal\r\n  const SignalHandler = (value, status) => {\r\n    const signalname = value.iaoSignalName;\r\n    if (status) {\r\n      isBESignalSelected = true;\r\n      isAttrSelected = false;\r\n      callback({\r\n        ...props,\r\n        isUpdateForSignal: true,\r\n        currentSignal: signalname,\r\n      });\r\n    }\r\n  };\r\n\r\n  //generate the UI for business event signal list and attr list\r\n  const UI = Criteria.map((entryData, index) => {\r\n    const domain = (entryData.domain && entryData.domain.toLowerCase()) || '';\r\n    if (entryData.isBESignalSelected) {\r\n      isBESignalSelected = true;\r\n    }\r\n    if (domain === 'engg' && isPageShow) {\r\n      count++;\r\n    }\r\n\r\n    const showEndDigit = (text = '') => {\r\n      if (isEditPage) {\r\n        if (text.length > 50) {\r\n          return `... ${text.slice(-50)}`;\r\n        }\r\n      } else {\r\n        if (text.length > 100) {\r\n          return `... ${text.slice(-100)}`;\r\n        }\r\n      }\r\n\r\n      return text;\r\n    };\r\n    let isopen = false;\r\n    if (label === 'Schedule') {\r\n      if (entryData.iaoSignalName) {\r\n        Object.keys(entryData.metadata).forEach(meta => {\r\n          if (meta === InteractionComponentData.scheduleKey) {\r\n            isopen = true;\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if (label !== 'Schedule') {\r\n      if (entryData.selected && entryData.selected.length) {\r\n        isAttrSelected = true;\r\n      }\r\n      if (isAttrSelected) {\r\n        isopen = true;\r\n      }\r\n    }\r\n    return (\r\n      domain === 'engg' && (\r\n        <div key={index}>\r\n          <div className=\"event-signals scroll\">\r\n            <Accordion\r\n              onClick={(value, status) => SignalHandler(entryData, status)}\r\n              menuList={[\r\n                {\r\n                  title: (\r\n                    <div>\r\n                      <div>{entryData.iaoSignalName}</div>\r\n                      {entryData.namedSignal && (\r\n                        <div className=\"selected-signal\">\r\n                          {isEditPage ? 'Selected' : 'Mapped Enterprise'}{' '}\r\n                          Signal: {entryData.namedSignal}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ),\r\n                  isOpen: isopen,\r\n                  data: () => (\r\n                    <div\r\n                      className={`signal-attribute `}\r\n                      style={{ position: 'relative' }}\r\n                    >\r\n                      {Object(entryData.metadata) === entryData.metadata &&\r\n                        Object.keys(entryData.metadata).map((meta, i) => {\r\n                          if (label === 'Schedule') {\r\n                            const active =\r\n                              (InteractionComponentData &&\r\n                                InteractionComponentData.scheduleKey) ||\r\n                              '';\r\n                            return (\r\n                              <div\r\n                                data-tip=\"React-tooltip\"\r\n                                key={i}\r\n                                onClick={() => {\r\n                                  let data = {\r\n                                    scheduleKey: '',\r\n                                    snoozesTimeValueMins: 0,\r\n                                    snoozesTimeIncrementValueMins: 0,\r\n                                    operator: 'ADD',\r\n                                  };\r\n                                  if (active) {\r\n                                    if (\r\n                                      meta ===\r\n                                      InteractionComponentData.scheduleKey\r\n                                    ) {\r\n                                      data = {\r\n                                        ...data,\r\n                                        ...InteractionComponentData,\r\n                                      };\r\n                                    }\r\n                                  }\r\n                                  data.scheduleKey = meta;\r\n                                  InteractionComponentData.scheduleKey = meta;\r\n\r\n                                  callback({\r\n                                    ...props,\r\n                                    InteractionComponentData: data,\r\n                                  });\r\n                                }}\r\n                                className={meta === active ? 'active' : ''}\r\n                              >\r\n                                <h3>{meta}</h3>\r\n\r\n                                <p>{showEndDigit(entryData.metadata[meta])}</p>\r\n                              </div>\r\n                            );\r\n                          } else\r\n                            return (\r\n                              <div\r\n                                data-tip=\"React-tooltip\"\r\n                                key={i}\r\n                                onClick={() => {\r\n                                  callback({\r\n                                    ...props,\r\n                                    domain,\r\n                                    signal: entryData.iaoSignalName,\r\n                                    meta,\r\n                                    makeUpdateFromParent: true,\r\n                                  });\r\n                                }}\r\n                                className={\r\n                                  entryData.selected &&\r\n                                  isEditPage &&\r\n                                  entryData.selected.includes(meta)\r\n                                    ? 'active'\r\n                                    : ''\r\n                                }\r\n                              >\r\n                                <h3>{meta}</h3>\r\n\r\n                                <p>{showEndDigit(entryData.metadata[meta])}</p>\r\n                              </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                  ),\r\n                },\r\n              ]}\r\n            />\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  });\r\n  if (count === 0) {\r\n    return (\r\n      <div\r\n        style={{\r\n          color: 'rgb(75, 80, 195)',\r\n\r\n          padding: '20px',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          boxShadow: 'grey 3px 0px 10px -5px',\r\n          marginTop: '10px',\r\n          marginBottom: '6px',\r\n          borderRadius: '14px',\r\n          boxShadow: '0 0 4px 0px gray',\r\n        }}\r\n      >\r\n        Not configurable or no data available\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"scroll config\">\r\n      <div\r\n        className=\"update-event-config scroll\"\r\n        style={!isEditPage ? { flex: 1 } : {}}\r\n      >\r\n        {' '}\r\n        {UI}\r\n      </div>\r\n      {isEditPage && (\r\n        <div className=\"event-signal-value scroll\">\r\n          {label === 'Schedule' && (\r\n            <InteractionComponent callback={callback} data={props} />\r\n          )}\r\n          {label !== 'Schedule' && isAttrSelected && (\r\n            <InteractionComponent callback={callback} data={props} />\r\n          )}\r\n\r\n          {label !== 'Schedule' && isBESignalSelected && (\r\n            <SelectSignal callback={callback} data={props} />\r\n          )}\r\n        </div>\r\n      )}\r\n      {!isEditPage && label === 'Schedule' && (\r\n        <div className=\"event-signal-value\">\r\n          <InteractionComponent callback={callback} data={props} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Engg;\r\n","import React, { Component } from 'react';\nimport { Dropdown } from '../../../Atoms/DropdownComponent/index';\nimport InputElement from '../../../Atoms/InputElement';\nclass Scheduling extends Component {\n  state = {\n    snoozeTime:\n      this.props.data.InteractionComponentData.snoozesTimeValueMins || 0,\n    IncrementValue:\n      this.props.data.InteractionComponentData.snoozesTimeIncrementValueMins ||\n      0,\n    list: [\n      { title: 'ADD', selected: true },\n      { title: 'SUBTRACT', selected: false },\n    ],\n    title: this.props.data.InteractionComponentData.operator,\n    data: this.props.data.InteractionComponentData,\n  };\n\n  changeInput = (e, val) => {\n    if (!this.props.data.isEditPage) {\n      return;\n    }\n    const input = e.target.value;\n    if (/^\\d*$/.test(input))\n      this.setState({ [val]: input }, () => {\n        this.props.callback({\n          ...this.props.data,\n          ...this.createInteractionComponentData(),\n        });\n      });\n  };\n\n  createInteractionComponentData = () => {\n    let operator = '';\n    this.state.list.forEach(val => {\n      if (val.selected) {\n        operator = val.title;\n      }\n    });\n    const InteractionComponentData = this.props.data.InteractionComponentData;\n    InteractionComponentData.snoozesTimeValueMins = this.state.snoozeTime;\n    InteractionComponentData.snoozesTimeIncrementValueMins = this.state.IncrementValue;\n\n    InteractionComponentData.operator = operator;\n    return InteractionComponentData;\n  };\n\n  changeOperator = item => {\n    if (!this.props.data.isEditPage) {\n      return;\n    }\n    const { list } = this.state;\n    list.forEach(val => {\n      val.selected = false;\n      if (val.title === item.title) {\n        val = item;\n        val.selected = true;\n      }\n    });\n    this.setState({ list }, () => {\n      this.props.callback({\n        ...this.props.data,\n        ...this.createInteractionComponentData(),\n      });\n    });\n  };\n\n  render() {\n    if (!Object.keys(this.props.data.InteractionComponentData).length)\n      return null;\n    return (\n      <div className=\"Scheduling\">\n        <div className=\"scheduling-condition\">\n          <div className=\"condition\">Condition </div>\n          <div className=\"Operator\">\n            <div className=\"Operator-title\">Operator</div>\n\n            <Dropdown\n              dropdownDisable={this.props.data.isEditPage ? false : true}\n              title={this.props.data.InteractionComponentData.operator}\n              list={this.state.list}\n              toggleItem={this.changeOperator}\n            />\n          </div>\n          <div className=\"schedule-time\">\n            <div className=\"snooze\">\n              <div className=\"snooze-title\">Snooze time</div>\n              <div className=\"scheduletimeinput\">\n                <InputElement\n                  value={this.state.snoozeTime}\n                  type={'text'}\n                  onChange={e => this.changeInput(e, 'snoozeTime')}\n                />\n                <span className=\"minute\">Min</span>\n              </div>\n            </div>\n            <div className=\"incremental\">\n              <div className=\"incremental-title\">Incremental Value</div>\n              <div className=\"scheduletimeinput\">\n                <InputElement\n                  value={this.state.IncrementValue}\n                  type={'text'}\n                  onChange={e => this.changeInput(e, 'IncrementValue')}\n                />\n                <span className=\"minute\">Min</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Scheduling;\n","import React from 'react';\nimport './Toggler.scss';\n\nexport default class Toggler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.value,\n    };\n  }\n\n  togglerchange = value => {\n    this.setState(\n      prevState => {\n        return { value };\n      },\n      () => {\n        if (\n          this.props.onoffstatus &&\n          typeof this.props.onoffstatus == 'function'\n        ) {\n          this.props.onoffstatus(this.state.value);\n        }\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className={'Toggle ' + this.props.DataToggle}>\n        <div\n          className={\n            this.props.value === this.props.content[0]\n              ? 'Toggler togglerchange'\n              : 'Toggler'\n          }\n          onClick={() => this.togglerchange(this.props.content[0])}\n        >\n          {this.props.content[0]}\n        </div>\n        <div\n          className={\n            this.props.value === this.props.content[1]\n              ? 'Toggler togglerchange'\n              : 'Toggler'\n          }\n          onClick={() => this.togglerchange(this.props.content[1])}\n        >\n          {this.props.content[1]}\n        </div>\n      </div>\n    );\n  }\n}\n\nToggler.defaultProps = {\n  content: ['YES', 'NO'],\n};\n","import React, { Component } from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport Toggler from '../../../Atoms/Toggler';\r\nimport { alertAction } from '../../../../Store/commonActivity/alert/alert.action';\r\nimport { GoCalendar } from 'react-icons/go';\r\n\r\nclass SubsciptionConfig extends Component {\r\n  sampleSubscription = {\r\n    subscriptionDetails: {\r\n      subscriberGroup: '',\r\n      subscriptionInfo: {\r\n        subscriptionStartDt: new Date(),\r\n        subscriptionEndDt: new Date(),\r\n        subscriptionDeactivate: '',\r\n      },\r\n    },\r\n  };\r\n  currentSelection = {};\r\n  state = {\r\n    selectedSubscriber: {},\r\n    InteractionComponentData: this.props.InteractionComponentData,\r\n  };\r\n  visibleSubscription = currentSelection => {\r\n    let InteractionComponentData = this.state.InteractionComponentData || [];\r\n    let isNewSubscription = true;\r\n    InteractionComponentData.forEach(val => {\r\n      if (\r\n        val.subscriptionDetails.subscriberGroup ===\r\n        currentSelection.subscriberName\r\n      ) {\r\n        isNewSubscription = false;\r\n        this.currentSelection = val;\r\n      }\r\n    });\r\n\r\n    const subscriber = JSON.parse(JSON.stringify(this.sampleSubscription));\r\n    if (isNewSubscription) {\r\n      subscriber.subscriptionDetails.subscriberGroup =\r\n        currentSelection.subscriberName;\r\n      InteractionComponentData.push(subscriber);\r\n      this.currentSelection = subscriber;\r\n    }\r\n    this.setState({\r\n      selectedSubscriber: currentSelection,\r\n      InteractionComponentData,\r\n    });\r\n  };\r\n\r\n  changeHandler = (value, condition) => {\r\n    if (!this.props.isEditPage) {\r\n      return;\r\n    }\r\n    const currentSelection = this.currentSelection;\r\n    if (condition === 'toggle') {\r\n      if (\r\n        currentSelection &&\r\n        currentSelection.subscriptionDetails &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo\r\n          .subscriptionDeactivate\r\n      ) {\r\n        currentSelection['subscriptionDetails']['subscriptionInfo'][\r\n          'subscriptionDeactivate'\r\n        ] = value === 'ON' ? 'Y' : 'N';\r\n      }\r\n    }\r\n\r\n    if (condition === 'startdate') {\r\n      const selectedDate = new Date(value).setHours(0, 0, 0, 0);\r\n      if (\r\n        currentSelection &&\r\n        currentSelection.subscriptionDetails &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo.subscriptionEndDt\r\n      ) {\r\n        const endDate = new Date(\r\n          currentSelection.subscriptionDetails.subscriptionInfo.subscriptionEndDt\r\n        );\r\n        endDate.setHours(0, 0, 0, 0);\r\n        console.log(selectedDate, endDate, 'checkdate');\r\n        if (selectedDate > endDate) {\r\n          alertAction.openAlert({\r\n            title: 'warning',\r\n            text: 'start date must be lesser than end date',\r\n          });\r\n        } else {\r\n          currentSelection['subscriptionDetails']['subscriptionInfo'][\r\n            'subscriptionStartDt'\r\n          ] = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (condition === 'enddate') {\r\n      if (\r\n        currentSelection &&\r\n        currentSelection.subscriptionDetails &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo\r\n          .subscriptionStartDt\r\n      ) {\r\n        const startDate = new Date(\r\n          currentSelection.subscriptionDetails.subscriptionInfo.subscriptionStartDt\r\n        );\r\n        startDate.setHours(0, 0, 0, 0);\r\n        if (value < startDate) {\r\n          alertAction.openAlert({\r\n            title: 'warning',\r\n            text: 'end date must be greater than start date',\r\n          });\r\n        } else {\r\n          currentSelection['subscriptionDetails']['subscriptionInfo'][\r\n            'subscriptionEndDt'\r\n          ] = value;\r\n        }\r\n      }\r\n    }\r\n\r\n    const InteractionComponentData = this.state.InteractionComponentData.map(\r\n      val => {\r\n        console.log(\r\n          val.subscriptionDetails,\r\n          currentSelection.subscriptionDetails,\r\n          'checkSubsc'\r\n        );\r\n        if (\r\n          val.subscriptionDetails.subscriberGroup ===\r\n          currentSelection.subscriptionDetails.subscriberGroup\r\n        ) {\r\n          return currentSelection;\r\n        }\r\n        return val;\r\n      }\r\n    );\r\n    console.log(InteractionComponentData, 'intcompdatass');\r\n    this.setState({}, () => {\r\n      this.props.callback &&\r\n        this.props.callback({ ...this.props, InteractionComponentData });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { Criteria = [] } = this.props;\r\n    const currentSelection = this.currentSelection;\r\n    const startDate =\r\n      (currentSelection &&\r\n        currentSelection.subscriptionDetails &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo\r\n          .subscriptionStartDt) ||\r\n      new Date();\r\n    const endDate =\r\n      (currentSelection &&\r\n        currentSelection.subscriptionDetails &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo\r\n          .subscriptionEndDt) ||\r\n      new Date();\r\n\r\n    const deactivate =\r\n      (currentSelection &&\r\n        currentSelection.subscriptionDetails &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo &&\r\n        currentSelection.subscriptionDetails.subscriptionInfo\r\n          .subscriptionDeactivate) ||\r\n      '';\r\n\r\n    const subscriberList = Array.isArray(this.props.AllSubscriptionList)\r\n      ? this.props.AllSubscriptionList\r\n      : [];\r\n\r\n    return (\r\n      <>\r\n        <div className=\"subscription-config\">\r\n          <div className={`subscription-list `}>\r\n            {subscriberList.map(val => {\r\n              const name = (val && val.subscriberName) || '';\r\n              return (\r\n                <div\r\n                  className={`subscription-group ${\r\n                    this.state.selectedSubscriber.subscriberName ===\r\n                    val.subscriberName\r\n                      ? 'activeInstance'\r\n                      : ''\r\n                  }`}\r\n                  onClick={() => this.visibleSubscription(val)}\r\n                >\r\n                  {name}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n\r\n          <div className=\"subscription-period-container\">\r\n            {this.state.selectedSubscriber.subscriberName && (\r\n              <>\r\n                <div className=\"Subscription-period\">Subscription period</div>\r\n                <div className=\"start\">\r\n                  <div className=\"title\">Start Date</div>\r\n                  <div className=\"date-picker-parent\">\r\n                    <DatePicker\r\n                      selected={new Date(startDate)}\r\n                      onChange={date => {\r\n                        this.changeHandler(date, 'startdate');\r\n                      }}\r\n                      dateFormat=\"dd MMM yyyy\"\r\n                      className=\"date-picker\"\r\n                    />\r\n                    <div className=\"calendar-icon\">\r\n                      <GoCalendar />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"end\">\r\n                  <div className=\"title\">Start Date</div>\r\n                  <div className=\"date-picker-parent\">\r\n                    <DatePicker\r\n                      selected={new Date(endDate)}\r\n                      onChange={date => {\r\n                        this.changeHandler(date, 'enddate');\r\n                      }}\r\n                      dateFormat=\"dd MMM yyyy\"\r\n                      className=\"date-picker\"\r\n                    />\r\n                    <div className=\"calendar-icon\">\r\n                      <GoCalendar />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"enable-subscription\">\r\n                  <div className=\"title\">Subscription enabled</div>\r\n                  <div className=\"toggle-subscription\">\r\n                    <Toggler\r\n                      value={deactivate == 'N' ? 'OFF' : 'ON'}\r\n                      onoffstatus={value => {\r\n                        this.changeHandler(value, 'toggle');\r\n                      }}\r\n                      content={['ON', 'OFF']}\r\n                      className=\"toggle-button\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubsciptionConfig;\r\n","import React, { Component, createRef } from 'react';\r\nimport Slide from '../../../Atoms/slidedown';\r\nimport './mapping.scss';\r\nimport { FaChevronUp, FaChevronDown } from 'react-icons/fa';\r\nimport { MdCheck } from 'react-icons/md';\r\n\r\nclass MappingSignal extends Component {\r\n  state = {};\r\n  activeElement = createRef();\r\n  timeout = 0;\r\n  mappingList = {};\r\n  componentDidMount() {\r\n    this.scrollingToPosition();\r\n  }\r\n\r\n  scrollingToPosition = () => {\r\n    const node = this.activeElement.current;\r\n    if (node) {\r\n      this.timeout = setTimeout(() => {\r\n        node.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'center',\r\n          inline: 'center',\r\n        });\r\n      }, 900);\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollingToPosition();\r\n  }\r\n\r\n  generateList = (data, newObj) => {\r\n    if (typeof data === 'object')\r\n      Object.keys(data).forEach(val => {\r\n        if (typeof data[val] === 'object') {\r\n          if (data[val]['properties']) {\r\n            const temp = JSON.parse(JSON.stringify(data[val]['properties']));\r\n            newObj[val] = temp;\r\n            const path = data.currentListPath\r\n              ? data.currentListPath + '.' + val\r\n              : val;\r\n            newObj[val].currentListPath = path;\r\n            this.generateList(temp, newObj[val]);\r\n          } else if (typeof data === 'object' && data[val]) {\r\n            newObj[val] = data[val];\r\n            const path = data.currentListPath\r\n              ? data.currentListPath + '.' + val\r\n              : val;\r\n            newObj[val].currentListPath = path;\r\n            this.generateList(data[val], newObj[val]);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  toggleCreation = mapping => {\r\n    const criteria = this.props.data.Criteria[0];\r\n    const selectedSignal = criteria['selected'][0];\r\n    const currentAttribute = criteria.metadata[selectedSignal];\r\n    if (typeof mapping === 'object') {\r\n      return Object.keys(mapping).map((data, i) => {\r\n        if (typeof mapping[data] === 'object' && mapping.hasOwnProperty(data)) {\r\n          const contentData = this.toggleCreation(\r\n            JSON.parse(JSON.stringify(mapping[data]))\r\n          );\r\n\r\n          const path = mapping.currentListPath\r\n            ? mapping.currentListPath + '.' + data\r\n            : data;\r\n          // if data not available then this is last child\r\n          if (!contentData[0]) {\r\n            // return null;\r\n            const isActive = currentAttribute === path ? true : false;\r\n            return (\r\n              <div\r\n                key={i}\r\n                className={`last-child-mapper`}\r\n                onClick={e => {\r\n                  criteria.metadata[selectedSignal] = path;\r\n\r\n                  if (this.props.callback) {\r\n                    this.props.callback(this.props.data);\r\n                  }\r\n                }}\r\n              >\r\n                <div>\r\n                  {data}\r\n                  {isActive && (\r\n                    <div ref={this.activeElement} className=\"mapping-tick\">\r\n                      <MdCheck />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n          const isopen = currentAttribute.includes(path) ? true : false;\r\n          return (\r\n            <div className=\"mappingslider\">\r\n              <Slide\r\n                key={isopen ? i : Math.random()}\r\n                open={isopen}\r\n                header={data}\r\n                content={contentData}\r\n                customToggler={{\r\n                  open: <FaChevronUp />,\r\n                  close: <FaChevronDown />,\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      });\r\n    }\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      allSignal = [],\r\n      selectedEnterpriseSignal,\r\n    } = this.props.data.InteractionComponentData;\r\n    if (!selectedEnterpriseSignal) {\r\n      return (\r\n        <div className=\"error-text-mapping\">\r\n          {' '}\r\n          Please Select Enterprise Signal\r\n        </div>\r\n      );\r\n    }\r\n    let ComponentData;\r\n    allSignal.forEach(val => {\r\n      if (val.signalName === selectedEnterpriseSignal) {\r\n        ComponentData = val.signalContent;\r\n      }\r\n    });\r\n\r\n    if (!ComponentData) {\r\n      return (\r\n        <div className=\"error-text-mapping\">\r\n          {' '}\r\n          No Mapping File for this Signal{' '}\r\n        </div>\r\n      );\r\n    }\r\n    const mappingData =\r\n      (ComponentData &&\r\n        ComponentData.sourcemessage &&\r\n        ComponentData.sourcemessage.mappings &&\r\n        ComponentData.sourcemessage.mappings.properties) ||\r\n      {};\r\n    this.generateList(mappingData, this.mappingList);\r\n\r\n    return (\r\n      <div className=\"mapping-parent\">\r\n        {this.toggleCreation(this.mappingList)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MappingSignal;\r\n","import React, { Component } from 'react';\r\n\r\nimport Flight from '../Domain/flight';\r\nimport Pax from '../Domain/Pax';\r\nimport Crew from '../Domain/Crew';\r\nimport Bag from '../Domain/Crew';\r\nimport Engg from '../Domain/Engg';\r\nimport Ground from '../Domain/Engg';\r\nimport Button from '../../../Atoms/Button';\r\nimport { connect } from 'react-redux';\r\nimport { eventConfiguration } from '../../../../Store/EventConfigurationPage/eventConfig.action';\r\nimport Scheduling from '../Domain/Scheduling';\r\nimport SubsciptionConfig from '../Domain/Subscription';\r\nimport MappingSignal from '../Domain/mapping';\r\n\r\nclass UpdateSignal extends Component {\r\n  removeSelection = () => {\r\n    const criteria = ['entryCriteria', 'exitCriteria', 'reinitiateCriteria'];\r\n    const instanceData = this.props.instanceData;\r\n    criteria.forEach(val => {\r\n      if (!instanceData[val]) return;\r\n      let temp = [...instanceData[val]];\r\n      temp = temp.map(data => {\r\n        //check whether status is active or Draft\r\n        delete data.selected;\r\n      });\r\n    });\r\n\r\n    return instanceData;\r\n  };\r\n\r\n  state = {\r\n    instanceData: this.removeSelection(),\r\n    // originalData: JSON.parse(JSON.stringify(this.props.instanceData)),\r\n  };\r\n\r\n  ChooseTemplate = props => {\r\n    const { active } = props;\r\n    let Component = null;\r\n    if (active.toLowerCase() === 'flight') {\r\n      Component = <Flight {...props} />;\r\n    }\r\n    if (active.toLowerCase() === 'pax') {\r\n      Component = <Pax {...props} />;\r\n    }\r\n    if (active.toLowerCase() === 'crew') {\r\n      Component = <Crew {...props} />;\r\n    }\r\n    if (active.toLowerCase() === 'bag') {\r\n      Component = <Bag {...props} />;\r\n    }\r\n    if (active.toLowerCase() === 'engg') {\r\n      Component = <Engg {...props} />;\r\n    }\r\n    if (active.toLowerCase() === 'ground') {\r\n      Component = <Ground {...props} />;\r\n    }\r\n\r\n    if (props.label === 'Subscribe') {\r\n      Component = <SubsciptionConfig {...props} />;\r\n    }\r\n\r\n    if (Component) {\r\n      return (\r\n        <>\r\n          {Component}\r\n          {props.isEditPage && (\r\n            <div className=\"save-container\">\r\n              <Button\r\n                onClick={() => {\r\n                  //    this.props.getEvent_Template();\r\n                  this.props.closeEdit();\r\n                }}\r\n              >\r\n                cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  const criteria = [\r\n                    'entryCriteria',\r\n                    'exitCriteria',\r\n                    'reinitiateCriteria',\r\n                  ];\r\n                  const instanceData = JSON.parse(\r\n                    JSON.stringify(this.state.instanceData)\r\n                  );\r\n                  instanceData.mappingStatus = 'Active';\r\n                  criteria.forEach(val => {\r\n                    if (!instanceData[val]) return;\r\n                    let temp = [...instanceData[val]];\r\n                    temp = temp.map(data => {\r\n                      //check whether status is active or Draft\r\n                      if (data.metadata) {\r\n                        Object.keys(data.metadata).forEach(key => {\r\n                          if (!data.metadata[key]) {\r\n                            instanceData.mappingStatus = 'Drafts';\r\n                          }\r\n                        });\r\n                      }\r\n                      delete data.selected;\r\n                      delete data.isBESignalSelected;\r\n\r\n                      return data;\r\n                    });\r\n                    instanceData[val] = temp;\r\n                  });\r\n                  delete instanceData.selectedIAOSignal;\r\n                  delete instanceData.selectedEnterpriseSignal;\r\n                  instanceData.enterpriseCode = this.props.enterpriseId;\r\n                  this.props.updateInstance(instanceData);\r\n                  this.props.closeEdit();\r\n                }}\r\n              >\r\n                save\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  selectedData = data => {\r\n    //,, this.setState({})\r\n\r\n    const instanceData = { ...this.state.instanceData };\r\n\r\n    // update condition for schedule page\r\n    if (\r\n      data.label === 'Schedule' &&\r\n      Object.keys(data.InteractionComponentData).length\r\n    ) {\r\n      instanceData['schedulingCondition'] = data.InteractionComponentData;\r\n    }\r\n\r\n    //update condition for subscription page\r\n    if (data.label === 'Subscribe' && instanceData['subscription']) {\r\n      instanceData['subscription'] = data.InteractionComponentData;\r\n    }\r\n\r\n    //update condition for entry, exit , reinstate page\r\n    if (data.label !== 'Subscribe' && data.label !== 'Schedule') {\r\n      instanceData[data.CriteriaName].forEach(criteria => {\r\n        if (data.isEnterpriseSelectedSignal) {\r\n          // when we select enterprise signal\r\n          if (criteria.iaoSignalName === instanceData.selectedIAOSignal) {\r\n            criteria.namedSignal = data.selectedSignalName;\r\n            instanceData.selectedEnterpriseSignal = data.selectedSignalName;\r\n            criteria.isBESignalSelected = true;\r\n            criteria.selected = [];\r\n          }\r\n        } else if (data.isUpdateForSignal) {\r\n          // when we select iao signal\r\n          if (criteria.iaoSignalName === data.currentSignal) {\r\n            criteria.isBESignalSelected = true;\r\n            instanceData.selectedIAOSignal = data.currentSignal;\r\n            criteria.selected = [];\r\n          }\r\n        } else {\r\n          //when we select iao signal attribute\r\n          criteria.isBESignalSelected = false;\r\n        }\r\n\r\n        if (\r\n          criteria.domain.toLowerCase() === data.domain &&\r\n          criteria.iaoSignalName === data.signal\r\n        ) {\r\n          const metadata = criteria.metadata;\r\n          // validate iao signal attribute selected or not\r\n          if (metadata && typeof metadata === 'object') {\r\n            Object.keys(metadata).forEach(meta => {\r\n              if (meta === data.meta) {\r\n                criteria.selected = [];\r\n                instanceData.selectedEnterpriseSignal = criteria.namedSignal;\r\n                criteria.selected.push(data.meta);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.setState({ instanceData });\r\n\r\n    //instanceData[data.CriteriaName].forEach((val)=>{val.meta})\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      entryCriteria = [],\r\n      exitCriteria = [],\r\n      reinitiateCriteria = [],\r\n      schedulingCondition = {},\r\n      subscription = [],\r\n      eventType = '',\r\n      selectedIAOSignal,\r\n      selectedEnterpriseSignal,\r\n    } = this.state.instanceData;\r\n\r\n    const { label, active = '' } = this.props.tabData;\r\n    const enterpriseId = this.props.enterpriseId;\r\n    const isEditPage = this.props._props.isEditPage;\r\n    const callback = this.props._props.isEditPage\r\n      ? this.selectedData\r\n      : () => {};\r\n\r\n    const templateProps = {\r\n      eventType,\r\n      active,\r\n      callback,\r\n      isEditPage,\r\n      label,\r\n      enterpriseId,\r\n    };\r\n\r\n    if (label === 'Entry') {\r\n      return this.ChooseTemplate({\r\n        ...templateProps,\r\n        Criteria: entryCriteria,\r\n        InteractionComponent: MappingSignal,\r\n        InteractionComponentData: {\r\n          allSignal: this.props.enterpriseSignal,\r\n          selectedEnterpriseSignal,\r\n        },\r\n        CriteriaName: 'entryCriteria',\r\n      });\r\n    }\r\n\r\n    if (label === 'Exit') {\r\n      return this.ChooseTemplate({\r\n        ...templateProps,\r\n        InteractionComponent: MappingSignal,\r\n        InteractionComponentData: {\r\n          allSignal: this.props.enterpriseSignal,\r\n          selectedEnterpriseSignal,\r\n        },\r\n        Criteria: exitCriteria,\r\n        CriteriaName: 'exitCriteria',\r\n      });\r\n    }\r\n\r\n    if (label === 'Reinstate') {\r\n      return this.ChooseTemplate({\r\n        ...templateProps,\r\n        InteractionComponent: MappingSignal,\r\n        InteractionComponentData: {\r\n          allSignal: this.props.enterpriseSignal,\r\n          selectedEnterpriseSignal,\r\n        },\r\n        enterpriseList: this.props.EnterpriseDetails,\r\n        Criteria: reinitiateCriteria,\r\n\r\n        CriteriaName: 'reinitiateCriteria',\r\n      });\r\n    }\r\n\r\n    if (label === 'Schedule') {\r\n      return this.ChooseTemplate({\r\n        ...templateProps,\r\n        Criteria: entryCriteria,\r\n        InteractionComponent: Scheduling,\r\n        InteractionComponentData: schedulingCondition,\r\n        CriteriaName: 'entryCriteria',\r\n      });\r\n    }\r\n    if (label === 'Subscribe') {\r\n      return this.ChooseTemplate({\r\n        ...templateProps,\r\n        InteractionComponentData: subscription,\r\n        AllSubscriptionList: this.props.SubscriberDetails,\r\n        CriteriaName: 'Subscribe',\r\n      });\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    mappingData: state.eventConfigReducer.mappingData,\r\n  };\r\n};\r\n\r\nconst actionCreator = {\r\n  updateInstance: eventConfiguration.updateInstance,\r\n  getEvent_Template: eventConfiguration.getEvent_Template,\r\n};\r\n\r\nexport default connect(mapStateToProps, actionCreator)(UpdateSignal);\r\n","import React, { Component } from 'react';\r\nimport UpdateSignal from '../Signal-list/index';\r\nimport MultiTabs from '../../../Molecules/multi-tabs';\r\n\r\nclass Criteria extends Component {\r\n  state = {\r\n    instanceData: JSON.parse(JSON.stringify(this.props.instanceData)),\r\n  };\r\n\r\n  updateState = instanceData => this.setState({ instanceData });\r\n\r\n  tabList = (instanceData = []) => {\r\n    return [\r\n      {\r\n        label: 'Entry',\r\n        childtab: ['FLIGHT', 'PAX', 'CREW', 'BAG', 'ENGG', 'GROUND'],\r\n        active: 'FLIGHT',\r\n        Component: props => (\r\n          <UpdateSignal\r\n            instanceData={instanceData}\r\n            updateState={this.updateState}\r\n            {...props}\r\n            {...this.props}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        label: 'Exit',\r\n        childtab: ['FLIGHT', 'PAX', 'CREW', 'BAG', 'ENGG', 'GROUND'],\r\n        active: 'FLIGHT',\r\n        Component: props => (\r\n          <UpdateSignal\r\n            instanceData={instanceData}\r\n            updateState={this.updateState}\r\n            {...props}\r\n            {...this.props}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        label: 'Reinstate',\r\n        childtab: ['FLIGHT', 'PAX', 'CREW', 'BAG', 'ENGG', 'GROUND'],\r\n        active: 'FLIGHT',\r\n        Component: props => (\r\n          <UpdateSignal\r\n            instanceData={instanceData}\r\n            updateState={this.updateState}\r\n            {...props}\r\n            {...this.props}\r\n          />\r\n        ),\r\n      },\r\n      {\r\n        label: 'Schedule',\r\n        childtab: ['FLIGHT', 'PAX', 'CREW', 'BAG', 'ENGG', 'GROUND'],\r\n        active: 'FLIGHT',\r\n        Component: props => {\r\n          console.log(props);\r\n          return (\r\n            <UpdateSignal\r\n              instanceData={instanceData}\r\n              updateState={this.updateState}\r\n              {...props}\r\n              {...this.props}\r\n            />\r\n          );\r\n        },\r\n      },\r\n      {\r\n        label: 'Subscribe',\r\n        childtab: [],\r\n        active: 'FLIGHT',\r\n        Component: props => (\r\n          <UpdateSignal\r\n            instanceData={JSON.parse(JSON.stringify(instanceData))}\r\n            updateState={this.updateState}\r\n            {...props}\r\n            {...this.props}\r\n          />\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n\r\n  saveCriteria = () => {};\r\n\r\n  render() {\r\n    if (!this.state.instanceData['schedulingCondition']) {\r\n      const instanceData = this.state.instanceData;\r\n      instanceData['schedulingCondition'] = {\r\n        scheduleKey: '',\r\n        snoozesTimeValueMins: 0,\r\n        snoozesTimeIncrementValueMins: 0,\r\n        operator: 'ADD',\r\n      };\r\n      this.setState({ instanceData });\r\n    }\r\n    // if (this.state.isEnterprisePage) {\r\n    //   return (\r\n    //     <div className=\"enterprise-page-in-event-config\">\r\n    //       <div className=\"container\">sdfg</div>\r\n    //     </div>\r\n    //   );\r\n    // }\r\n\r\n    return (\r\n      <MultiTabs\r\n        className=\"event-edit\"\r\n        tabData={this.tabList(this.state.instanceData, this.props)}\r\n        isEditPage={this.props.page === 'EDIT' ? true : false}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Criteria;\r\n","import React, { Component } from 'react';\r\nimport './edit-instance.scss';\r\nimport Criteria from '../Criteria';\r\n\r\nclass EventListViewDescription extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    const {\r\n      businessEventTemplateId,\r\n      businessEvent,\r\n      eventDescription,\r\n      influencers = [],\r\n      businessTargetedDomains = [],\r\n      ruleMapping = [],\r\n      subscription = [],\r\n    } = this.props.instanceData;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"eventListViewDescription\">\r\n          <div className=\"businesseventname\">\r\n            <div className=\"businesseventdetails\">\r\n              <div className=\"eventNo\">{businessEventTemplateId}</div>\r\n              <div className=\"eventName\">{businessEvent}</div>\r\n            </div>\r\n            <div className=\"businesseventdescription\">{eventDescription}</div>\r\n          </div>\r\n          <Subscribers subscription={subscription} />\r\n          <CorrelatdDomain businessTargetedDomains={businessTargetedDomains} />\r\n          <InfluencedEnterpriseEvents influencers={influencers} />\r\n          <DeterminantRules ruleMapping={ruleMapping} />\r\n          <Creteria\r\n            instanceData={this.props.instanceData}\r\n            closeEdit={this.props.closeEdit}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventListViewDescription;\r\n\r\nconst Creteria = ({ instanceData = [], closeEdit }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"Domain\">\r\n        <div className=\"header\">Conditions</div>\r\n        <Criteria\r\n          instanceData={instanceData}\r\n          page={'VIEW'}\r\n          closeEdit={closeEdit}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Subscribers = ({ subscription }) => {\r\n  if (!subscription.length) return null;\r\n  return (\r\n    <>\r\n      <div className=\"Domain\">\r\n        <div className=\"header\">Subscribers</div>\r\n        <div className=\"domainDetails\">\r\n          {subscription.map((subscribe, index) => {\r\n            return (\r\n              <div key={index} className=\"domainNames\">\r\n                {subscribe.subscriptionDetails.subscriberGroup}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport const CorrelatdDomain = ({ businessTargetedDomains }) => {\r\n  return (\r\n    <>\r\n      <div className=\"Domain\">\r\n        <div className=\"header\">Correlated Domain</div>\r\n        <div className=\"domainDetails\">\r\n          {businessTargetedDomains.map((val, index) => (\r\n            <div key={index} className=\"domainNames\">\r\n              {val}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const InfluencedEnterpriseEvents = ({ influencers }) => {\r\n  return (\r\n    <>\r\n      <div className=\"Domain\">\r\n        <div className=\"header\">Influenced Enterprise Events</div>\r\n        <div className=\"domainDetails\">\r\n          {influencers.map((influencer, index) => {\r\n            return (\r\n              <div key={index} className=\"domainNames\">\r\n                {influencer}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const DeterminantRules = ({ ruleMapping }) => {\r\n  return (\r\n    <>\r\n      <div className=\"Domain\">\r\n        <div className=\"header\">Determinant Rules</div>\r\n        <div className=\"domainDetails\">\r\n          {ruleMapping.map((val, index) => {\r\n            return (\r\n              <div key={index} style={{ display: 'flex' }}>\r\n                <div className=\"domainNames\" style={{ width: '20%' }}>\r\n                  {val.ruleId}\r\n                </div>\r\n                <div className=\"domainNames\" style={{ width: '80%' }}>\r\n                  {val.ruleConstruct}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\r\nimport './edit-instance.scss';\r\nimport EventListViewDescription from './active-instance';\r\nimport './update-signal.scss';\r\nimport Criteria from '../Criteria';\r\n\r\nclass EventListView extends Component {\r\n  state = { currentView: 'LIST' };\r\n\r\n  handleEdit = currentView => {\r\n    this.setState({ currentView });\r\n  };\r\n\r\n  cancelEdit = () => {\r\n    this.setState({ currentView: 'LIST' });\r\n    if (this.props.closeEdit) {\r\n      this.props.closeEdit();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const instanceData = JSON.parse(JSON.stringify(this.props.instanceData));\r\n    if (instanceData && !instanceData['schedulingCondition']) {\r\n      instanceData['schedulingCondition'] = {\r\n        scheduleKey: '',\r\n        snoozesTimeValueMins: 0,\r\n        snoozesTimeIncrementValueMins: 0,\r\n        operator: 'ADD',\r\n      };\r\n    }\r\n\r\n    return (\r\n      <>\r\n        {this.state.currentView === 'EDIT' ? (\r\n          <Criteria\r\n            instanceData={instanceData}\r\n            page={'EDIT'}\r\n            enterpriseId={this.props.enterpriseId}\r\n            enterpriseSignal={this.props.enterpriseSignal}\r\n            SubscriberDetails={this.props.SubscriberDetails}\r\n            closeEdit={this.cancelEdit}\r\n          />\r\n        ) : (\r\n          <div className=\"eventListView\">\r\n            <div className=\"userCreateMain\">\r\n              <div className=\"userCreateName\">User Created Name</div>\r\n              <div className=\"edit\" onClick={() => this.handleEdit('EDIT')}>\r\n                Edit\r\n              </div>\r\n            </div>\r\n            <div className=\"bottomline\"></div>\r\n\r\n            <EventListViewDescription\r\n              instanceData={this.props.instanceData}\r\n              closeEdit={this.cancelEdit}\r\n            />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventListView;\r\n","// import { confirmPopup } from 'react-confirm-alert';\r\nimport React, { Component } from 'react';\r\nimport './popup.scss';\r\nimport Animate from '../addAnimation';\r\nimport Button from '../Button';\r\n\r\nclass PopupMax extends React.Component {\r\n  render() {\r\n    return (\r\n      <Animate\r\n        show={this.props.isOpen}\r\n        className=\"PopupMax-bg-container\"\r\n        enterAnimate=\"zoom-out-enter .4s\"\r\n        leaveAnimate=\"zoom-out-leave .3s\"\r\n      >\r\n        <div className=\"PopupMax-container\">\r\n          <div className=\"PopupMax-title\">\r\n            <b>{this.props.heading}</b>\r\n          </div>\r\n          <div className=\"PopupMax-message\">{this.props.children}</div>\r\n          <div className=\"PopupMax-control\">\r\n            <div className=\"buttonflex\">\r\n              <Button\r\n                className=\"primary\"\r\n                onClick={e => {\r\n                  if (this.props.clickHandler) {\r\n                    this.props.clickHandler(e, 'save');\r\n                  }\r\n                }}\r\n              >\r\n                {this.props.buttonText}\r\n              </Button>\r\n              <Button\r\n                className=\"primary\"\r\n                onClick={e => {\r\n                  // console.log(this);\r\n\r\n                  this.props.clickHandler(e, 'cancel');\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Animate>\r\n    );\r\n  }\r\n}\r\n\r\nPopupMax.defaultProps = {\r\n  isOpen: false,\r\n  heading: 'Modal',\r\n  buttonText: 'Save',\r\n  clickHandler: () => {},\r\n};\r\n\r\nexport default PopupMax;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport './instances-list.scss';\r\nimport Button from '../../../Atoms/Button';\r\nimport TabsWithBorder from '../../../Atoms/tab-with-border/tab';\r\nimport { eventConfiguration } from '../../../../Store/EventConfigurationPage/eventConfig.action';\r\nimport { connect } from 'react-redux';\r\nimport upArrow from '../../../../../src/components/Img/upArrow.png';\r\nimport SearchBox from '../../../Atoms/SearchBox';\r\nimport EventListView from './edit-instance';\r\nimport HoverContainer from '../../../Atoms/hoverContainer';\r\nimport Popup from '../../../Atoms/popup/popup';\r\nimport { ChooseEnterpriseList } from '..';\r\nimport PopupMax from '../../../Atoms/popup/popupMax';\r\n\r\nclass EventList extends React.Component {\r\n  state = {\r\n    currentToggler: 'activeInstance',\r\n    selectedInstance: {},\r\n    searchBoxValue: '',\r\n    list: [],\r\n    isCloneSelectEnterprisePopUpOpened: false,\r\n    selectedClone: {},\r\n    selectedCloneEnterprise: {},\r\n  };\r\n  activeInstance = [];\r\n  DraftsInstance = [];\r\n\r\n  componentDidMount() {\r\n    this.props.getEvent();\r\n  }\r\n\r\n  date = value => {\r\n    let val = value != undefined ? value : '';\r\n    var now = new Date(val);\r\n    var dateString = moment(now).format('DD MMM YY ');\r\n    return dateString.toUpperCase();\r\n  };\r\n\r\n  time = value => {\r\n    let val = value != undefined ? value : '';\r\n    var str = val.slice(0, -1);\r\n    var now = new Date(str);\r\n    var timestring = moment(now).format('HH:mm');\r\n    return timestring;\r\n  };\r\n\r\n  getInstance = instances => {\r\n    this.activeInstance = [];\r\n    this.DraftsInstance = [];\r\n    instances.forEach(instance => {\r\n      if (this.props.enterpriseId === instance.enterpriseCode) {\r\n        if (\r\n          instance.mappingStatus &&\r\n          instance.mappingStatus.toLowerCase() === 'active'\r\n        ) {\r\n          this.activeInstance.push(instance);\r\n        } else if (\r\n          instance.mappingStatus &&\r\n          instance.mappingStatus.toLowerCase() === 'drafts'\r\n        ) {\r\n          this.DraftsInstance.push(instance);\r\n        } \r\n      }\r\n    });\r\n  };\r\n\r\n  selectInstance = instance => {\r\n    if (\r\n      this.state.selectedInstance.businessEventId === instance.businessEventId\r\n    ) {\r\n      this.setState({ selectedInstance: {} });\r\n    } else {\r\n      const selectedInstance = instance;\r\n      this.setState({ selectedInstance });\r\n    }\r\n  };\r\n\r\n  instanceData = data => {\r\n    let tempData = {};\r\n    if (data && data.businessEventId) {\r\n      const instanceData = this.props.eventTemplateData;\r\n      if (instanceData) {\r\n        instanceData.forEach(val => {\r\n          if (val.businessEventId === data.businessEventId) {\r\n            tempData = val;\r\n          }\r\n        });\r\n      }\r\n    }\r\n    return tempData;\r\n  };\r\n\r\n  cloneInstance = (e, instance) => {\r\n    e.stopPropagation();\r\n    this.setState({\r\n      isCloneSelectEnterprisePopUpOpened: true,\r\n      selectedClone: instance,\r\n    });\r\n  };\r\n\r\n  searchHandler = (e, list) => {\r\n    this.setState({ searchBoxValue: e.target.value, list });\r\n  };\r\n\r\n  updateClone = (e, text) => {\r\n    if (text === 'save') {\r\n      const { selectedCloneEnterprise, selectedClone } = this.state;\r\n      if (selectedClone.businessEventId) {\r\n        selectedClone.businessEventId = '';\r\n        selectedClone.enterpriseCode = selectedCloneEnterprise.enterpriseId;\r\n        this.props.updateInstance(selectedClone);\r\n      }\r\n    }\r\n    this.setState({\r\n      isCloneSelectEnterprisePopUpOpened: false,\r\n      selectedClone: {},\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.eventTemplateData) {\r\n      this.getInstance(this.props.eventTemplateData);\r\n    }\r\n    const content = {\r\n      activeInstance: this.activeInstance,\r\n      draftInstance: this.DraftsInstance,\r\n    };\r\n\r\n    let list = this.state.searchBoxValue.length\r\n      ? this.state.list\r\n      : content[this.state.currentToggler];\r\n\r\n    if (this.state.isCloneSelectEnterprisePopUpOpened) {\r\n      return (\r\n        <PopupMax\r\n          isOpen={true}\r\n          clickHandler={(e, text) => {\r\n            this.updateClone(e, text);\r\n          }}\r\n          heading={'Select Enterprise for Clone Instance'}\r\n        >\r\n          <ChooseEnterpriseList\r\n            EnterpriseList={this.props.EnterpriseList}\r\n            chooseEnterprise={enterprise => {\r\n              this.setState({ selectedCloneEnterprise: enterprise });\r\n            }}\r\n          />\r\n        </PopupMax>\r\n      );\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"ActiveEventInstances\">\r\n          <div className=\"event-list\">\r\n            <div className=\"Event-left-box\">\r\n              <div className=\"Event_Box\">\r\n                <div className=\"searchContainer\">\r\n                  <div className=\"Event-search-header\">\r\n                    <SearchBox\r\n                      placeholder=\"Search by name\"\r\n                      onChange={this.searchHandler}\r\n                      list={content[this.state.currentToggler]}\r\n                      value={this.state.searchBoxValue}\r\n                      className=\"EventListSearchBar\"\r\n                      filterBy={['businessEventId', 'businessEvent']}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"EventListBox scroll\">\r\n                <div className=\"EventListHeaderBox\">\r\n                  <TabsWithBorder\r\n                    active={this.state.currentToggler}\r\n                    onChange={currentToggler =>\r\n                      this.setState({ currentToggler, selectedInstance: {} })\r\n                    }\r\n                  >\r\n                    <div key=\"activeInstance\" className=\"EventListHeader\">\r\n                      <b> {`Active(${this.activeInstance.length})`}</b>\r\n                    </div>\r\n                    <div key=\"draftInstance\" className=\"EventListHeader\">\r\n                      <b> {`Drafts(${this.DraftsInstance.length})`}</b>\r\n                    </div>\r\n                  </TabsWithBorder>\r\n                </div>\r\n                {list.map((instance, index) => {\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className={\r\n                        'EventListDetails ' +\r\n                        `${\r\n                          this.state.selectedInstance.businessEventId ===\r\n                          instance.businessEventId\r\n                            ? 'activeInstance'\r\n                            : ''\r\n                        }`\r\n                      }\r\n                      onClick={e => this.selectInstance(instance)}\r\n                    >\r\n                      <HoverContainer\r\n                        isEditIconShow={false}\r\n                        isDeleteIconShow={false}\r\n                        isCloneIconShow={true}\r\n                        cloneHandler={e => {\r\n                          this.cloneInstance(e, instance);\r\n                        }}\r\n                      >\r\n                        <div className=\"EventListName\">\r\n                          {instance.businessEventId}\r\n                        </div>\r\n                        {/* <div className=\"EventListUserName\">\r\n                        User Created Name User Created Name\r\n                      </div> */}\r\n                        <div className=\"EventListBEventName\">\r\n                          {instance.businessEvent}\r\n                        </div>\r\n                        <div className=\"EventListULName\">\r\n                          {/* <div className=\"user-info\">12:30 | 19 JUN 20</div> */}\r\n                          <div className=\"Event-Transactional-button-Area\">\r\n                            <Button className=\"Event-Transactional-button\">\r\n                              {instance.eventType}\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      </HoverContainer>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"Selection-panel scroll\">\r\n            {this.state.selectedInstance.businessEventId ? (\r\n              <EventListView\r\n                key={Math.random()}\r\n                instanceData={this.instanceData(this.state.selectedInstance)}\r\n                closeEdit={this.props.closeEdit}\r\n                enterpriseId={this.props.enterpriseId}\r\n                enterpriseSignal={this.props.enterpriseSignal}\r\n                SubscriberDetails={this.props.SubscriberDetails}\r\n              />\r\n            ) : (\r\n              <NoEvent />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst NoEvent = () => {\r\n  return (\r\n    <div className=\"no-event\">\r\n      <div>\r\n        <img src={upArrow} />\r\n      </div>\r\n      Select a “Active Event Instances” to view\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapState(state) {\r\n  return state.eventConfigReducer;\r\n}\r\n\r\nconst actionCreators = {\r\n  getEvent: eventConfiguration.getEvent_Template,\r\n  updateInstance: eventConfiguration.updateInstance,\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(EventList);\r\n","import React from 'react';\r\n//import moment from 'moment';\r\nimport './addInstance.scss';\r\nimport SearchBox from '../../../Atoms/SearchBox';\r\nimport { businesseventConfiguration } from '../../../../Store/BusinessEventsPage/businessConfig.action';\r\nimport { connect } from 'react-redux';\r\nimport Button from '../../../Atoms/Button';\r\nimport upArrow from '../../../../../src/components/Img/upArrow.png';\r\n//import EventListView from '../View-Instance/edit-instance';\r\nimport Criteria from '../Criteria/index';\r\n\r\nclass addInstance extends React.Component {\r\n  state = {\r\n    currentToggler: 'activeInstance',\r\n    selectedInstance: {},\r\n    searchBoxValue: '',\r\n  };\r\n  businesseventTemplateData = [];\r\n  activeInstance = [];\r\n\r\n  componentDidMount() {\r\n    this.props.getBusinessEvent();\r\n  }\r\n  closeEdit = () => {\r\n    this.setState({ selectedInstance: {} });\r\n  };\r\n\r\n  getInstance = instances => {\r\n    this.activeInstance = [];\r\n    instances.forEach(instance => {\r\n      this.activeInstance.push(instance);\r\n    });\r\n  };\r\n\r\n  searchHandler = (e, list) => {\r\n    this.setState({ searchBoxValue: e.target.value, list });\r\n  };\r\n\r\n  selectInstance = instance => {\r\n    if (\r\n      this.state.selectedInstance.businessEventTemplateId ===\r\n      instance.businessEventTemplateId\r\n    ) {\r\n      this.setState({ selectedInstance: {} });\r\n    } else {\r\n      const selectedInstance = JSON.parse(JSON.stringify(instance));\r\n      this.setState({ selectedInstance });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.props.businesseventTemplateData) {\r\n      this.getInstance(this.props.businesseventTemplateData);\r\n    }\r\n\r\n    const content = {\r\n      activeInstance: this.activeInstance,\r\n    };\r\n    let list = this.state.searchBoxValue.length\r\n      ? this.state.list\r\n      : content[this.state.currentToggler];\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"BusinessEventInstances\">\r\n          <div className=\"BusinessEvents\">\r\n            <div className=\"BusinessEvent-left-box\">\r\n              <div className=\"BusinessEvent_Box\">\r\n                <div className=\"Business-searchContainer\">\r\n                  <div className=\"Business-Event-search-header\">\r\n                    <SearchBox\r\n                      placeholder=\"Search by name\"\r\n                      onChange={this.searchHandler}\r\n                      list={content[this.state.currentToggler]}\r\n                      value={this.state.searchBoxValue}\r\n                      className=\"Business-EventListSearchBar\"\r\n                      filterBy={['businessEventTemplateId', 'businessEvent']}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"Business-EventListBox scroll\">\r\n                {list &&\r\n                  list.map((instance, index) => {\r\n                    return (\r\n                      <div\r\n                        key={index}\r\n                        className={\r\n                          'Business-EventListDetails ' +\r\n                          `${\r\n                            this.state.selectedInstance\r\n                              .businessEventTemplateId ===\r\n                            instance.businessEventTemplateId\r\n                              ? 'activeInstance'\r\n                              : ''\r\n                          }`\r\n                        }\r\n                        onClick={e => this.selectInstance(instance)}\r\n                      >\r\n                        <div className=\"BusinessListName-Area\">\r\n                          <div className=\"BusinessListID\">\r\n                            {instance.businessEventTemplateId}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"BusinessListNameandBaseBody\">\r\n                          <div className=\"BusinessListName\">\r\n                            <div>{instance.businessEvent}</div>\r\n                            <div className=\"BusinessListBaseBody\">\r\n                              {instance.eventDescription}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"Business-Event-Transactional-button-Container\">\r\n                          <div className=\"Business-Event-Transactional-button-Area\">\r\n                            <Button className=\"Business-Event-Transactional-button\">\r\n                              {instance.eventType}\r\n                            </Button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Selection-panel scroll\">\r\n            {this.state.selectedInstance.businessEventTemplateId ? (\r\n              <Criteria\r\n                key={Math.random()}\r\n                instanceData={this.state.selectedInstance}\r\n                enterpriseId={this.props.enterpriseId}\r\n                enterpriseSignal={this.props.enterpriseSignal}\r\n                SubscriberDetails={this.props.SubscriberDetails}\r\n                closeEdit={this.closeEdit}\r\n                page={'EDIT'}\r\n              />\r\n            ) : (\r\n              <NoEvent />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst NoEvent = () => {\r\n  return (\r\n    <div className=\"no-event\">\r\n      <div>\r\n        <img src={upArrow} />\r\n      </div>\r\n      Select a “Active Event Instances” to view\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapState(state) {\r\n  return state.businesseventConfigReducer;\r\n}\r\n\r\nconst actionCreators = {\r\n  getBusinessEvent: businesseventConfiguration.getBusiness_Event_Template,\r\n};\r\n\r\nexport default connect(mapState, actionCreators)(addInstance);\r\n","import React, { Component, useRef, useEffect, useState } from 'react';\r\nimport EventList from './View-Instance/instances-list';\r\nimport Button from '../../Atoms/Button';\r\nimport { GoPlus, GoListUnordered } from 'react-icons/go';\r\nimport './index.scss';\r\nimport AddInstance from './Add-Instance/addInstance';\r\nimport { connect } from 'react-redux';\r\nimport { Enterprise_Config } from '../../../Store/Enterprise_Config/action';\r\nimport { MdCheck } from 'react-icons/md';\r\n\r\nclass EventConfiguration extends Component {\r\n  header = {\r\n    ActiveEventInstanceHeader: {\r\n      Component: EventList,\r\n      headerName: 'Active Event Instances',\r\n      buttonName: 'Add Instance',\r\n      navigateTo: 'AddInstanceHeader',\r\n      Icon: GoPlus,\r\n    },\r\n    AddInstanceHeader: {\r\n      headerName: 'Add Instance',\r\n      Component: AddInstance,\r\n      buttonName: 'View Instance',\r\n      navigateTo: 'ActiveEventInstanceHeader',\r\n      Icon: GoListUnordered,\r\n    },\r\n  };\r\n\r\n  state = {\r\n    currentPage: this.header.ActiveEventInstanceHeader,\r\n    isEnterpriseListScreen: true,\r\n    selectedEnterPrise: '',\r\n  };\r\n  componentDidMount() {\r\n    this.props.getEnterpriseList();\r\n    this.props.getSubscriber();\r\n  }\r\n\r\n  chooseEnterprise = val => {\r\n    this.props.getSignalDetails(val.enterpriseId);\r\n    this.setState({\r\n      isEnterpriseListScreen: false,\r\n      selectedEnterPrise: val.enterpriseId,\r\n    });\r\n  };\r\n\r\n  navigate = e => {\r\n    Object.keys(this.header).forEach(val => {\r\n      if (e.target.innerText === this.header[val].buttonName) {\r\n        const currentPage = this.header[val].navigateTo;\r\n        this.setState({ currentPage: this.header[currentPage] });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { Icon, Component, buttonName, headerName } = this.state.currentPage;\r\n    const { EnterpriseList = [] } = this.props;\r\n    if (this.state.isEnterpriseListScreen) {\r\n      return (\r\n        <ChooseEnterpriseList\r\n          EnterpriseList={EnterpriseList}\r\n          chooseEnterprise={this.chooseEnterprise}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"Events\">\r\n          <div className=\"EventManagementHeader\">\r\n            <div className=\"EventManagementwrap\">\r\n              <div\r\n                className=\"EventManagementText\"\r\n                onClick={() => {\r\n                  this.setState({ isEnterpriseListScreen: true });\r\n                }}\r\n              >\r\n                {'Select Enterprise'}\r\n              </div>\r\n              <div className=\"Event-header-right-content\">\r\n                <div className=\"event-header-create\">\r\n                  <Icon className=\"event-create-icon\" />\r\n                  <Button\r\n                    className=\"CreateEventTemplate\"\r\n                    onClick={this.navigate}\r\n                  >\r\n                    {buttonName}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"config-container\">\r\n          {\r\n            <Component\r\n              enterpriseId={this.state.selectedEnterPrise}\r\n              enterpriseSignal={this.props.allSignals}\r\n              SubscriberDetails={this.props.SubscriberDetails}\r\n              EnterpriseList={this.props.EnterpriseList}\r\n            />\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const ChooseEnterpriseList = ({ EnterpriseList, chooseEnterprise }) => {\r\n  const [selectedEnterPrise, setSelectedEnterPrise] = useState({});\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"choose-enterprise-heading\">\r\n        Select a “Enterprise” to View, Add, Edit Instance’s\r\n      </div>\r\n      <div className=\"choose-enterprise-list-container scroll\">\r\n        {EnterpriseList.map(val => {\r\n          return (\r\n            <div\r\n              className=\"list-enterprise\"\r\n              onClick={() => {\r\n                chooseEnterprise(val);\r\n                setSelectedEnterPrise(val);\r\n              }}\r\n            >\r\n              <div className=\"enterprise-logo\">\r\n                <div className=\"logo-img\">\r\n                  {val.enterpriseId && val.enterpriseId[0]}\r\n                </div>\r\n              </div>\r\n              {/* {selectedEnterPrise.enterpriseId === val.enterpriseId && (\r\n                <div className=\"mapping-tick\">\r\n                  <MdCheck />\r\n                </div>\r\n              )} */}\r\n              <div className=\"enterprise-details\">\r\n                <div className=\"id-name-container\">\r\n                  <div className=\"enterprise-id\">{val.enterpriseId}</div>\r\n                  <div className=\"enterprise-name\">{val.enterpriseName}</div>\r\n                </div>\r\n                <div className=\"enterprise-desc\">\r\n                  {val.enterpriseDescription}\r\n                </div>\r\n              </div>\r\n              {selectedEnterPrise.enterpriseId === val.enterpriseId && (\r\n                <div className=\"mapping-tick\">\r\n                  <MdCheck />\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getEnterpriseList: Enterprise_Config.getEnterpriseDetails,\r\n  getSignalDetails: Enterprise_Config.getSignalDetail,\r\n  getSubscriber: Enterprise_Config.get_subscriber,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    EnterpriseList: state.EnterpriceReducer,\r\n    allSignals: state.EnterpriseSignal,\r\n    SubscriberDetails: state.SubscriberReducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EventConfiguration);\r\n"],"sourceRoot":""}