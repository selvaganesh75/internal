{"version":3,"sources":["../node_modules/classnames/index.js","components/Page/Enterprise-config/AddEnterpise/index.js","components/Molecules/AddTask/index.js","components/Page/Enterprise-config/AddSignal/index.js","components/Molecules/Event/mapping.js","components/Molecules/Event/index.js","components/Molecules/Nav-Tabs/index.js","components/Page/Enterprise-config/Add Subscriber/AddSubscriber.js","components/Page/Enterprise-config/Add Subscriber/index.js","components/Page/Enterprise-config/EnterpriseStoryBoard/index.js","components/Page/Enterprise-config/EnterpriseList/index.js","components/Page/Enterprise-config/Header_enterprise/Mainheader.js","components/Page/Enterprise-config/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","AddEnterprise","state","enterpriseName","enterpriseIATACode","enterpriseDescription","enterpriseId","enterpriseAddValidation","props","AddNewEnterprise","CancelView","commonAction","openAlert","title","text","className","InputElement","defaultValue","this","onChange","e","setState","target","value","placeholder","Button","onClick","style","backgroundColor","color","Component","mapDispatchToProps","Enterprise_Config","postNewEnterPrise","connect","AddTask","clicked","AddTaskHandler","children","AddSignal","signalAddValidation","signalName","signalDomain","signalDescription","signalMode","signalSource","enterpriseChannel","apiendpointurl","apirrefreshinterval","AddNewSingal","showStoryBoard","EnterpriseId","selectedSignal","signalAttributes","console","log","domainOptions","selected","ChannelList","ModeOptions","map","val","isEditSignal","src","GoBack","disabled","toggleItem","list","dropdownDisable","isDefaultValuerequired","undefined","toUpperCase","UpdateSingal","postNewSingal","updateSingal","defaultProps","EnterpriseDeatails","EnterpriceReducer","Enterprice_Signal","EnterpriseSignal","MappingSignal","activeElement","createRef","timeout","mappingList","scrollingToPosition","generateList","data","newObj","Object","keys","forEach","temp","JSON","parse","stringify","path","currentListPath","toggleCreation","mapping","contentData","header","content","customToggler","open","close","clearTimeout","ComponentData","allSignal","signalId","signalContent","mappingData","sourcemessage","mappings","properties","ComponentACC","reomveSingal","a","uploadFile","file","cancelButtonHandlerEnterprise","popUp","uploadAlert","stopPropagation","editHandler","currentView","isEditSignalTriggered","openedSignal","updateSlider","isOpen","timer","setTimeout","deleteHandler","deleteFile","onFormSubmit","condition","signal","isNewSignal","bind","files","index","Math","random","styleForIcon","justifyContent","display","sliderStatus","isUploadIconShow","uploadHandler","buttonText","heading","clickHandler","type","togglerComponent","React","deleteSingal","uploadFileInfo","updateFile","SignalACC","businesseventConfigReducer","Content","SingalDeatils","Nav_Tabs","TabItem","signalData","generateItem","currentSignal","getItem","tab","AddSubscriber","subscriberName","subscriberDesc","subscriberId","deactivate","subscriberAddValidation","AddNewSubscriber","postNewSubscriber","Subscriber","showAddSubscriber","goStoryBoard","GetSubscriber","showStoryBoardSubscriber","SubscriberDetails","get_subscriber","SubscriberReducer","StoryBoard","showAddSignal","showSubscriber","SearchString","isEdit","viewAddSignal","searchHandler","searchString","enterpriseValue","Enterprise_ID","Add_Subscriber","SearchBox","filterBy","showSingal","EnterPriceList","showAddEnterprise","clickedEnterprise","ShowAddEnterprise","showDetails","getSignalDetails","showStory","activeIndex","contentComponent","headerComponent","trim","toLowerCase","filter","item","match","getSignalDetail","deleteSignalDetails","Mainheader","getdata","NoEvent","upArrow","getEnterpriseDetails","Enterprise_config"],"mappings":"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","file":"static/js/11.e847563a.chunk.js","sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import React, { Component } from 'react';\r\nimport InputElement from '../../../Atoms/InputElement';\r\nimport './addEnterprise.scss';\r\nimport Button from '../../../Atoms/Button';\r\nimport { Enterprise_Config } from '../../../../Store/Enterprise_Config/action';\r\nimport { connect } from 'react-redux';\r\nimport commonAction from '../../../../Store/commonActivity/action';\r\n\r\nclass AddEnterprise extends Component {\r\n  state = {\r\n    enterpriseName: '',\r\n    enterpriseIATACode: '',\r\n    enterpriseDescription: '',\r\n    enterpriseId: '',\r\n  };\r\n  enterpriseAddValidation = () => {\r\n    let {\r\n      enterpriseName,\r\n      enterpriseId,\r\n      enterpriseIATACode,\r\n      enterpriseDescription,\r\n    } = this.state;\r\n    if (!enterpriseName) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'Enterprise Name must be filled',\r\n      });\r\n      return;\r\n    }\r\n    // if (!enterpriseId) {\r\n    //   commonAction.openAlert({\r\n    //     title: 'warning',\r\n    //     text: 'Enterprise ID must be filled',\r\n    //   });\r\n    //   return;\r\n    // }\r\n    if (!enterpriseIATACode) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'IATA Code must be filled',\r\n      });\r\n      return;\r\n    }\r\n    if (!enterpriseDescription) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'Enterprise Description must be filled',\r\n      });\r\n      return;\r\n    }\r\n    this.props.AddNewEnterprise(this.state);\r\n    this.props.CancelView();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Enterprise_main\">\r\n        {/* <div className=\"Enterprise_main_Name\">\r\n          <div className=\"Enterprise_Name\">Enterprise ID</div>\r\n          <div className=\"Enterprise_Name_text\">\r\n            <InputElement\r\n              defaultValue={this.state.enterpriseId}\r\n              onChange={e => {\r\n                this.setState({ enterpriseId: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n        </div> */}\r\n        <div className=\"Enterprise_main_Name\">\r\n          <div className=\"Enterprise_Name\">Enterprise Name</div>\r\n          <div className=\"Enterprise_Name_text\">\r\n            <InputElement\r\n              defaultValue={this.state.enterpriseName}\r\n              onChange={e => {\r\n                this.setState({ enterpriseName: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"Enterprise_main_Name\">\r\n          <div className=\"Enterprise_Name\">IATA Code</div>\r\n          <div className=\"Enterprise_Name_text\">\r\n            <InputElement\r\n              defaultValue={this.state.enterpriseIATACode}\r\n              onChange={e => {\r\n                this.setState({ enterpriseIATACode: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"Enterprise_main_Name\">\r\n          <div className=\"Enterprise_Name\">Description</div>\r\n          <div className=\"Enterprise_Name_text\">\r\n            <InputElement\r\n              defaultValue={this.state.enterpriseDescription}\r\n              onChange={e => {\r\n                this.setState({ enterpriseDescription: e.target.value });\r\n              }}\r\n              placeholder=\"Enter description\"\r\n            />\r\n          </div>\r\n          <div className=\"Enterprise_Buttons\">\r\n            <Button onClick={() => this.props.CancelView()}>Cancel</Button>\r\n\r\n            <Button\r\n              style={{ backgroundColor: '#4b50c3', color: 'white' }}\r\n              onClick={() => {\r\n                this.enterpriseAddValidation();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  AddNewEnterprise: Enterprise_Config.postNewEnterPrise,\r\n};\r\nconst mapStateToProps = state => {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddEnterprise);\r\n","import React, { Component } from 'react';\r\nimport { GoPlus } from 'react-icons/go';\r\nimport Button from '../../Atoms/Button';\r\nimport './AddTask.scss';\r\n\r\nclass AddTask extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  // }\r\n  state = {};\r\n  clicked = e => {\r\n    if (this.props.AddTaskHandler && typeof this.props.AddTaskHandler) {\r\n      this.props.AddTaskHandler(e);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"addtask-conatainer\" onClick={this.clicked} style={this.props.style?this.props.style:{}}>\r\n        <GoPlus className=\"addtask-create-icon\" />\r\n        <Button className={'addtask-content ' + this.props.className}>\r\n          {this.props.children}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React, { Component } from 'react';\r\nimport GoBack from '../../../Img/arrow-icon.jpg';\r\nimport InputElement from '../../../Atoms/InputElement';\r\nimport Button from '../../../Atoms/Button';\r\nimport Dropdown from '../../../Atoms/DropdownComponent/dropdown';\r\nimport { connect } from 'react-redux';\r\nimport { Enterprise_Config } from '../../../../Store/Enterprise_Config/action';\r\nimport commonAction from '../../../../Store/commonActivity/action';\r\n\r\nclass AddSignal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      enterpriseId: this.props.EnterpriseId ? this.props.EnterpriseId : '',\r\n      signalName: this.props.selectedSignal.signalName\r\n        ? this.props.selectedSignal.signalName\r\n        : '',\r\n      signalDomain: this.props.selectedSignal.signalDomain\r\n        ? this.props.selectedSignal.signalDomain\r\n        : '',\r\n      signalDescription: this.props.selectedSignal.signalDescription\r\n        ? this.props.selectedSignal.signalName\r\n        : '',\r\n      signalSource: this.props.selectedSignal.signalSource\r\n        ? this.props.selectedSignal.signalSource\r\n        : '',\r\n      signalMode: this.props.selectedSignal.signalMode\r\n        ? this.props.selectedSignal.signalMode\r\n        : '',\r\n        enterpriseChannel: this.props.selectedSignal.enterpriseChannel\r\n        ? this.props.selectedSignal.enterpriseChannel\r\n        : '',\r\n      apiendpointurl: this.props.selectedSignal.apiendpointurl\r\n        ? this.props.selectedSignal.apiendpointurl\r\n        : '',\r\n        \r\n      apirrefreshinterval: this.props.selectedSignal.apirrefreshinterval\r\n        ? this.props.selectedSignal.apirrefreshinterval\r\n        : '',\r\n      signalAttributes: [],\r\n    };\r\n  }\r\n  signalAddValidation = () => {\r\n    let {\r\n      enterpriseId,\r\n      signalName,\r\n      signalDomain,\r\n      signalDescription,\r\n      signalSource,\r\n      signalMode,\r\n      apiendpointurl,\r\n      apirrefreshinterval,\r\n      enterpriseChannel,\r\n\r\n      // enterprisesubscriberDesc,\r\n    } = this.state;\r\n    if (!enterpriseId) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'EnterpriseId must be filled',\r\n      });\r\n      return;\r\n    }\r\n    if (!signalName) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'signalName must be filled',\r\n      });\r\n      return;\r\n    }\r\n    if (!signalDomain) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'signalDomain must be filled',\r\n      });\r\n      return;\r\n    }\r\n    if (!signalDescription) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'signalDescription must be filled',\r\n      });\r\n      return;\r\n    }\r\n    // if (!signalSource) {\r\n    //   commonAction.openAlert({\r\n    //     title: 'warning',\r\n    //     text: 'signalSource must be filled',\r\n    //   });\r\n    //   return;\r\n    // }\r\n    if (!signalMode) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'signalMode must be filled',\r\n      });\r\n      return;\r\n    }\r\n    if (!enterpriseChannel) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'enterpriseChannel must be filled',\r\n      });\r\n      return;\r\n    }\r\n    // if (!apiendpointurl) {\r\n    //   commonAction.openAlert({\r\n    //     title: 'warning',\r\n    //     text: 'apiendpointurl must be filled',\r\n    //   });\r\n    //   return;\r\n    // }\r\n    // if (!apirrefreshinterval) {\r\n    //   commonAction.openAlert({\r\n    //     title: 'warning',\r\n    //     text: 'apirrefreshinterval must be filled',\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    this.props.AddNewSingal(this.state);\r\n    this.props.showStoryBoard();\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props, 'propscheck');\r\n    let domainOptions = [\r\n      {\r\n        title: 'FLIGHT',\r\n        selected: false,\r\n      },\r\n      {\r\n        title: 'PAX',\r\n        selected: false,\r\n      },\r\n      {\r\n        title: 'CREW',\r\n        selected: false,\r\n      },\r\n      {\r\n        title: 'BAGGAGE',\r\n        selected: false,\r\n      },\r\n      {\r\n        title: 'ENGG',\r\n        selected: false,\r\n      },\r\n      {\r\n        title: 'GROUND',\r\n        selected: false,\r\n      },\r\n    ];\r\n\r\n    let ChannelList=[\r\n      {\r\n        title:'flight',\r\n        selected:false,\r\n      },\r\n      {\r\n        title:'baggage',\r\n        selected:false,\r\n\r\n      },\r\n      {\r\n        title:'ods',\r\n        selected:false,\r\n      },\r\n      {\r\n        title:'turnmetrics',\r\n    selected:false},\r\n    {\r\n      title:'crew_ua',\r\n      selected:false},\r\n      {\r\n        title:'crew_uax',\r\n        selected:false},\r\n        {\r\n          title:'dd',\r\n          selected:false\r\n        },\r\n      \r\n    \r\n    ]\r\n    let ModeOptions = [\r\n      {\r\n        title: 'API',\r\n        selected: false,\r\n      },\r\n      {\r\n        title: 'Real Time',\r\n        selected: false,\r\n      },\r\n    ];\r\n    domainOptions.map(val => {\r\n      if (this.props.selectedSignal.signalDomain === val.title) {\r\n        val.selected = true;\r\n      } else {\r\n        val.selected = false;\r\n      }\r\n    });\r\n    ChannelList.map(val=>{\r\n      if(this.props.selectedSignal.signalDomain === val.title){\r\n        val.selected=true;\r\n      }else{val.selected=false}\r\n    });\r\n    ModeOptions.map(val => {\r\n      if (this.props.selectedSignal.signalMode === val.title) {\r\n        val.selected = true;\r\n      } else {\r\n        val.selected = false;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        {!this.props.isEditSignal && (\r\n          <div className=\"Enterprice_Story\" onClick={this.props.showStoryBoard}>\r\n            <img className=\"story_img\" src={GoBack} />\r\n            <div className=\"storyTitle\">Add Signal</div>\r\n          </div>\r\n        )}\r\n        <div className=\"Enterprise_Add_Content scroll\">\r\n          <div className=\"Enterprice_StoryBody\">\r\n            <div className=\"Enterprice_StoryBody_Content\">\r\n              <div className=\"Enterprice_StoryBody_Title\">Signal Name</div>\r\n              <div>\r\n                <InputElement\r\n                  defaultValue={\r\n                    this.props.selectedSignal.signalName\r\n                      ? this.props.selectedSignal.signalName\r\n                      : this.state.signalName\r\n                  }\r\n                  disabled={this.props.isEditSignal ? true : false}\r\n                  onChange={e => {\r\n                    this.setState({ signalName: e.target.value });\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"Enterprice_StoryBody_Content\">\r\n              <div className=\"Enterprice_StoryBody_Title\">Description</div>\r\n              <div className=\"Hig85\">\r\n                <InputElement\r\n                  defaultValue={\r\n                    this.props.selectedSignal.signalDescription\r\n                      ? this.props.selectedSignal.signalDescription\r\n                      : this.state.signalDescription\r\n                  }\r\n                  onChange={e => {\r\n                    this.setState({ signalDescription: e.target.value });\r\n                  }}\r\n                  disabled={this.props.isEditSignal ? true : false}\r\n                  placeholder=\"Enter description\"\r\n                />\r\n              </div>\r\n            </div>\r\n                    <div className=\"Enterprise_StoryBody_Row_Content\">\r\n                         <div className=\"Enterprice_StoryBody_Content\">\r\n              <div className=\"Enterprice_StoryBody_Title\">Domain</div>\r\n              <div className=\"wid50\">\r\n                <Dropdown\r\n                  title={\r\n                    this.props.selectedSignal.signalDomain\r\n                      ? this.props.selectedSignal.signalDomain\r\n                      : ''\r\n                  }\r\n                  toggleItem={e => this.setState({ signalDomain: e.title })}\r\n                  list={domainOptions}\r\n                  dropdownDisable={this.props.isEditSignal ? true : false}\r\n                  placeholder=\"Select Domain\"\r\n                  defaultValue={\r\n                    this.props.isDefaultValuerequired\r\n                      ? undefined\r\n                      : this.props.selectedSignal.signalDomain.toUpperCase()\r\n                  }\r\n                />\r\n                </div>\r\n                </div>\r\n                <div className=\"Enterprice_StoryBody_Content\">\r\n <div className=\"Enterprice_StoryBody_Title\">Enterprise Channel</div>\r\n              <div className=\"wid50\">\r\n                <Dropdown\r\n                  title={\r\n                    this.props.selectedSignal.enterpriseChannel\r\n                      ? this.props.selectedSignal.enterpriseChannel\r\n                      : ''\r\n                  }\r\n                  toggleItem={e => this.setState({ enterpriseChannel: e.title })}\r\n                  list={ChannelList}\r\n                  disabled={this.props.isEditSignal ? true : false}\r\n                  dropdownDisable={this.props.isEditSignal ? true : false}\r\n                  placeholder=\"Select Domain\"\r\n                  defaultValue={\r\n                    this.props.isDefaultValuerequired\r\n                      ? undefined\r\n                      : this.props.selectedSignal.enterpriseChannel.toUpperCase()\r\n                  }\r\n                />\r\n              </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"Enterprice_StoryBody_Content\">\r\n              <div className=\"Enterprice_StoryBody_Title\">Mode</div>\r\n              <div className=\"wid40\">\r\n                <Dropdown\r\n                  title={'API'}\r\n                  toggleItem={e => this.setState({ signalMode: e.title })}\r\n                  list={ModeOptions}\r\n                  placeholder=\"Select Mode\"\r\n                  defaultValue={\r\n                    this.props.isDefaultValuerequired\r\n                      ? undefined\r\n                      : this.props.selectedSignal.signalMode.toUpperCase()\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            {this.state.signalMode !== 'Real Time' ? (\r\n              <>\r\n                {' '}\r\n                <div className=\"Enterprice_StoryBody_Content\">\r\n                  <div className=\"Enterprice_StoryBody_Title\">\r\n                    API end point URL\r\n                  </div>\r\n                  <div>\r\n                    <InputElement\r\n                      defaultValue={this.state.apiendpointurl}\r\n                      onChange={e => {\r\n                        this.setState({ apiendpointurl: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"Enterprice_StoryBody_Content\">\r\n                  <div className=\"Enterprice_StoryBody_Title\">\r\n                    API refresh interval\r\n                  </div>\r\n                  <div className=\"Enterprice_Interval\">\r\n                    <InputElement\r\n                      defaultValue={this.state.apirrefreshinterval}\r\n                      onChange={e => {\r\n                        this.setState({ apirrefreshinterval: e.target.value });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>{' '}\r\n              </>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"Bgcolorf8f8f8\">\r\n            <Button onClick={this.props.showStoryBoard}>Cancel</Button>\r\n\r\n            <Button\r\n              className=\"EnterpriseLastChild\"\r\n              style={{ backgroundColor: '#4b50c3', color: 'white' }}\r\n              onClick={\r\n                this.props.isDefaultValuerequired\r\n                  ? () => {\r\n                      // this.props.AddNewSingal(this.state);\r\n                      this.signalAddValidation();\r\n                      // this.props.showStoryBoard();\r\n                    }\r\n                  : () => {\r\n                      this.props.UpdateSingal({\r\n                        ...this.props.selectedSignal,\r\n                        ...this.state,\r\n                      });\r\n                    }\r\n              }\r\n            >\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  AddNewSingal: Enterprise_Config.postNewSingal,\r\n  UpdateSingal: Enterprise_Config.updateSingal,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    EnterpriseDeatails: state.EnterpriceReducer,\r\n    Enterprice_Signal: state.EnterpriseSignal,\r\n  };\r\n};\r\n\r\nAddSignal.defaultProps = {\r\n  selectedSignal: {},\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSignal);\r\n","import React, { Component, createRef } from 'react';\r\nimport Slide from '../../Atoms/slidedown';\r\nimport './mapping.scss';\r\nimport { FaChevronUp, FaChevronDown } from 'react-icons/fa';\r\nimport { MdCheck } from 'react-icons/md';\r\n\r\nclass MappingSignal extends Component {\r\n  state = {};\r\n  activeElement = createRef();\r\n  timeout = 0;\r\n  mappingList = {};\r\n  componentDidMount() {\r\n    this.scrollingToPosition();\r\n  }\r\n\r\n  scrollingToPosition = () => {\r\n    // const node = this.activeElement.current;\r\n    // if (node) {\r\n    //   this.timeout = setTimeout(() => {\r\n    //     node.scrollIntoView({\r\n    //       behavior: 'smooth',\r\n    //       block: 'center',\r\n    //       inline: 'center',\r\n    //     });\r\n    //   }, 900);\r\n    // }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.scrollingToPosition();\r\n  }\r\n\r\n  generateList = (data, newObj) => {\r\n    //   console.log(data, newObj)\r\n    if (typeof data === 'object')\r\n      Object.keys(data).forEach(val => {\r\n        if (typeof data[val] === 'object') {\r\n          if (data[val]['properties']) {\r\n            const temp = JSON.parse(JSON.stringify(data[val]['properties']));\r\n            newObj[val] = temp;\r\n            const path = data.currentListPath\r\n              ? data.currentListPath + '.' + val\r\n              : val;\r\n            newObj[val].currentListPath = path;\r\n            this.generateList(temp, newObj[val]);\r\n          } else if (typeof data === 'object' && data[val]) {\r\n            newObj[val] = data[val];\r\n            const path = data.currentListPath\r\n              ? data.currentListPath + '.' + val\r\n              : val;\r\n            newObj[val].currentListPath = path;\r\n            this.generateList(data[val], newObj[val]);\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  toggleCreation = mapping => {\r\n    // console.log(criteria, selectedSignal, currentAttribute, 'check');\r\n    if (typeof mapping === 'object') {\r\n      return Object.keys(mapping).map((data, i) => {\r\n        if (typeof mapping[data] === 'object' && mapping.hasOwnProperty(data)) {\r\n          const contentData = this.toggleCreation(\r\n            JSON.parse(JSON.stringify(mapping[data]))\r\n          );\r\n\r\n          // console.log(contentData, 'contentData mapping ');\r\n          // if data not available then this is last child\r\n          if (!contentData[0]) {\r\n            // return null;\r\n            // const isActive = currentAttribute === path ? true : false;\r\n            return (\r\n              <div key={i} className={`last-child-mapper`}>\r\n                <div>\r\n                  {data}\r\n                  {/* {isActive && (\r\n                    <div ref={this.activeElement} className=\"mapping-tick\">\r\n                      <MdCheck />\r\n                    </div>\r\n                  )} */}\r\n                </div>\r\n              </div>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <div className=\"mappingslider\">\r\n              <Slide\r\n                header={data}\r\n                content={contentData}\r\n                customToggler={{\r\n                  open: <FaChevronUp />,\r\n                  close: <FaChevronDown />,\r\n                }}\r\n              />\r\n            </div>\r\n          );\r\n        } else {\r\n          return null;\r\n        }\r\n      });\r\n    }\r\n    return null;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props, 'mappin list');\r\n    const { enterpriseId = '', selectedSignal, allSignal } = this.props.data;\r\n\r\n    let ComponentData;\r\n    allSignal.forEach(val => {\r\n      if (val.signalId === selectedSignal) {\r\n        ComponentData = val.signalContent;\r\n      }\r\n    });\r\n\r\n    if (!ComponentData) {\r\n      return (\r\n        <div className=\"error-text-mapping\">\r\n          {' '}\r\n          No Mapping File Uploaded for this Signal\r\n        </div>\r\n      );\r\n    }\r\n    const mappingData =\r\n      (ComponentData &&\r\n        ComponentData.sourcemessage &&\r\n        ComponentData.sourcemessage.mappings &&\r\n        ComponentData.sourcemessage.mappings.properties) ||\r\n      {};\r\n    this.generateList(mappingData, this.mappingList);\r\n\r\n    return (\r\n      <div className=\"mapping-parent\">\r\n        {this.toggleCreation(this.mappingList)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MappingSignal;","import React, { Component } from 'react';\r\nimport Slide from '../../Atoms/slidedown';\r\nimport { FaAngleDown, FaAngleUp } from 'react-icons/fa';\r\nimport AddEnterprise from '../../Page/Enterprise-config/AddEnterpise';\r\nimport './event.scss';\r\nimport { Enterprise_Config } from '../../../Store/Enterprise_Config/action';\r\nimport { connect } from 'react-redux';\r\nimport HoverContainer from '../../Atoms/hoverContainer';\r\nimport commonAction from '../../../Store/commonActivity/action';\r\nimport Popup from '../../Atoms/popup/popup';\r\nimport InputElement from '../../Atoms/InputElement';\r\nimport MappingSignal from './mapping';\r\nimport AddSignal from '../../Page/Enterprise-config/AddSignal';\r\n\r\nclass ComponentACC extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNewSignal: true,\r\n      popUp: false,\r\n      file: '',\r\n      currentView: 'Mapping',\r\n      isEditSignalTriggered: false,\r\n      openedSignal: {},\r\n    };\r\n    this.timer = 0;\r\n\r\n    this.onFormSubmit = this.onFormSubmit.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n  reomveSingal = a => {\r\n    this.props.uploadFile(this.state.file);\r\n  };\r\n  cancelButtonHandlerEnterprise = () => {\r\n    this.setState({ popUp: false });\r\n  };\r\n  uploadAlert = e => {\r\n    e.stopPropagation();\r\n    this.setState({ popUp: true });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  editHandler = (e, value) => {\r\n    e.stopPropagation();\r\n    console.log(value, 'edit value');\r\n    this.setState({\r\n      currentView: 'EDIT',\r\n      isEditSignalTriggered: true,\r\n      openedSignal: value,\r\n    });\r\n  };\r\n\r\n  updateSlider = isOpen => {\r\n    // this.setState({ currentView: 'Mapping' });\r\n\r\n    if (this.state.isEditSignalTriggered && !isOpen) {\r\n      clearTimeout(this.timer);\r\n      this.timer = setTimeout(() => {\r\n        this.setState({\r\n          currentView: 'Mapping',\r\n          isEditSignalTriggered: false,\r\n          openedSignal: {},\r\n        });\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  deleteHandler = (e, value) => {\r\n    e.stopPropagation();\r\n    // let deleteSignal = value.enterpriseId == value.signalId;\r\n    this.props.deleteFile(value);\r\n  };\r\n\r\n  onFormSubmit = (condition, signal) => {\r\n    if (condition === 'save') {\r\n      console.log('uploadsuccess', signal.signalId);\r\n      this.props.uploadFile(\r\n        this.state.file,\r\n        signal.enterpriseId,\r\n        signal.signalId\r\n      );\r\n    }\r\n    this.setState({ popUp: false });\r\n  };\r\n\r\n  onChange(e, signalId) {\r\n    this.setState({ file: e.target.files[0], signalId: signalId });\r\n  }\r\n\r\n  render() {\r\n    if (this.props.data && !this.props.data.length) {\r\n      return (\r\n        <div className=\"no-signal\">\r\n          No signals available. <br /> Click “Add Signal” to create.\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.props.data.map((value, index) => (\r\n          <Slide\r\n            key={\r\n              this.state.isEditSignalTriggered &&\r\n              this.state.openedSignal.signalId === value.signalId\r\n                ? Math.random()\r\n                : index\r\n            }\r\n            open={\r\n              this.state.isEditSignalTriggered &&\r\n              this.state.openedSignal.signalId === value.signalId\r\n                ? true\r\n                : false\r\n            }\r\n            styleForIcon={{\r\n              justifyContent: 'left',\r\n              display: 'flex',\r\n            }}\r\n            sliderStatus={(open, e) => this.updateSlider(open)}\r\n             header={ \r\n              <HoverContainer\r\n                className=\"pad40\"\r\n                isUploadIconShow=\"true\"\r\n                \r\n                uploadHandler={e => this.uploadAlert(e, value)}\r\n                editHandler={e => this.editHandler(e, value)}\r\n                deleteHandler={e => this.deleteHandler(e, value)}\r\n              >\r\n                <div className=\"Story_Slide_Header\">\r\n                  <div style={{ display: 'flex' }}>\r\n                    <div className=\"Story1\">\r\n                      <div className=\"Story_Slide_Header_Title\">\r\n                        {value.signalName} \r\n                      </div>\r\n                      <div className=\"Story_Slide_Header_Content\">\r\n                        {value.signalDescription}\r\n                      </div>\r\n                      </div>\r\n                      <div className=\"enterprie-button\">\r\n                        {value.enterpriseChannel}\r\n                        </div>\r\n                      <Popup\r\n                        isOpen={this.state.popUp}\r\n                        buttonText={'Upload'}\r\n                        heading={'Upload Metadata'}\r\n                        clickHandler={(e, condition) => {\r\n                          e.stopPropagation();\r\n                          this.onFormSubmit(condition, value);\r\n                        }}\r\n\r\n                        \r\n                      >\r\n                        <div className=\"\">\r\n                          <InputElement\r\n                           \r\n                            type=\"file\"\r\n                           \r\n\r\n                            onChange={e => this.onChange(e, 'signalId')}\r\n                          />\r\n                        </div>\r\n                      </Popup>\r\n                     \r\n                    </div>\r\n                  </div>\r\n                {/* </div> */}\r\n              </HoverContainer>\r\n             }\r\n            content={\r\n              this.state.currentView === 'EDIT' ? (\r\n                <AddSignal\r\n                  showStoryBoard={() => {\r\n                    this.setState({ currentView: 'Mapping' });\r\n                  }}\r\n                  EnterpriseId={value.enterpriseId}\r\n                  isDefaultValuerequired={false}\r\n                  isEditSignal={true}\r\n                  selectedSignal={value}\r\n                />\r\n              ) : (\r\n                <MappingSignal\r\n                  data={{\r\n                    selectedSignal: value.signalId,\r\n                    enterpriseId: value.enterpriseId,\r\n                    allSignal: this.props.allSignal,\r\n                  }}\r\n                />\r\n              )\r\n            }\r\n            customToggler={{\r\n              open: togglerComponent(<FaAngleUp />),\r\n              close: togglerComponent(<FaAngleDown />),\r\n            }}\r\n          /> \r\n         ))} \r\n      </div>\r\n    );\r\n  }}\r\n// }\r\nconst mapDispatchToProps = {\r\n  reomveSingal: Enterprise_Config.deleteSingal,\r\n  uploadFile: Enterprise_Config.uploadFileInfo,\r\n  updateFile: Enterprise_Config.updateSingal,\r\n  deleteFile: Enterprise_Config.deleteSingal,\r\n};\r\n// const mapStateToProps = state => {};\r\nfunction mapStateToProps(state) {\r\n  return { state: state.businesseventConfigReducer };\r\n}\r\nexport const SignalACC = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ComponentACC);\r\n\r\nexport const togglerComponent = Content => {\r\n  return <div className=\"togglerIcon_story\">{Content}</div>;\r\n};\r\n\r\nexport const SingalDeatils = ({ data, SingalDeatils, ...props }) => {\r\n  console.log(data, SingalDeatils, 'datasign');\r\n  return <SignalACC data={data} allSignal={SingalDeatils} {...props} />;\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Tabs, TabPanel, TabList, Tab } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport './Nav.scss';\r\nimport { SingalDeatils } from '../Event';\r\n\r\nexport default class Nav_Tabs extends Component {\r\n  TabItem = [\r\n    {\r\n      title: 'FLIGHT',\r\n      signalData: [],\r\n    },\r\n    {\r\n      title: 'PAX',\r\n      signalData: [],\r\n    },\r\n    {\r\n      title: 'CREW',\r\n      signalData: [],\r\n    },\r\n    {\r\n      title: 'BAG',\r\n      signalData: [],\r\n    },\r\n    {\r\n      title: 'ENGG',\r\n      signalData: [],\r\n    },\r\n    {\r\n      title: 'GROUND',\r\n      signalData: [],\r\n    },\r\n  ];\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.SingalDeatils, 'lop did');\r\n  }\r\n\r\n  generateItem = () => {\r\n    const signal = this.props.SingalDeatils || [];\r\n    this.TabItem = this.TabItem.map(val => {\r\n      val.signalData = [];\r\n      return val;\r\n    });\r\n    if (signal && signal.length) {\r\n      this.TabItem.forEach(val => {\r\n        signal.forEach(currentSignal => {\r\n          if (\r\n            val.title === currentSignal.signalDomain.toUpperCase() &&\r\n            currentSignal.enterpriseId === this.props.EnterpriseId\r\n          ) {\r\n            val.signalData.push(currentSignal);\r\n          }\r\n        });\r\n      });\r\n      return this.TabItem;\r\n    }\r\n    return this.TabItem;\r\n  };\r\n\r\n  // componentDidUpdate(prevProps) {\r\n  //   console.log(prevProps, this.props, 'lop');\r\n\r\n  //   if (prevProps.SingalDeatils !== this.props.SingalDeatils) {\r\n  //     this.setState(prevState => {\r\n  //       let state = prevState.TabItem;\r\n  //       prevState.TabItem.map((data, i) => {\r\n  //         this.props.SingalDeatils.map(signal => {\r\n  //           if (data.title === signal.signalDomain.toUpperCase()) {\r\n  //             if (!state[i].SingalData.includes(signal)) {\r\n  //               state[i].SingalData.push(signal);\r\n  //             }\r\n  //           }\r\n  //         });\r\n  //       });\r\n\r\n  //       state.map((data, index) => {\r\n  //         Array.from(new Set(data.SingalData));\r\n\r\n  //         data.SingalData.map((val, ind) => {\r\n  //           console.log(val.enterpriseId === this.props.EnterpriseId, 'sss');\r\n  //           if (val.enterpriseId !== this.props.EnterpriseId) {\r\n  //             data.SingalData.splice(ind, 1);\r\n  //           }\r\n  //         });\r\n  //       });\r\n\r\n  //       return {\r\n  //         TabItem: state,\r\n  //       };\r\n  //     });\r\n  //   }\r\n  // }\r\n  render() {\r\n    let getItem = this.generateItem();\r\n    console.log(getItem, 'getItem');\r\n    return (\r\n      <>\r\n        <Tabs className=\"main-tab\">\r\n          <TabList className=\"tab-main-div\">\r\n            {getItem.map((tab, index) => (\r\n              <Tab className=\"tablist\" key={index}>\r\n                {tab.title}\r\n              </Tab>\r\n            ))}\r\n          </TabList>\r\n          <div className=\"right-accordian-view scroll\">\r\n            {getItem.map((tab, index) => (\r\n              <TabPanel className=\"tab-panel scroll\" key={index}>\r\n                <SingalDeatils\r\n                  data={tab.signalData}\r\n                  title={tab.title}\r\n                  {...this.props}\r\n                />\r\n              </TabPanel>\r\n            ))}\r\n          </div>\r\n        </Tabs>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport InputElement from '../../../Atoms/InputElement';\r\nimport Button from '../../../Atoms/Button';\r\nimport { Enterprise_Config } from '../../../../Store/Enterprise_Config/action';\r\nimport { connect } from 'react-redux';\r\nimport commonAction from '../../../../Store/commonActivity/action';\r\n\r\nclass AddSubscriber extends Component {\r\n  state = {\r\n    subscriberName: '',\r\n    subscriberDesc: '',\r\n    subscriberId: '',\r\n    deactivate: '',\r\n  };\r\n  subscriberAddValidation = () => {\r\n    let {\r\n      subscriberName,\r\n      subscriberDesc,\r\n      // enterpriseIATACode,\r\n      // enterprisesubscriberDesc,\r\n    } = this.state;\r\n    if (!subscriberName) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'Subscriber Name must be filled',\r\n      });\r\n      return;\r\n    }\r\n    if (!subscriberDesc) {\r\n      commonAction.openAlert({\r\n        title: 'warning',\r\n        text: 'Enterprise subscriberDesc must be filled',\r\n      });\r\n      return;\r\n    }\r\n    // if (!enterpriseId) {\r\n    //   commonAction.openAlert({\r\n    //     title: 'warning',\r\n    //     text: 'Enterprise ID must be filled',\r\n    //   });\r\n    //   return;\r\n    // }\r\n\r\n    this.props.AddNewSubscriber(this.state);\r\n    this.props.CancelView();\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Enterprise_main\">\r\n        <div className=\"Enterprise_main_Name\">\r\n          <div className=\"Enterprise_Name\">Subscriber Channel</div>\r\n          <div className=\"Enterprise_Name_text\">\r\n            <InputElement\r\n              defaultValue={this.state.subscriberName}\r\n              onChange={e => {\r\n                this.setState({ subscriberName: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"Enterprise_main_Name\">\r\n          <div className=\"Enterprise_Name\">Channel Description</div>\r\n          <div className=\"Enterprise_Name_text\">\r\n            <InputElement\r\n              defaultValue={this.state.subscriberDesc}\r\n              onChange={e => {\r\n                this.setState({ subscriberDesc: e.target.value });\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Enterprise_Buttons\">\r\n          <Button onClick={() => this.props.CancelView()}>Cancel</Button>\r\n\r\n          <Button\r\n            style={{ backgroundColor: '#4b50c3', color: 'white' }}\r\n            onClick={() => {\r\n              this.subscriberAddValidation();\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export default AddSubscriber;\r\nconst mapDispatchToProps = {\r\n  AddNewSubscriber: Enterprise_Config.postNewSubscriber,\r\n};\r\nconst mapStateToProps = state => {};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddSubscriber);\r\n","import React, { Component } from 'react';\r\nimport GoBack from '../../../Img/arrow-icon.jpg';\r\nimport { FaMinus, FaPlus } from 'react-icons/fa';\r\nimport './Subscriber.scss';\r\nimport AddSubscriber from '../Add Subscriber/AddSubscriber';\r\nimport { Enterprise_Config } from '../../../../Store/Enterprise_Config/action';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Subscriber extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showAddSubscriber: false,\r\n      // showStoryBoard: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.GetSubscriber();\r\n  }\r\n  showAddSubscriber = () => {\r\n    this.setState({ showAddSubscriber: !this.state.showAddSubscriber });\r\n  };\r\n  goStoryBoard = () => {\r\n    // this.setState({ goStoryBoard: this.props.goStoryBoard });\r\n    this.props.CancelView();\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"Enterprice_Story\"\r\n          onClick={this.props.showStoryBoardSubscriber}\r\n        >\r\n          <img className=\"story_img\" src={GoBack} />\r\n          <div className=\"storyTitle\">Subscribers</div>\r\n        </div>\r\n        <div className=\"SubscriberDetails scroll\">\r\n          {!this.state.showAddSubscriber ? (\r\n            <div className=\"Subscriber_Story\" onClick={this.showAddSubscriber}>\r\n              <div className=\"story_img\">\r\n                <FaPlus color=\"#7b83f7\" />\r\n              </div>\r\n              <div className=\"storyTitle\">Add Subscriber</div>\r\n            </div>\r\n          ) : (\r\n            <AddSubscriber CancelView={this.showAddSubscriber} />\r\n          )}\r\n          <div className=\"Subscriber_view_list\">\r\n            {this.props.SubscriberDetails.map((Subscriber, index) => (\r\n              <div className=\"Subscriber_MainContent\">\r\n                <div className=\"Subscriber_title\">\r\n                  {Subscriber.subscriberName}\r\n                </div>\r\n                <div className=\"Subscriber_Content\">\r\n                  {Subscriber.subscriberDesc}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  GetSubscriber: Enterprise_Config.get_subscriber,\r\n};\r\nconst mapStateToProps = state => {\r\n  return { SubscriberDetails: state.SubscriberReducer };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Subscriber);\r\n","import React, { Component } from 'react';\r\nimport AddTask from '../../../Molecules/AddTask';\r\nimport AddSignal from '../AddSignal';\r\nimport Nav_Tabs from '../../../Molecules/Nav-Tabs';\r\nimport { connect } from 'react-redux';\r\nimport Add_Subscriber from '../Add Subscriber';\r\nimport SearchBox from '../../../Atoms/SearchBox';\r\nimport '../Header_enterprise/Mainheader.scss';\r\n\r\nclass StoryBoard extends Component {\r\n  state = {\r\n    showAddSignal: false,\r\n    showSubscriber: false,\r\n    SearchString: '',\r\n    isEdit: false,\r\n  };\r\n\r\n  viewAddSignal = val => {\r\n    this.setState({\r\n      showAddSignal: !this.state.showAddSignal,\r\n      isEdit: val === 'EDIT' ? true : false,\r\n    });\r\n  };\r\n  Subscriber = () => {\r\n    this.setState({ showSubscriber: !this.state.showSubscriber });\r\n  };\r\n  searchHandler = (e, list) => {\r\n    this.setState({ SearchString: e.target.value, list });\r\n    console.log(list, this.state.SearchString, 'searchHandler');\r\n  };\r\n  render() {\r\n    let searchString = this.state.SearchString;\r\n    let enterpriseValue = this.props.Enterprice_Signal;\r\n\r\n    const list = searchString.length ? this.state.list : enterpriseValue;\r\n    console.log(this.props, 'getting list');\r\n\r\n    return (\r\n      <div>\r\n        {this.props.Enterprice_Signal &&\r\n        this.props.Enterprice_Signal.length >= 0 ? (\r\n          this.state.showAddSignal ? (\r\n            <AddSignal\r\n              showStoryBoard={this.viewAddSignal}\r\n              EnterpriseId={this.props.Enterprise_ID}\r\n              isDefaultValuerequired={!this.state.isEdit}\r\n            />\r\n          ) : this.state.showSubscriber ? (\r\n            <Add_Subscriber\r\n              showStoryBoardSubscriber={this.Subscriber}\r\n              EnterpriseId={this.props.Enterprise_ID}\r\n              isDefaultValuerequired={!this.state.isEdit}\r\n            />\r\n          ) : (\r\n            <div>\r\n              <div className=\"Enterprice_Story\">\r\n                {/* <div className=\"Enterprice_Story_Filter wid65\"> */}\r\n                <SearchBox\r\n                  className=\"Enterprice_Story_Filter wid65\"\r\n                  onChange={this.searchHandler}\r\n                  list={this.props.Enterprice_Signal}\r\n                  // list={this.state.list}\r\n                  value={this.state.SearchString}\r\n                  filterBy={['signalName']}\r\n                  placeholder=\"Search by Name\"\r\n                />\r\n                {/* </div> */}\r\n                <AddTask\r\n                  className=\"EventConfigSignalName wid65\"\r\n                  AddTaskHandler={this.viewAddSignal}\r\n                >\r\n                  Add Signal\r\n                </AddTask>\r\n                <AddTask\r\n                  // className=\"EventConfigSubscriberName\"\r\n                  AddTaskHandler={this.Subscriber}\r\n                  className=\"EventConfigSubscriberName wid65\"\r\n                >\r\n                  Subscribers\r\n                </AddTask>\r\n              </div>\r\n              <div>\r\n                <Nav_Tabs\r\n                  SingalDeatils={list}\r\n                  EnterpriseId={this.props.Enterprise_ID}\r\n                  showSingal={this.viewAddSignal}\r\n                />\r\n              </div>\r\n            </div>\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    EnterpriseDeatails: state.EnterpriceReducer,\r\n    Enterprice_Signal: state.EnterpriseSignal,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StoryBoard);\r\n","import React, { Component } from 'react';\r\nimport AddEnterprise from '../AddEnterpise';\r\nimport { FaMinus, FaPlus } from 'react-icons/fa';\r\nimport { connect } from 'react-redux';\r\nimport { Enterprise_Config } from '../../../../Store/Enterprise_Config/action';\r\nimport Slide from '../../../Atoms/slidedown';\r\nimport AddTask from '../../../Molecules/AddTask';\r\nimport StoryBoard from '../EnterpriseStoryBoard';\r\nimport SearchBox from '../../../Atoms/SearchBox';\r\nimport '../Header_enterprise/Mainheader.scss';\r\n\r\nclass EnterPriceList extends Component {\r\n  state = {\r\n    showAddEnterprise: false,\r\n    SearchString: '',\r\n    data: this.props.EnterpriseDeatails,\r\n    clickedEnterprise: '',\r\n  };\r\n  ShowAddEnterprise = () => {\r\n    this.setState({\r\n      showAddEnterprise: !this.state.showAddEnterprise,\r\n    });\r\n  };\r\n  showDetails = (index, value) => {\r\n    if (this.state.clickedEnterprise !== value) {\r\n      this.setState({\r\n        clickedEnterprise: value,\r\n      });\r\n      this.props.showStoryBoard(value);\r\n      this.props.getSignalDetails(value);\r\n    }\r\n    this.setState({ showStory: true, activeIndex: index });\r\n  };\r\n  contentComponent = Content => {\r\n    return (\r\n      <div className=\"tab-content\" style={this.props.style}>\r\n        {Content}\r\n      </div>\r\n    );\r\n  };\r\n  togglerComponent = Content => {\r\n    return (\r\n      <div className=\"togglerIcon\" style={this.props.style}>\r\n        {Content}\r\n      </div>\r\n    );\r\n  };\r\n  headerComponent = header => {\r\n    return (\r\n      <div className=\"heading_AddEvent\">\r\n        <label className=\"tab_label_addEvent\">{header}</label>\r\n      </div>\r\n    );\r\n  };\r\n  render() {\r\n    let searchString = this.state.SearchString.trim().toLowerCase();\r\n    let enterpriseValue = [...this.props.EnterpriseDeatails];\r\n    console.log(enterpriseValue, 'testEnterprise');\r\n    if (searchString.length > 0) {\r\n      enterpriseValue = enterpriseValue.filter(item => {\r\n        const newValue = Object.keys(item).filter(key =>\r\n          key === 'id'\r\n            ? false\r\n            : item[key].toLowerCase().match(searchString)\r\n            ? true\r\n            : false\r\n        );\r\n        return newValue.length > 0;\r\n      });\r\n    }\r\n    return (\r\n      <>\r\n        <div>\r\n          {this.state.showAddEnterprise ? (\r\n            <>\r\n              <Slide\r\n                header={this.headerComponent('Add Enterprise')}\r\n                content={this.contentComponent(\r\n                  <AddEnterprise CancelView={this.ShowAddEnterprise} />\r\n                )}\r\n                className=\"enterprise-slide-content\"\r\n                open={true}\r\n                customToggler={{\r\n                  open: this.togglerComponent(<FaPlus color=\"#4951c3\" />),\r\n                  close: this.togglerComponent(<FaMinus color=\"#4951c3\" />),\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <div className=\"Enterprice_Body_Filter\">\r\n              <div className=\"Enter_Body_left_text\">\r\n                <SearchBox\r\n                  className=\"Event-config-searchBar\"\r\n                  type=\"text\"\r\n                  placeholder=\"Search by Name\"\r\n                  value={this.state.searchString}\r\n                  onChange={e =>\r\n                    this.setState({ SearchString: e.target.value })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"wid40\">\r\n                <AddTask AddTaskHandler={this.ShowAddEnterprise}>\r\n                  Add Enterprise\r\n                </AddTask>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"Enterprice_content_main scroll\">\r\n            {enterpriseValue.map((data, index) => (\r\n              <div\r\n                className={\r\n                  this.state.activeIndex === index\r\n                    ? 'Enterprice_content borderBlue'\r\n                    : 'Enterprice_content'\r\n                }\r\n                onClick={() => this.showDetails(index, data.enterpriseId)}\r\n              >\r\n                <div className=\"Enterprice_content_1\">\r\n                  <div className=\"Enterprice_content_title\">\r\n                    {data.enterpriseId}\r\n                  </div>\r\n                  <div className=\"Enterprice_content_Airline\">\r\n                    {data.enterpriseName}\r\n                  </div>\r\n                  {/* <div className=\"Enterprice_content_singal_main\">\r\n                    <div className=\"Enterprice_content_singal\">\r\n                      {data.singalNum} SIGNALS\r\n                    </div>\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"Enterprice_content_2\">\r\n                  {data.enterpriseDescription}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getSignalDetails: Enterprise_Config.getSignalDetail,\r\n  deleteSignalDetails: Enterprise_Config.deleteSingal,\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    EnterpriseDeatails: state.EnterpriceReducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnterPriceList);\r\n","import React, { Component } from 'react';\r\nimport './Mainheader.scss';\r\nimport EnterPriceList from '../EnterpriseList';\r\nimport StoryBoard from '../EnterpriseStoryBoard';\r\nimport { connect } from 'react-redux';\r\nimport { Enterprise_Config } from '../../../../Store/Enterprise_Config/action';\r\nimport Enterprise_config from '..';\r\nimport upArrow from '../../../Img/upArrow.png';\r\nclass Mainheader extends Component {\r\n  // constructor(props){\r\n  // super(props);\r\n  // this.state\r\n  state = {\r\n    showStory: false,\r\n    Enterprise_ID: ' ',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getdata();\r\n  }\r\n  showStoryBoard = Enterprise_ID => {\r\n    this.setState({ showStory: true, Enterprise_ID: Enterprise_ID });\r\n  };\r\n  render() {\r\n    console.log(this.state.Enterprise_ID, this.props, 'show');\r\n    return (\r\n      <div className=\"Enterprice_Main\">\r\n        <div className=\"Enterprice_Header\">Enterprise Events</div>\r\n        <div className=\"Enterprice_Body\">\r\n          <div className=\"Enterprice_Body_left\">\r\n            <EnterPriceList showStoryBoard={this.showStoryBoard} />\r\n          </div>\r\n          <div className=\"Enterprice_Body_right\">\r\n            {this.state.showStory ? (\r\n              <StoryBoard Enterprise_ID={this.state.Enterprise_ID} />\r\n            ) : (\r\n              <NoEvent />\r\n            )}\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst NoEvent = () => {\r\n  return (\r\n    <div className=\"noenterpriseevent\">\r\n      <div>\r\n        <img src={upArrow} />\r\n      </div>\r\n      Select an \"Enterprise\" to view\r\n    </div>\r\n  );\r\n};\r\nconst mapDispatchToProps = {\r\n  getdata: Enterprise_Config.getEnterpriseDetails,\r\n};\r\nconst mapStateToProps = state => {\r\n  //  console.log(state.EnterpriseSignal);\r\n  return {\r\n    EnterpriseDeatails: state.EnterpriceReducer,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mainheader);\r\n","import React, { Component } from 'react';\r\nimport Mainheader from './Header_enterprise/Mainheader';\r\n\r\nexport default class Enterprise_config extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n       \r\n          <Mainheader />\r\n    \r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}